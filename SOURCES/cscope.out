cscope 15 $HOME/lanl/sw/fuse/playpen/slurmfs/SOURCES               0000798312
	@inc/linkage/fuse.h

6 
	~"rmfs/ty≥s.h
"

7 
	~"rmfs/c⁄f.h
"

9 #i‚de‡
RMFS_FUSE_LINKAGE_H_


10 
	#RMFS_FUSE_LINKAGE_H_


	)

12 #i‚de‡
FUSE_USE_VERSION


13 
	#FUSE_USE_VERSION
 26

	)

16 
	~<fu£/fu£.h
>

17 
	~<fu£/fu£_›t.h
>

26 
	s¶urm_fu£_›t_desc
 {

27 *
	m_s
;

28 *
	m_l⁄g
;

30 *
	mnm
;

31 
c⁄fig_∑øm
 *
	mp_˝
;

33 *
	mhñp
;

34 
›t_Êg_t
 
	moÊg
;

36 
¶urm_fu£_›t_desc
 
	t¶urm_fu£_›t_desc_t
;

38 
fu£_›t
 *
p_fu£›ts_tbl
;

39 
fu£›ts_Àn
;

41 
¶urm_fu£_›t_desc_t
 
¶urm_f›ts
[];

42 
fu£_›î©i⁄s
 
rmfs_fûe_›s
;

44 
	#N_SLURM_FOPTS
 ((
¶urm_f›ts
)/(
¶urm_fu£_›t_desc
))

	)

45 
	#N_SLURMFS_CONFIG
 ((
¶urmfs_c⁄fig
)/(
c⁄fig_∑øm
))

	)

52 
fu£_¨gs
 
	gf_¨gs
;

	@inc/linkage/selinux.h

3 
	~<£löux/£löux.h
>

5 #i‚de‡
SELINUX_LINKAGE_H_


6 
	#SELINUX_LINKAGE_H_


	)

15 
	#XATTR_NM_MAXLEN
 (32)

	)

16 
	#XATTR_CTX_MAXLEN
 (96)

	)

20 
	#CTX_XATTR_NM
 "£curôy.£löux"

	)

21 
	#˘x_DEFAULT
 "sy°em_u:obje˘_r:¶urmd_t"

	)

22 
	#CTX_DEFAULT_S0
 "sy°em_u:obje˘_r:¶urmd_t:s0"

	)

23 
	#CTX_JOBID
 "sy°em_u:obje˘_r:¶urm_job_t"

	)

24 
	#CTX_JOBID_S0
 "sy°em_u:obje˘_r:¶urm_job_t:s0"

	)

25 
	#CTX_JOBID_EXEC
 "sy°em_u:obje˘_r:¶urm_job_exec_t"

	)

26 
	#CTX_JOBID_EXEC_S0
 "sy°em_u:obje˘_r:¶urm_job_exec_t:s0"

	)

28 
	#CTX_JOBID_DEFAULT
 (
	`is_£löux_íabÀd
(Ë&& 
	`is_£löux_mls_íabÀd
()? 
CTX_JOBID_S0
: 
CTX_JOBID
)

	)

29 
	#CTX_DEFAULT
 (
	`is_£löux_íabÀd
(Ë&& 
	`is_£löux_mls_íabÀd
()? 
CTX_DEFAULT_S0
: 
˘x_DEFAULT
)

	)

31 
	#XATTR_SIG
 "£curôy.sig«tuª"

	)

32 
	#XATTR_SIGTYP
 "£curôy.sigty≥"

	)

33 
	#SIGTYP_DJBHASH
 "djb_hash"

	)

	@inc/linkage/slurm.h

2 
	~<¶urm/¶urm.h
>

3 
	~<¶urm/•™k.h
>

	@inc/rmfs.h

3 #i‚de‡
RMFS_H_


4 
	#RMFS_H_


	)

12 
	~<sys/ty≥s.h
>

13 
	~<as£π.h
>

14 
	~<©å/x©å.h
>

15 
	~<˘y≥.h
>

16 
	~<dúít.h
>

17 
	~<î∫o.h
>

18 
	~<f˙é.h
>

19 
	~<öây≥s.h
>

20 
	~<libgí.h
>

21 
	~<limôs.h
>

22 
	~<sys/mm™.h
>

23 
	~<sig«l.h
>

24 
	~<sys/sockë.h
>

25 
	~<°ddef.h
>

26 
	~<°dio.h
>

27 
	~<°döt.h
>

28 
	~<°dlib.h
>

29 
	~<°rög.h
>

30 
	~<bsd/°rög.h
>

31 
	~<sy£xôs.h
>

32 
	~<sys/°©.h
>

33 
	~<time.h
>

34 
	~<sys/ty≥s.h
>

35 
	~<uni°d.h
>

37 
	~"lökage/fu£.h
"

38 
	~"lökage/£löux.h
"

39 
	~"lökage/¶urm.h
"

41 
	~"rmfs/ty≥s.h
"

42 
	~"rmfs/∑øm.h
"

43 
	~"rmfs/backög°‹e.h
"

44 
	~"rmfs/c⁄f.h
"

45 
	~"rmfs/∫ode.h
"

46 
	~"rmfs/misc.h
"

48 
	eöge°_cy˛es
 {

49 
	mINGEST_PREVSTATE
 = -1,

50 
	mINGEST_COLDSTART
 = 0,

51 
	mINGEST_1
 = 
INGEST_COLDSTART
 + 1,

52 
	mINGEST_2
 = 
INGEST_1
 + 1,

53 
	mINGEST_3
 = 
INGEST_1
 + 2,

54 
	mINGEST_MAX
 = 
INGEST_3
,

55 } 
	töge°_cy˛e_t
;

57 
	#NXT_öge°_cy˛e
(
_∑ss_no
Ë((_∑ss_noË>0? (_∑ss_noË+ 1: ((
INGEST_MAX
)+1))

	)

	@inc/rmfs/backingstore.h

2 #i‚de‡
RMFS_backög°‹e_H


3 
	#RMFS_backög°‹e_H


	)

42 
	#BS_MIN_INF_EXP_SPACE
 (8)

	)

43 
	#BS_FORMAT_VERSION
 1.0

	)

45 
	sbackög°‹e_hódî_ty≥
 {

46 
	mhódî
 :1;

47 
	mnode_dñè
 :1;

48 
	möföôe_expú©i⁄
 :1;

49 
	mb¨rõr
 :1;

50 
	m_unu£d
 :((Ë* 
NBBY
) - 5;

51 
	måaûî
 :1;

52 } 
	tbs_hdπyp_t
;

54 
	sbackög°‹e_hódî
 {

55 
bs_hdπyp_t
 
	mhtyp
;

56 
	mf‹m©_vîsi⁄
;

57 
time_t
 
	mtime_°amp
;

58 
pid_t
 
	mow√r
;

59 
	msize
;

60 
	mn_öföôe_expú©i⁄
;

61 
	mœ°_wrôãn
;

62 
	mho°
[
HOST_NAME_MAX
];

63 
	mm¨kî
;

64 } 
	tbs_hdr_t
;

66 
	sÆig√d_backög°‹e_ªc‹d
 {

68 
	sbackög°‹e_ªc‹d
 {

69 
bs_hdπyp_t
 
	mhtyp
;

70 
time_t
 
	mtm_exp
;

71 
uöt32_t
 
	mjob_id
;

72 
	m∫_sig
;

73 
	sx©å
 {

74 
	mnm
[
XATTR_NM_MAXLEN
];

75 
	m˘x
[
XATTR_CTX_MAXLEN
];

76 } 
	mx©å
;

77 } 
	m_r
;

78 
bs_hdr_t
 
	mÆign
;

79 } 
	m_u
;

80 } 
	tbs_ªc‹d_t
;

82 
	e˛aim_a˘i⁄
 {

83 
	mCL_TEST
 = 0,

84 
	mCL_CLAIM
 = 1

85 } 
	t˛aim_t
;

87 
	emîge_bs_sour˚
 {

88 
	mMS_PREDECESSOR
 = -1,

89 
	mMS_UNDEFINED
 = 0,

90 
	mMS_BACKINGSTORE
 = 1,

91 
	mMS_CONTROLLER
 = 2

92 } 
	tmîge_bs_sour˚_t
;

94 
åi_t
 
˛aim_BackögSt‹e
(
c⁄fig_∑øm_t
 *, c⁄fig_∑øm_à*, 
˛aim_t
);

95 
åi_t
 
›í_BackögSt‹e
(
c⁄fig_∑øm_t
 *, );

96 
åi_t
 
mîge_BackögSt‹e
(
c⁄fig_∑øm_t
 *, 
mîge_bs_sour˚_t
);

97 
åi_t
 
ªque°Wrôe_BackögSt‹e
(*);

98 
åi_t
 
•awn_BackögSt‹ñi°íî
(
c⁄fig_∑øm_t
 *);

	@inc/rmfs/conf.h

39 #i‚de‡
RMFS_CONF_H_


40 
	#RMFS_CONF_H_


	)

42 
	~"rmfs.h
"

43 
	~"lökage/¶urm.h
"

45 
	#CP_UNK_SIZE
 (~0)

	)

50 
	srmfs_∑øm
 {

51 
	uue
 {

53 *
	m±r
;

54 *
	mba£_addr
;

57 *
	m°r
;

58 *
	m∑thnm
;

59 *
	mho°«me
;

60 **
	m¨øy_°r
;

63 
	mul
;

64 
	mui
;

65 
uöt16_t
 
	mui_16
;

66 
uöt32_t
 
	mui_32
;

67 
	ml
;

68 
	mi
;

69 
uid_t
 
	muid
;

70 
gid_t
 
	mgid
;

71 
pid_t
 
	mpid
;

72 
time_t
 
	mtime
;

73 
åi_t
 
	måuth
;

74 
boﬁ_t
 
	mbåuth
;

77 
Æig√d_backög°‹e_ªc‹d
 *
	mbs
;

78 } 
	mue
;

79 
size_t
 
	msize
;

81 
	s∑th_des¸ùt‹
 {

82 *
	mfuŒ∑th
;

83 
pid_t
 
	mow√r
;

84 
	mfd
;

85 
FILE
 *
	mf°r
;

86 
	mis_mm≠≥d
:1;

87 
	mis_fûe°r
:1;

88 
	mours
:1;

89 } 
	mpd
;

91 
rmfs_∑øm
 
	trmfs_∑øm_t
;

94 
	sc⁄fig_∑øm
 {

95 
rmfs_∑øm_t
 
	mvÆ
;

96 
rmfs_∑øm_t
 
	mdeÁu…_vÆ
;

97 
±yp_t
 
	mtyp
;

99 
	s§c
 {

100 
∑øm_sour˚_t
 
	mÆlowed
;

101 
∑øm_sour˚_t
 
	ma˘uÆ
;

102 
∑øm_sour˚_t
 
	mdebug
;

103 } 
	m§c
;

104 *
	mnm
;

105 
	mh
;

106 
∑øm_sour˚_t
 (*
cﬁÀ˘‹
)(
	mc⁄fig_∑øm
 *);

107 
	sdïíds_⁄
 {

108 *
	mnm
;

109 
c⁄fig_∑øm
 *
	mp_˝
;

110 } 
	mdïíds_⁄
;

113 
¶urm_fu£_›t_desc
 *
	mp_f›d
;

114 
fu£_›t
 *
	mp_fo
;

117 
	s§c_•ecific
 {

118 
	s¶urm_öfo
 {

119 
±yp_t
 
	m∑ª¡_ty≥
;

120 *
	mba£_addr
;

121 
off_t
 
	moff
;

122 
∑πôi⁄_öfo_msg_t
 *
	mpim
;

123 
node_öfo_msg_t
 *
	mnim
;

124 
job_öfo_msg_t
 *
	mjim
;

125 
job_°ï_öfo_ª•⁄£_msg_t
 *
	m°im
;

126 
	mdy«mic
:1;

128 } 
	m¶urm
;

129 
	srmfs_öfo
 {

130 
±yp_t
 
	m∑ª¡_ty≥
;

131 
	mloˇl
:1;

132 
	mfs
:1;

133 
	mbackög°‹e
:1;

135 } 
	mrmfs
;

136 } 
	m≥r_§c
;

139 
∫ode
 *
	mp_∫ode
;

140 
c⁄fig_∑øm
 *
	mp_nxt
;

142 
c⁄fig_∑øm
 
	tc⁄fig_∑øm_t
;

144 
	#CONFPARAM_REQUIRED
 ((
c⁄fig_∑øm_t
 *Ë0)

	)

145 
	#CONFPARAM_MISSINGOK
 ((
c⁄fig_∑øm_t
 *Ë~0)

	)

147 
	#IS_VALID_HASH
(
h
Ë(((hË!0Ë&& ((hË!(~0)))

	)

148 
	#IS_INVALID_HASH
(
h
Ë(((hË=0Ë|| ((hË=(~0)))

	)

154 
c⁄fig_∑øm_t
 *
gëc⁄fig_‰omnm
(*);

155 
c⁄fig_∑øm_t
 *
gëc⁄fig_‰omnm_nohash
(*);

156 
c⁄fig_∑øm_t
 *
gëc⁄fig_‰omhash
();

158 
efÊuvüã_c⁄fig
();

159 
efÊuvüã_⁄e_˝
(
c⁄fig_∑øm_t
 *);

160 *
t2åi°r
(
åi_t
);

161 *
b2boﬁ°r
(
boﬁ_t
);

163 
c⁄fig_∑øm_t
 *
dup_˝
(config_param_t *);

164 
boﬁ_t
 
dîeÁbÀ_˝
(c⁄° 
c⁄fig_∑øm_t
 *);

165 
öô_hash_˝
(
c⁄fig_∑øm_t
 *);

167 
£t_vÆ_ul
(
c⁄fig_∑øm_t
 *, );

168 
£t_vÆ_l
(
c⁄fig_∑øm_t
 *, );

169 
£t_vÆ_ui
(
c⁄fig_∑øm_t
 *, );

170 
£t_vÆ_uid
(
c⁄fig_∑øm_t
 *, 
uid_t
);

171 
£t_vÆ_pid
(
c⁄fig_∑øm_t
 *, 
pid_t
);

172 
£t_vÆ_åuth
(
c⁄fig_∑øm_t
 *, 
åi_t
);

174 
£t_vÆ_±r
(
c⁄fig_∑øm_t
 *, *);

175 
£t_vÆ_ch¨±r
(
c⁄fig_∑øm_t
 *, *);

177 
£t_vÆ_¶urm
(
c⁄fig_∑øm_t
 *, *);

179 
åi_t
 
Debug
();

180 
åi_t
 
isCér
();

182 
	$∑øm_sour˚_t
 (*
∑øm_cﬁÀ˘i⁄_fun˘ab
[])(
c⁄fig_∑øm_t
 *);

184 
åi_t
 
	`typ_check
(
±yp_t
, 
rmfs_∑øm_t
 *);

185 
	`typ_c›yout
(
c⁄fig_∑øm_t
 *, *, 
size_t
);

193 
c⁄fig_∑øm_t
 
¶urmfs_c⁄fig
[];

194 
	`gë_fo_max_Àn
();

	@inc/rmfs/misc.h

2 #i‚de‡
RMFS_MISCSUBR_H_


3 
	#RMFS_MISCSUBR_H_


	)

6 
djb_°πohash
(*);

7 
djb_accumuœã
(, );

8 
öã∫Æ_°æí
(const *);

	@inc/rmfs/param.h

2 
	~<sys/∑øm.h
>

4 #i‚de‡
RMFS_PARAM_H_


5 
	#RMFS_PARAM_H_


	)

7 
	~"∫ode.h
"

35 
	#DEFMODE_FILE
 0

	)

36 
	#DEFMODE_DIR
 1

	)

37 
	#N_DEFAULT_MODES
 2

	)

39 
	#RM_UID_CTL
 0

	)

40 
	#RM_UID_DISPATCH
 1

	)

41 
	#RM_UIDS
 2

	)

48 
	#RNODEPOOL_DEFAULT_MINSIZE
 256

	)

60 
	s∫ode_∑øms
 {

61 
	m∫_möpoﬁsize
;

63 *
	m∫_Ælocm≠
;

64 
∫ode_t
 *
	m∫_poﬁ
;

66 
	m∫_maxÆloc
;

67 
	m∫_ba£Æloc
;

68 
	m∫_cuøŒoc
;

70 
∫ode_t
 *
	mp_nxt_avaû_∫
;

71 
	mnxt_avaû
;

73 
uid_t
 
	mrm_uid
[
RM_UIDS
];

74 
mode_t
 
	mdef_mode
[
N_DEFAULT_MODES
];

75 
£curôy_c⁄ãxt_t
 *
	msc⁄
;

78 
∫ode_t
 *
	mp_f§oŸ
;

79 
∫ode_t
 *
	mp_˙ame
;

80 
∫ode_t
 *
	mp_jobd
;

82 
∫ode_t
 *
	mp_dúty
;

83 
time_t
 
	mœ°_upd©e
;

85 
	mfsid
;

86 
	mvîsi⁄
;

89 
∫ode_∑øms
 
	t∫_∑øm_t
;

91 
∫_∑øm_t
 
∫_∑ømèb
;

98 
∫_∑ømèb_ªÀa£
();

99 
∫_∑øm_t
 *
gë_∫_∑øms
();

105 
∫ode_t
 *
£t_∫∑øm_∫
(
off_t
,Ñnode_t *);

106 
£t_∫∑øm_time
(
off_t
, 
time_t
);

107 
£t_∫∑øm_ul
(
off_t
, );

109 
£t_∫∑øm_f§oŸ
(
∫ode_t
 *);

110 
£t_∫∑øm_˙ame
(
∫ode_t
 *);

111 
£t_∫∑øm_jobd
(
∫ode_t
 *);

112 
boﬁ_t
 
∫_∑øm_adddúty
(
∫ode_t
 *);

114 
mode_t
 *
gë_∫∑øm_modï
();

115 
∫ode_t
 *
gë_∫∑øm_f§oŸ
();

117 
∫ode_t
 *
gë_∫∑øm_∫
(
off_t
);

118 
gë_∫∑øm_ul
(
off_t
);

119 *
gë_∫∑øm_uÕ
(
off_t
);

120 
mode_t
 *
gë_∫∑øm_modï_off£t
(
off_t
);

121 
uid_t
 *
gë_∫∑øm_uidp
(
off_t
);

122 
gë_∫∑øm_fsid
();

123 
gë_∫∑øm_vîsi⁄
();

172 
c⁄fig_∑øm_t
 
∑πöfodesc_èb
[];

173 
c⁄fig_∑øm_t
 
joböfodesc_èb
[];

174 
c⁄fig_∑øm_t
 
°ïöfodesc_èb
[];

175 
c⁄fig_∑øm_t
 
nodeöfodesc_èb
[];

	@inc/rmfs/rnode.h

54 #i‚de‡
RNODE_H_


55 
	#RNODE_H_


	)

57 
	~"rmfs.h
"

77 
	e∫ode_ty≥
 {

78 
	mRN_NONE
 = 0,

79 
	mRN_FIRST
 = 
RN_NONE
,

80 
	mRN_PROVISION
 = 
RN_FIRST
,

81 
	mRN_GUARD
 = 
RN_FIRST
 + 1 ,

83 
	mRND_ROOT
 = 
RN_FIRST
 + 2 ,

84 
	mRND_CLUSTER
 = 
RN_FIRST
 + 3 ,

86 
	mRND_PARTS
 = 
RN_FIRST
 + 4 ,

87 
	mRND_PARTITIONS
 = 
RND_PARTS
,

88 
	mRND_PARTNAME
 = 
RN_FIRST
 + 5 ,

90 
	mRND_NODES
 = 
RN_FIRST
 + 6 ,

91 
	mRND_NODENAME
 = 
RN_FIRST
 + 7 ,

93 
	mRND_JOBS
 = 
RN_FIRST
 + 8 ,

94 
	mRND_JOBID
 = 
RN_FIRST
 + 9 ,

95 
	mRND_JOBNAME
 = 
RND_JOBID
,

97 
	mRND_JOBSTEPS
 = 
RN_FIRST
 + 10 ,

98 
	mRND_JOBSTEPID
 = 
RN_FIRST
 + 11 ,

99 
	mRND_JOBSTEP
 = 
RND_JOBSTEPID
,

100 
	mRND_JOBSTEPNAME
 = 
RND_JOBSTEPID
,

102 #ifde‡
XXXFUTURE


103 
	mRND_JOBSTEP_CTX
,

104 
	mRND_JOBSTEP_LAUNCH
,

105 
	mRND_RESV
,

106 
	mRND_RESERVATION
,

109 
	mRNF_ALLOCJOB
 = 
RN_FIRST
 + 12 ,

110 
	mRND_NODESTATE
 = 
RN_FIRST
 + 13 ,

112 
	mRND_ATTRIBUTES
 = 
RN_FIRST
 + 14 ,

113 
	mRNF_ATTRIBUTE
 = 
RN_FIRST
 + 15 ,

114 
	mRNF_ATTR
 = 
RNF_ATTRIBUTE
,

116 
	mRND_CONTROL
 = 
RN_FIRST
 + 16 ,

117 
	mRND_CTRL
 = 
RND_CONTROL
,

119 
	mRNF_CONTEXT
 = 
RN_FIRST
 + 17 ,

120 
	mRNF_CNTXT
 = 
RNF_CONTEXT
,

121 
	mRNF_CNTX
 = 
RNF_CONTEXT
,

123 
	mRNF_KNOB
 = 
RN_FIRST
 + 18 ,

124 
	mRNF_EXEC
 = 
RNF_KNOB
,

126 
	mRNF_SIGNATURE
 = 
RN_FIRST
 + 19 ,

127 
	mRNF_SIG
 = 
RNF_SIGNATURE
,

129 
	mRND_RNPARAMS
 = 
RN_FIRST
 + 20 ,

130 
	mRND_PARAMS
 = 
RND_RNPARAMS
,

132 
	mRN_RAZE
 = 
RN_FIRST
 + 21 ,

133 
	mRN_LAST
 = 
RN_RAZE
,

135 
	mRN_LEN
 = 
RN_LAST
 + 1 ,

137 
	mRN_BASEALLOC
 = 
RND_ROOT
,

138 
	mRN_INVALID
 = (~0)

141 
∫ode_ty≥
 
	t∫_ty≥_t
;

143 
	#IS_RTYPE_BUILDABLE
(
_π
Ë(((_πË!
RN_NONE
 && \

144 (
_π
Ë>
RN_FIRST
 && (_πË<
RN_LAST
) && \

145 (
∫ode_buûdèb
[
_π
].
buûd‚
) \

146 )

	)

148 
	#IS_RTYPE_VALID
(
_π
Ë(
	`IS_RTYPE_BUILDABLE
(_π))

	)

150 
	#IS_RTYPE_ATTR_SUBTYPE
(
_π
Ë(
RNF_EXEC
 =(_πË|| 
RNF_KNOB
 == (_rt) || \

151 
RNF_CONTEXT
 =(
_π
Ë|| 
RNF_SIGNATURE
 == (_rt) \

152 )

	)

153 
	#IS_RTYPE_ATTRIBUTE
(
_π
Ë(
RNF_ATTRIBUTE
 =(_πË|| 
	`IS_RTYPE_ATTR_SUBTYPE
(_π))

	)

154 
	#IS_RTYPE_CONTROL
(
_π
Ë(
RND_CONTROL
 == (_rt) || \

155 
RNF_KNOB
 =(
_π
) || \

156 
RNF_SIGNATURE
 =(
_π
) || \

157 
RNF_EXEC
 =(
_π
) \

158 )

	)

159 
	#IS_RTYPE_CTL
(
_π
Ë(
	`IS_RTYPE_CONTROL
(_π))

	)

161 
	#IS_RTYPE_XATTRIBUTE
(
_π
Ë(
RNF_CONTEXT
 =(_π))

	)

162 
	#IS_RTYPE_XATTR
(
_π
Ë(
	`IS_RTYPE_XATTRIBUTE
(_π))

	)

174 
	#MAX_RN_CMDS
 (6)

	)

175 
	s∫ode
 {

176 
∫_ty≥_t
 
	mπy≥
;

177 
	mröo
;

178 *
	mnm
;

181 
	m∫ode
 *(*
	mbuûd‚
)(rnode *, rnode *);

183 
c⁄fig_∑øm
 *
	mp_˝
;

184 
	mgí
;

185 
time_t
 
	m˘ime
;

186 
uid_t
 
	muid
;

187 
gid_t
 
	mgid
;

188 *
	mp_dy¡yp
;

189 
	mh
;

192 
∫ode
 *
	mnxt_dúty
;

193 
∫ode
 *
	msig«tuª
;

194 
∫ode
 *
	m¥ev_vîsi⁄
;

203 
	s©å_desc
 {

204 
c⁄fig_∑øm
 *
	mèbÀ
;

205 
åi_t
 (*
is_möe
)(
	mc⁄fig_∑øm
 *);

206 } 
	m©å_desc
;

209 
	sis
 {

210 
	mdú
:1;

211 
	mfûe
:1;

212 
	mlök
:1;

213 } 
	mis
;

216 
	smay_be
 {

218 
	mc⁄åﬁœbÀ
:1;

219 
	mdúty
:1;

220 
	mªadabÀ
:1;

221 
	mwrôabÀ
:1;

222 
	mexeˇbÀ
:1;

225 
∫ode
 *
	mnŸify
;

226 } 
	mmaybe
;

229 
	s∫_˘l
 {

230 
∫ode_ty≥
 
	mπy≥
;

231 *
	mnm
;

232 
åi_t
 (*
‚
)(
	m∫ode
 *, 
	mc⁄fig_∑øm
 *);

233 } 
	m˘l
[
MAX_RN_CMDS
];

236 
	mn_chûdªn
;

237 
∫ode
 *
	mchûdªn
;

238 
∫ode
 *
	m∑ª¡
;

239 
∫ode
 *
	m©å
;

240 
∫ode
 *
	msubdú
;

242 
	mn_x©å
;

243 
c⁄fig_∑øm
 *
	mx©å
;

246 
∫ode
 
	t∫ode_t
;

247 
∫_˘l
 
	t∫_˘l_t
;

250 
	sc⁄vtyp
 {

251 
∑øm_ty≥
 
	m±yp
;

252 
∫_ty≥_t
 
	mπyp
;

254 
c⁄vtyp
 
	t±2∫_t
;

258 
∫ode_t
 *(*
	$gë_∫_buûd‚
(
∫_ty≥_t
))(
∫ode_t
 *,Ñnode_t *);

259 
	`åi_t
 (*
	$gë_∫_sign‚
(
∫ode_t
 *))‘node_à*, 
c⁄fig_∑øm_t
 *);

260 
	`lök_x©å2∫
(
∫ode_t
 *, 
c⁄fig_∑øm_t
 *);

261 
åi_t
 
	`cﬁÀ˘_¥ed°©e
();

264 
∫ode_t
 
∫ode_buûdèb
[];

265 
±2∫_t
 
p2r_typ_c⁄vèb
[];

266 
±2∫_t
 
p2r_typ_rm_c⁄vèb
[];

	@inc/rmfs/types.h

8 #i‚de‡
RMFS_TYPE_H_


9 
	#RMFS_TYPE_H_


	)

11 
	~<°ddef.h
>

12 
	~<°dboﬁ.h
>

13 
	~<sy£xôs.h
>

15 #i‚de‡
FALSE


17 
	eboﬁón
 {

18 
	mBFALSE
 = 0,

19 
	mBTRUE
 = 1

21 
boﬁón
 
	tboﬁ_t
;

24 
_Boﬁ
 
	tboﬁ_t
;

28 
	eåûíe
 {

29 
	mUNSET
 = (~0),

30 
	mFALSE
 = 
Ál£
,

31 
	mTRUE
 = 
åue


33 
åûíe
 
	tåi_t
;

40 
	e›t_Êag
 {

41 
	mOPT_INVAL
 = ~0,

42 
	mOPT_NONE
 = 0,

43 
	mOPT_VALID_IF_DEBUG
 = 1,

44 
	mOPT_DEBUG
 = 
OPT_VALID_IF_DEBUG
,

45 
	mOPT_MANDATORY
 = 2,

46 
	mOPT_MAND
 = 
OPT_MANDATORY
,

47 
	mOPT_EXCLUSIVE_ALL
 = 4,

48 
	mOPT_EXCL_ALL
 = 
OPT_EXCLUSIVE_ALL
,

49 
	mOPT_EXCLUSIVE
 = 
OPT_EXCLUSIVE_ALL
,

50 
	mOPT_SELECT_ONE
 = 8,

51 
	mOPT_ONE
 = 
OPT_SELECT_ONE
,

52 
	mOPT_NONOPT
 = 16

54 
›t_Êag
 
	t›t_Êg_t
;

69 
	e∑øm_sour˚
 {

70 
	mPSRC_NONE
 = 0,

71 
	mPSRC_NOBITS
 = 
PSRC_NONE
,

73 
	mPSRC_MAC_CONF
 = 1,

74 
	mPSRC_MAC
 = 
PSRC_MAC_CONF
,

76 
	mPSRC_SLURM
 = 2,

78 
	mPSRC_ENVAR
 = 3,

79 
	mPSRC_ENV
 = 
PSRC_ENVAR
,

81 
	mPSRC_MNT_OPT
 = 4,

82 
	mPSRC_MNT
 = 
PSRC_MNT_OPT
,

83 
	mPSRC_MNT_NONOPT
 = 5,

84 
	mPSRC_FUSE
 = 6,

86 
	mPSRC_USERINPUT
 = 7,

88 
	mPSRC_DEFAULT
 = 8,

89 
	mPSRC_DERIVED
 = 9,

91 
	mPSRC_MAX
 = 
PSRC_DERIVED
,

92 
	mPSRC_N
 = 
PSRC_MAX
+1 ,

93 
	mPSRC_LAST
 = 
PSRC_MAX
,

94 
	mPSRC_LOPRI
 = 
PSRC_LAST
,

95 
	mPSRC_LEAST_TRUSTED
 = 
PSRC_LOPRI
,

96 
	mPSRC_FIRST
 = 
PSRC_NONE
+1 ,

97 
	mPSRC_HIPRI
 = 
PSRC_FIRST
,

98 
	mPSRC_MOST_TRUSTED
 = 
PSRC_HIPRI


100 
∑øm_sour˚
 
	t∑øm_sour˚_t
;

102 *
decode_p§c
(
∑øm_sour˚_t
);

103 
	#PSRCNAME
(
p§c
Ë
	`decode_p§c
’§c)

	)

105 
	#BIT
(
b
Ë(1<<(b))

	)

107 
	#PSRC_ALLBITS
 ( 
	`BIT
(
PSRC_DERIVED
) | \

108 
	`BIT
(
PSRC_DEFAULT
) | \

109 
	`BIT
(
PSRC_SLURM
) | \

110 
	`BIT
(
PSRC_MAC_CONF
) | \

111 
	`BIT
(
PSRC_ENVAR
) | \

112 
	`BIT
(
PSRC_MNT_NONOPT
)| \

113 
	`BIT
(
PSRC_MNT_OPT
) | \

114 
	`BIT
(
PSRC_USERINPUT
) \

115 )

	)

116 
	#ISSET
(
t°
,
b
Ë(—°Ë& 
	`BIT
(b))

	)

118 
	#ANY
(
t°
Ë(
	`ISSET
((
PSRC_ALLBITS
), (t°)))

	)

119 
	#NOBITS
(
t°
Ë—° =
PSRC_NOBITS
)

	)

121 
	#PSRC_LSB
(
t°
Ë(—°Ë& (—°)-1))

	)

123 
p§c_msb
();

124 
	#PSRC_MSB
(
t°
Ë(
	`p§c_msb
—°))

	)

126 
	#PSRC_NXT
(
b
Ë((b)+1)

	)

127 
	#PSRC_TEST
(
s
, 
t°
Ë((sË<—°))

	)

137 
	e∑øm_ty≥
 {

138 
	mPTYP_NONE
 = 0,

140 
	mPTYP_OPAQUE
 = 
PTYP_NONE
+1,

141 
	mPTYP_FIRST
 = 
PTYP_OPAQUE
,

143 
	mPTYP_ALPHANUM
 = 
PTYP_OPAQUE
 + 1,

144 
	mPTYP_ALPHA_FIRST
 = 
PTYP_ALPHANUM
,

145 
	mPTYP_ALPHA
 = 
PTYP_ALPHA_FIRST
 + 1,

146 
	mPTYP_NUMERICHAR
 = 
PTYP_ALPHA_FIRST
 + 2,

147 
	mPTYP_ALPHA_P2P
 = 
PTYP_ALPHA_FIRST
 + 3,

148 
	mPTYP_XATTR
 = 
PTYP_ALPHA_FIRST
 + 4,

149 
	mPTYP_PATH
 = 
PTYP_ALPHA_FIRST
 + 5,

150 
	mPTYP_FSVIS_FIRST
 = 
PTYP_PATH
,

152 
	mPTYP_FILE
 = 
PTYP_ALPHA_FIRST
 + 6,

153 
	mPTYP_FILEXIST
 = 
PTYP_ALPHA_FIRST
 + 7,

154 
	mPTYP_SYM
 = 
PTYP_ALPHA_FIRST
 + 8,

155 
	mPTYP_DIREXIST
 = 
PTYP_ALPHA_FIRST
 + 9,

156 
	mPTYP_DIR
 = 
PTYP_ALPHA_FIRST
 + 10,

157 
	mPTYP_FSVIS_LAST
 = 
PTYP_DIR
,

158 
	mPTYP_HOST
 = 
PTYP_ALPHA_FIRST
 + 11,

159 
	mPTYP_HOST_FIRST
 = 
PTYP_HOST
,

160 
	mPTYP_HOSTNAME
 = 
PTYP_HOST
,

161 
	mPTYP_HOST_LAST
 = 
PTYP_HOST
,

162 
	mPTYP_ALPHA_LAST
 = 
PTYP_HOST
,

164 
	mPTYP_NUMERIC
 = 
PTYP_ALPHA_LAST
 + 1,

165 
	mPTYP_INT_FIRST
 = 
PTYP_NUMERIC
,

166 
	mPTYP_NUMERICTIME
 = 
PTYP_INT_FIRST
 + 1,

167 
	mPTYP_NUMTIME
 = 
PTYP_NUMERICTIME
,

168 
	mPTYP_NUMTIM_SECS
 = 
PTYP_INT_FIRST
 + 2,

169 
	mPTYP_NUMTIME_SECS
 = 
PTYP_NUMTIM_SECS
,

170 
	mPTYP_NUMSIGNED
 = 
PTYP_INT_FIRST
 + 3,

171 
	mPTYP_UNSIGNED_INT
 = 
PTYP_INT_FIRST
 + 4,

172 
	mPTYP_UNSIGNED_INT16
 = 
PTYP_INT_FIRST
 + 5,

173 
	mPTYP_UNSIGNED_INT32
 = 
PTYP_INT_FIRST
 + 6,

174 
	mPTYP_UID
 = 
PTYP_INT_FIRST
 + 7,

175 
	mPTYP_PID
 = 
PTYP_INT_FIRST
 + 8,

176 
	mPTYP_TRILENE
 = 
PTYP_INT_FIRST
 + 9,

177 
	mPTYP_BOOLEAN
 = 
PTYP_INT_FIRST
 + 10,

178 
	mPTYP_SIGNATURE
 = 
PTYP_INT_FIRST
 + 11,

179 
	mPTYP_INT_LAST
 = 
PTYP_SIGNATURE
,

181 
	mPTYP_CONTEXT
 = 
PTYP_INT_LAST
 + 1,

182 
	mPTYP_CNTXT_FIRST
 = 
PTYP_CONTEXT
,

183 
	mPTYP_CNTXT
 = 
PTYP_CONTEXT
,

184 
	mPTYP_CNTXT_LAST
 = 
PTYP_CONTEXT
,

187 
	mPTYP_CLUSTER
 = 
PTYP_CNTXT_LAST
 + 1,

188 
	mPTYP_SLURM_FIRST
 = 
PTYP_CLUSTER
,

189 
	mPTYP_CNTRLMACH
 = 
PTYP_SLURM_FIRST
 + 1,

190 
	mPTYP_PARTITION
 = 
PTYP_SLURM_FIRST
 + 2,

191 
	mPTYP_NODE
 = 
PTYP_SLURM_FIRST
 + 3,

192 
	mPTYP_JOB
 = 
PTYP_SLURM_FIRST
 + 4,

193 
	mPTYP_STEP
 = 
PTYP_SLURM_FIRST
 + 5,

194 
	mPTYP_ALLOCJOB
 = 
PTYP_SLURM_FIRST
 + 6,

195 
	mPTYP_NODESTATE
 = 
PTYP_SLURM_FIRST
 + 7,

196 
	mPTYP_SLURMVERSION
 = 
PTYP_SLURM_FIRST
 + 8,

197 
	mPTYP_SLURMUID
 = 
PTYP_SLURM_FIRST
 + 9,

198 
	mPTYP_SLURMTMOUT
 = 
PTYP_SLURM_FIRST
 + 10,

199 
	mPTYP_SPANKENV
 = 
PTYP_SLURM_FIRST
 + 11,

200 
	mPTYP_SPANKENVSIZE
 = 
PTYP_SLURM_FIRST
 + 12,

201 
	mPTYP_JSUB_PLUGIN
 = 
PTYP_SLURM_FIRST
 + 13,

202 
	mPTYP_GRES_PLUGIN
 = 
PTYP_SLURM_FIRST
 + 14,

203 
	mPTYP_SLURMUNAME
 = 
PTYP_SLURM_FIRST
 + 15,

204 
	mPTYP_SLURMDUNAME
 = 
PTYP_SLURM_FIRST
 + 16,

205 
	mPTYP_SLURM_LAST
 = 
PTYP_SLURM_FIRST
 + 16,

207 
	mPTYP_LAST
 = 
PTYP_SLURM_LAST
,

208 
	mPTYP_GUARD
 = 
PTYP_LAST
 + 1,

209 
	mPTYP_LEN
 = 
PTYP_GUARD


211 
∑øm_ty≥
 
	t±yp_t
;

213 
	#IS_SLURM_TYPE
(
±yp
Ë(’typË>
PTYP_SLURM_FIRST
 && (’typË<
PTYP_SLURM_LAST
))

	)

214 
	#IS_NUMERIC_TYPE
(
±yp
Ë(’typË>
PTYP_INT_FIRST
 && (’typË<
PTYP_INT_LAST
))

	)

215 
	#IS_NUMSIGNED_TYPE
(
±yp
Ë(’typË=
PTYP_NUMSIGNED
)

	)

216 
	#IS_SIGNATURE_TYPE
(
±yp
Ë(’typË=
PTYP_SIGNATURE
)

	)

217 
	#IS_ALPHA_TYPE
(
±yp
Ë(’typË>
PTYP_ALPHA_FIRST
 && (’typË<
PTYP_ALPHA_LAST
))

	)

218 
	#IS_CONTEXT_TYPE
(
±yp
Ë(’typË>
PTYP_CNTXT_FIRST
 && (’typË<
PTYP_CNTXT_LAST
))

	)

219 
	#IS_XATTR_TYPE
(
±yp
Ë(’typË=
PTYP_XATTR
 || 
	`IS_CONTEXT_TYPE
’typ))

	)

220 
	#IS_OPAQUE_TYPE
(
±yp
Ë(’typË=
PTYP_OPAQUE
)

	)

221 
	#IS_VALID_TYPE
(
±yp
Ë(’typË>
PTYP_FIRST
 && (±ypË<
PTYP_LAST
)

	)

222 
	#IS_BOOLEAN_TYPE
(
±yp
Ë(’typË=
PTYP_BOOLEAN
)

	)

223 
	#IS_TRILENE_TYPE
(
±yp
Ë(’typË=
PTYP_TRILENE
)

	)

224 
	#IS_TRUTH_TYPE
(
±yp
Ë(
	`IS_BOOLEAN_TYPE
’typË|| 
	`IS_TRILENE_TYPE
’typ))

	)

225 
	#IS_LOGICAL_TYPE
(
±yp
Ë(
	`IS_TRUTH_TYPE
’typ))

	)

226 
	#IS_FSVIS_TYPE
(
±yp
Ë(’typË>
PTYP_FSVIS_FIRST
 && (±ypË<
PTYP_FSVIS_LAST
)

	)

227 
	#IS_HOST_TYPE
(
±yp
Ë(’typË>
PTYP_HOST_FIRST
 && (±ypË<
PTYP_HOST_LAST
)

	)

229 *
±yp2≤ame_èb
[];

230 
±yp_t
 
¶urm2ba£typ
[];

233 
	#OPAQUE_EMIT
 0x0D06F00D

	)

238 
	e¶urmfs_exôcode
 {

239 
	mExôOK
 = 
EX_OK
,

240 
	mExô_OK
 = 
EX_OK
,

241 
	mEºExô_ENOMEM
 = 
EX__BASE
-1,

242 
	mEºExô_ARGPARSE
 = 
EX_USAGE
,

243 
	mEºExô_INCOMPLETE
 = 
EX_DATAERR
,

244 
	mEºExô_CONFIG
 = 
EX_CONFIG
,

245 
	mEºExô_UNAVAIL
 = 
EX_UNAVAILABLE
,

246 
	mEºExô_NOPERM
 = 
EX_NOPERM
,

247 
	mEºExô_OSERR
 = 
EX_OSERR
,

248 
	mEºExô_TEMPFAIL
 = 
EX_TEMPFAIL
,

249 
	mEºExô_INTERNAL
 = 
EX_SOFTWARE
,

251 
	mEºExô_STUCK
 = 
EX_OK
+1,

252 
	mEºExô_SLURM
 = 
EX_OK
+2,

253 
	mEºExô_ASSERT
 = 
EX_OK
+3,

254 
	mEºExô_NOMEM
 = 
EX_OK
+4,

255 
	mEºExô_WARN
 = 
EX_OK
+9

257 
¶urmfs_exôcode
 
	trmfs_exôcode_t
;

264 
Ußge
(, *);

265 
EºExô
(, *);

266 
CÀ™Exô
();

269 *
pußge_msg
;

271 #i‚de‡
max


272 
	#max
(
a
,
b
) \

273 ({ 
	`__ty≥of__
 (
a
Ë
_a
 = (a); \

274 
	`__ty≥of__
 (
b
Ë
_b
 = (b); \

275 
_a
 > 
_b
 ? _®: _b; })

	)

278 #i‚de‡
mö


279 
	#mö
(
a
,
b
) \

280 ({ 
	`__ty≥of__
 (
a
Ë
_a
 = (a); \

281 
	`__ty≥of__
 (
b
Ë
_b
 = (b); \

282 
_a
 < 
_b
 ? _®: _b; })

	)

	@lib/collect/calcul.c

2 
	~"rmfs.h
"

4 
∑øm_sour˚_t


5 
	$ˇlcul_dîived
(
c⁄fig_∑øm_t
 *
p_˝
) {

7 i‡(
p_˝
 &&Ö_˝->
cﬁÀ˘‹
) {

8  (*
p_˝
->
cﬁÀ˘‹
)(p_cp);

10  
PSRC_NONE
;

11 
	}
}

14 
∑øm_sour˚_t


15 
	$ˇlcul_isC⁄åﬁÀr
(
c⁄fig_∑øm_t
 *
p_˝
) {

16 
h_ho°nm
, 
h_c⁄åﬁmachöe
, 
h_isc⁄åﬁÀr
;

17 
c⁄fig_∑øm_t
 *
p_˝_c⁄åﬁ
;

19 
h_isc⁄åﬁÀr
 = 
	`djb_°πohash
("isController");

20 i‡(
p_˝
->
h
 !
h_isc⁄åﬁÀr
) {

21 
	`EºExô
(
EºExô_ASSERT
, "calcul_isController: !djb_strtohash(isController)");

22  
PSRC_NONE
;

25 
p_˝_c⁄åﬁ
 = 
	`gëc⁄fig_‰omnm
("ControlMachine");

26 
h_ho°nm
 = 
p_˝
->
h
;

27 
h_c⁄åﬁmachöe
 = 
p_˝_c⁄åﬁ
->
h
;

30 i‡(
h_ho°nm
 != 0 && h_hostnm != ~0 &&

31 
h_c⁄åﬁmachöe
 != 0 && h_controlmachine != ~0

34 i‡(
h_ho°nm
 =
h_c⁄åﬁmachöe
) {

35 
p_˝
->
vÆ
.
ue
.
åuth
 = 1;

36  
PSRC_DERIVED
;

39  
PSRC_NONE
;

40 
	}
}

42 
∑øm_sour˚_t


43 
	$ˇlcul_∫odïoﬁ
(
c⁄fig_∑øm_t
 *
p_˝
) {

44 
∑øm_sour˚_t
 
§c
;

45 
n
;

46 
∑πôi⁄_öfo_t
 *
p_pi
;

47 
i
;

48 
∫_∑øm_t
 *
p_∫_∑øms
;

49 
c⁄fig_∑øm_t
 *
p_∑πôi⁄s_˝
;

51 
∑øm_sour˚_t
 
	`cﬁÀ˘¶urm_∑πôi⁄s
(
c⁄fig_∑øm_t
 *);

53 
p_∫_∑øms
 = 
	`gë_∫_∑øms
–
TRUE
);

54 i‡(!
p_∫_∑øms
) {

55 
	`EºExô
(
EºExô_ASSERT
, "calcul_rnodepool: !p_rn_params");

56  
PSRC_NONE
;

58 
p_∫_∑øms
->
∫_möpoﬁsize
 = -1;

60 
p_∑πôi⁄s_˝
 = 
	`gëc⁄fig_‰omnm
("partitions");

61 i‡(!
p_∑πôi⁄s_˝
) {

62 
	`EºExô
(
EºExô_ASSERT
, "calcul_rnodepool: !p_partitions_cp");

63  
PSRC_NONE
;

65 i‡(!
	`ISSET
(
p_∑πôi⁄s_˝
->
§c
.
a˘uÆ
, 
PSRC_SLURM
)) {

66 
§c
 = 
	`cﬁÀ˘¶urm_∑πôi⁄s
(
p_∑πôi⁄s_˝
);

67 i‡(
§c
 !
PSRC_SLURM
) {

68 
	`EºExô
(
EºExô_ASSERT
, "calcul_rnodepool: collect(p_partitions_cp) src !SLURM");

69  
PSRC_NONE
;

72 i‡(!
p_∑πôi⁄s_˝
->
≥r_§c
.
¶urm
.
pim
) {

73 
	`EºExô
(
EºExô_ASSERT
, "calcul_rnodepool: !slurm.pim");

74  
PSRC_NONE
;

76 i‡(!
p_∑πôi⁄s_˝
->
≥r_§c
.
¶urm
.
pim
->
∑πôi⁄_¨øy
) {

77 
	`EºExô
(
EºExô_ASSERT
, "calcul_rnodepool: !slurm.pim.partition_array");

78  
PSRC_NONE
;

80 i‡(
p_∑πôi⁄s_˝
->
≥r_§c
.
¶urm
.
pim
->
ªc‹d_cou¡
 <= 0) {

81 
	`EºExô
(
EºExô_ASSERT
, "calcul_rnodepool:ÉmptyÖartition_array");

82  
PSRC_NONE
;

84 
p_˝
->
≥r_§c
.
¶urm
.
pim
 = 
p_∑πôi⁄s_˝
->per_src.slurm.pim;

86 
p_pi
 = 
p_˝
->
≥r_§c
.
¶urm
.
pim
->
∑πôi⁄_¨øy
, 
i
 = 0, 
n
 = 0;

87 
i
 < 
p_˝
->
≥r_§c
.
¶urm
.
pim
->
ªc‹d_cou¡
;

88 
i
++, 
p_pi
++) {

90 i‡(
p_pi
 > 0) {

91 
n
 +
p_pi
->
tŸÆ_nodes
;

94 
n
 +=Ç <= 2? 4: ((n & (n-1))<<1);

97 i‡(
n
 <= 0) {

98 
	`EºExô
(
EºExô_ASSERT
, "calcul_rnodepool: slurm_partitionsÅotalÇodes <= 0");

99  
PSRC_NONE
;

102 
p_˝
->
vÆ
.
ue
.
ul
 = 
n
 * (
∫ode_t
);

103 
p_∫_∑øms
->
∫_möpoﬁsize
 = 
n
;

104 
	`∫_∑ømèb_ªÀa£
();

106  
PSRC_DERIVED
;

107 
	}
}

110 
∑øm_sour˚_t


111 
	$ˇlcul_unmou¡waô
(
c⁄fig_∑øm_t
 *
p_˝
) {

112 
c⁄fig_∑øm_t
 *
¶˘l_timeout_p_˝
 = 
NULL
;

113 
h
;

114 
¶_tmout
;

116 
h
 = 
	`djb_°πohash
("unmountWait");

117 i‡(
h
 !
p_˝
->h) {

118 
	`EºExô
(
EºExô_ASSERT
, "calcul_unmountwait: h !=Ö_cp->h");

119  
PSRC_NONE
;

122 
¶˘l_timeout_p_˝
 = 
	`gëc⁄fig_‰omnm
("SlurmCtldTimeout");

124 
¶_tmout
 = 
¶˘l_timeout_p_˝
->
vÆ
.
ue
.
time
;

126 
	`£t_vÆ_l
(
p_˝
, (
¶_tmout
 * 2) + 1);

127  
PSRC_DERIVED
;

128 
	}
}

	@lib/collect/collect_backingstore.c

4 
	~"rmfs.h
"

6 
	~"backög°‹e.h
"

13 
åi_t


14 
	$¥u√_Backög°‹e
(
c⁄fig_∑øm_t
 *
p_bs_˝
) {

15 
j
, 
n_j
;

16 
time_t
 
t
;

17 
bs_ªc‹d_t
 
p_bs
;

18 
backög°‹e_ªc‹d
 *
p_b§
;

20 i‡(!
p_bs_˝
) {

21 
	`EºExô
(
EºExô_ASSERT
, "prune_BackingStore(): !p_bs_cp");

22  
FALSE
;

24 i‡(!
p_bs_˝
->
pd
.
is_mm≠≥d
) {

25 
	`EºExô
(
EºExô_ASSERT
, "prune_BackingStore(): backing store isÇot mapped");

26  
FALSE
;

28 i‡(!
p_bs_˝
->
vÆ
.
ue
.
bs
) {

29 
	`EºExô
(
EºExô_ASSERT
, "prune_BackingStore(): !p_bs_cp->val.ue.bs");

30  
FALSE
;

33 
	`time
(&
t
);

34 
j
 = 0, 
p_bs
 = 
p_bs_ba£
, 
n_j
 = 0; j < 
n_ªc
; j++,Ö_bs++) {

36 
p_b§
 = 
p_bs
->
_u
.
_r
;

37 i‡(
p_b§
->
htyp
.
hódî
) {

40 i‡(
p_b§
->
htyp
.
åaûî
) {

43 i‡(
p_b§
->
htyp
.
b¨rõr
) {

46 i‡(
p_b§
->
htyp
.
öföôe_expú©i⁄
) {

47 
n_j
++;

48 } i‡(
p_b§
->
node_dñè
 &&Ö_b§->
tm_exp
 < 
t
) {

49 
n_j
++;

52 i‡(
n_j
 == 0) {

53 
	`EºExô
(
EºExô_WARN
, "prune_backingstore():Ço jobs stateÅo merge");

54  
FALSE
;

65 
j
 = 0, 
p_bs
 = 
p_bs_ba£
, 
n_j
 = 0,Ö_b†p_bs->
_u
.
_r
;

66 
j
 < 
n_ªc
;

67 
j
++, 
p_bs
++, 
p_b§
 =Ö_bs->
_u
.
_r
) {

69 i‡(
p_b§
->
htyp
.
hódî
) {

72 i‡(
p_b§
->
htyp
.
åaûî
) {

75 i‡(
p_b§
->
htyp
.
b¨rõr
) {

79 i‡(
p_b§
->
htyp
.
öföôe_expú©i⁄
 ||Ö_b§->htyp.
node_dñè
) {

80 i‡(
	`∫_jobid_m©ch
(
p_b§
->
job_id
,Ö_b§->
∫_sig
)) {

81 i‡(
p_b§
->
htyp
.
node_dñè
 &&Ö_b§->
tm_exp
 < 
t
) {

82 
p_b§
->
htyp
.
node_dñè
 = 
FALSE
;

87  
TRUE
;

88 
	}
}

96 
åi_t


97 
	$˛aim_BackögSt‹e
(
c⁄fig_∑øm_t
 *
p_backög°‹e_˝
,

98 
c⁄fig_∑øm_t
 *
p_pid_˝
,

99 
˛aim_t
 
ªque°
) {

101 
bs_hdπyp_t
 *
p_bs_hdr
;

103 i‡(!
p_backög°‹e_˝
) {

104 
	`EºExô
(
EºExô_ASSERT
, "claim_backingstore(): !p_backingstore_cp");

105  
FALSE
;

107 i‡(!
p_pid_˝
) {

108 
	`EºExô
(
EºExô_ASSERT
, "claim_backingstore(): !p_pid_cp");

109  
FALSE
;

111 i‡(!
p_backög°‹e_˝
->
vÆ
.
ue
.
bs
) {

112 
	`EºExô
(
EºExô_ASSERT
, "claim_backingstore(): backing store is unopened? !val.ue.bs");

113  
FALSE
;

115 i‡(
p_pid_˝
->
vÆ
.
ue
.
pid
 <= 2) {

116 
	`EºExô
(
EºExô_ASSERT
, "claim_backingstore():Ö_pid_cp->val.ue.pid implausible");

117  
FALSE
;

123 
p_bs_hdr
 = 
p_backög°‹e_˝
->
vÆ
.
ue
.
bs
;

124 i‡(
p_bs_hdr
->
ow√r
 =
p_pid_˝
->
vÆ
.
ue
.
pid
) {

125 
tidy
;

128 i‡(
ªque°
 =
CL_TEST
) {

129 
tidy
;

133 i‡(
p_backög°‹e_˝
->
vÆ
.
is_mm≠≥d
) {

134 
p_bs_hdr
->
ow√r
 = 
p_pid_˝
->
vÆ
.
ue
.
pid
;

137 
	`EºExô
(
EºExô_ASSERT
, "claim_backingstore(): bs !is_mapped");

138 
tidy
;

141 
tidy
:

144 i‡(
ªque°
 !
CL_TEST
) {

145 
	`¥u√_BackögSt‹e
();

147  
TRUE
;

148 
	}
}

157 
	$•awn_exp‹ãr
(
c⁄fig_∑øm_t
 *
p_bs_˝
) {

159 i‡(!
p_bs_˝
) {

160 
	`EºExô
(
EºExô_ASSERT
, "spawn_exporter: !p_bs_cp");

161  
FALSE
;

164 i‡(
	`¢¥ötf
(
exp‹t_cmd
, 
_POSIX_PATH_MAX
-1, "/u§/bö/exp‹tf†-ò%s", 
p_bs_˝
->
vÆ
.
ue
.
∑thnm
) <= 0) {

165 
	`EºExô
(
EºExô_ASSERT
, "spawn_exporter: snprintf");

166  
FALSE
;

169 i‡((
˝id
 = 
	`vf‹k
()) < 0) {

170 
	`EºExô
(
EºExô_ASSERT
, "spawn_exporter: vfork");

171  
FALSE
;

173 } i‡(
˝id
 != 0) {

174 
	`exe˛p
("/u§/sbö/exp‹tfs", "exp‹tfs", "-i", 
p_bs_˝
->
∑thnm
, 
NULL
);

175 
	`EºExô
(
EºExô_ASSERT
, "spawn_exporter:Éxeclp(\"exportfs\")");

176 
	`exô
 (-1);

179 
	}
}

182 
	$bs_¥o˚s§eq
(
ªq_fd
, 
c⁄fig_∑øm_t
 *
p_bs_˝
) {

184 
ªq
[
_POSIX_PATH_MAX
];

185 
FILE
 *
°r
;

186 
bs_hdr_t
 *
p_bsh
;

187 
bs_ªc‹d_t
 *
p_bs
, *
p_bs_ba£
;

188 
backög°‹e_ªc‹d
 *
p_b§
;

189 
n
;

191 i‡(!
p_bs_˝
) {

192 
	`EºExô
(
EºExô_ASSERT
, "bs_processreq: !p_bs_cp()");

193 
	`exô
 (-1);

195 i‡(
	`mem£t
(
ªq
, 0, 
_POSIX_PATH_MAX
) !=Ñeq) {

196 
	`EºExô
(
EºExô_ASSERT
, "bs_processreq: !memset()");

197 
	`exô
 (-1);

199 i‡(!(
°r
 = 
	`fd›í
(
ªq_fd
, "r+"))) {

200 
	`EºExô
(
EºExô_ASSERT
, "bs_processreq: !fdopen()");

201 
	`exô
 (-1);

203 i‡(
	`fsˇnf
(
°r
, "%s", &
ªq
) <= 0) {

204 
	`EºExô
(
EºExô_ASSERT
, "bs_processreq: !fscanf()");

205 
	`exô
 (-1);

208 i‡(
	`°rcmp
(
ªq
, "n_rec") == 0) {

209 i‡(
	`fwrôe
(&
p_bs_˝
->
vÆ
.
ue
.
i
, (), 1, 
°r
) < 1) {

210 
	`EºExô
(
EºExô_ASSERT
, "bs_processreq: !fwrite(\"n_rec\"))");

211 
	`exô
 (-1);

214 } i‡(
	`°rcmp
(
ªq
, "dump") == 0) {

215 i‡(!
p_bs_˝
->
vÆ
.
ue
.
bs
) {

216 
	`EºExô
(
EºExô_ASSERT
, "bs_processreq: dump, but !p_bs_cp->val.ue.bs");

217 
	`exô
 (-1);

219 i‡(
	`fwrôe
(
p_bs
, (
bs_ªc‹d_t
), 
p_bs_˝
->
vÆ
.
ue
.
bs
->
_u
.
_r
.
size
, 
°r
) !=Ö_bs_cp->val.ue.bs->_u._r.size) {

220 
	`EºExô
(
EºExô_ASSERT
, "bs_processreq: dump, fwrite() => !p_bs_cp->val.ue.bs->_u._r.size");

221 
	`exô
 (-1);

224 
	`exô
 (0);

225 
	}
}

227 
åi_t


228 
	$bs_h™dÀli°íªque°s
(
c⁄fig_∑øm_t
 *
p_bs_˝
) {

229 
c⁄fig_∑øm_t
 *
p_mp
;

230 
sfd
;

231 
sockaddr_ö
 
li°í_s
 = { 0 };

232 
sockaddr_ö
 
ªque°‹_s
 = { 0 };

233 
ªq_buf
[
_POSIX_PATH_MAX
];

234 
FILE
 *
ªq_°r
;

235 
pid_t
 
chûd_h™dÀr
;

238 i‡((
sfd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 
IPPROTO_TCP
)) < 0) {

239 
	`EºExô
(
EºExô_ASSERT
, "bs_handlelistenrequests: !socket()");

240  
FALSE
;

243 
li°í_s
.
sö_Ámûy
 = 
AF_INET
;

244 
li°í_s
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

245 
li°í_s
.
sö_p‹t
 = 
	`ht⁄s
(
BS_PORT
);

247 i‡(
	`böd
(
sfd
, (
sockaddr
 *Ë&
li°í_s
, (listen_s)) < 0) {

248 
	`EºExô
(
EºExô_ASSERT
, "bs_handlelistenrequests: !bind()");

249  
FALSE
;

251 i‡(
	`li°í
(
sfd
, 5) < 0) {

252 
	`EºExô
(
EºExô_ASSERT
, "bs_handlelistenrequests: !listen()");

253  
FALSE
;

255 
ªq_Àn
 = (
ªque°‹_s
);

258 i‡((
ªq_fd
 = 
	`ac˚±
(
sfd
, (
sockaddr
 *Ë&
ªque°‹_s
, &
ªq_Àn
)) < 0) {

259 
	`EºExô
(
EºExô_ASSERT
, "bs_handlelistenrequests: !accept()");

262 i‡((
chûd_h™dÀr
 = 
	`f‹k
()) < 0) {

263 
	`EºExô
(
EºExô_ASSERT
, "bs_handlelistenrequests: !fork()");

265 } i‡(
chûd_h™dÀr
 == 0) {

266 
	`˛o£
(
sfd
);

267 
	`bs_¥o˚s§eq
(
ªq_fd
, 
p_bs_˝
);

268 
	`exô
(0);

269 } i‡(
chûd_h™dÀr
 > 0) {

270 
	`˛o£
(
ªq_fd
);

273  
FALSE
;

274 
	}
}

284 
	$•awn_li°íî
(
c⁄fig_∑øm_t
 *
p_bs_˝
) {

286 i‡(!
p_bs_˝
) {

287 
	`EºExô
(
EºExô_ASSERT
, "spawn_listener: !p_bs_cp");

288  
FALSE
;

295 i‡((
Õid
 = 
	`vf‹k
()) < 0) {

296 
	`EºExô
(
EºExô_ASSERT
, "spawn_listener: vfork");

297  
FALSE
;

299 } i‡(
Õid
 != 0) {

300 
	`bs_h™dÀli°íªque°s
(
p_bs_˝
);

301 
	`EºExô
(
EºExô_ASSERT
, "spawn_listener: bs_handlelistenrequestsÑeturned");

302 
	`exô
 (-1);

304  
TRUE
;

305 
	}
}

307 
åi_t


308 
	$•awn_BackögSt‹ñi°íî
(
c⁄fig_∑øm_t
 *
p_bs_˝
){

309 
∫_∑øm_t
 *
p_∫_∑ømèb
;

310 
∫ode_t
 *
p_f§oŸ
;

311 
cbuf
[
_POSIX_PATH_MAX
];

313 
	`•awn_exp‹ãr
(
p_bs_˝
);

314 
	`•awn_li°íî
(
p_bs_˝
);

316 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
FALSE
);

317 i‡(!
p_∫_∑ømèb
) {

318 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !p_rn_paramtab");

319  
FALSE
;

323  
TRUE
;

324 
	}
}

337 
åi_t


338 
	$mîge_BackögSt‹e
(
c⁄fig_∑øm_t
 *
p_§c_˝
,

339 
mîge_bs_sour˚_t
 
bs_mîge‰om
) {

340 
n_ªc
, 
n_j
, 
h_˘x
, 
h
;

341 
åi_t
 
rc
 = 
FALSE
;

342 
time_t
 
t
;

343 
c⁄fig_∑øm_t
 *
p_∫odïoﬁ_˝
;

344 
bs_ªc‹d_t
 *
p_bs
, *
p_bs_¥ed
, 
p_bs_ba£
;

345 
bs_hdr_t
 *
p_bsh
;

346 
backög°‹e_ªc‹d
 *
p_b§
;

348 i‡(
bs_mîge‰om
 =
MS_PREDECESSOR
) {

349 i‡(!
p_§c_˝
->
pd
.
f°r
) {

350 
	`EºExô
(
EºExô_ASSERT
, "merge_backingstore(PREDECESSOR) !fstr");

351  
FALSE
;

353 i‡(
	`fwrôe
("n_ªc", 1, 
	`öã∫Æ_°æí
("n_ªc"), 
p_§c_˝
->
pd
.
f°r
) <= 0) {

354 
	`EºExô
(
EºExô_ASSERT
, "merge_backingstore(PREDECESSOR) !fwrite(fstr, \"n_rec\")");

355  
FALSE
;

357 i‡(
	`‰ód
(&
n_ªc
, (), 1, 
p_§c_˝
->
pd
.
f°r
) <= 0) {

358 
	`EºExô
(
EºExô_ASSERT
, "merge_backingstore(PREDECESSOR) !fread(fstr, \"n_rec\")");

359  
FALSE
;

361 i‡(!(
p_∫odïoﬁ_˝
 = 
	`gëc⁄fig_‰omnm
("rnodepool"))) {

362 
	`EºExô
(
EºExô_ASSERT
, "merge_backingstore(PREDECESSOR) !p_rnodepool_cp");

363  
FALSE
;

365 i‡(
n_ªc
 <= 0) {

366 
	`EºExô
(
EºExô_ASSERT
, "merge_backingstore(PREDECESSOR)Ç_rec <= 0");

367  
FALSE
;

369 i‡((
p_∫odïoﬁ_˝
->
vÆ
.
ue
.
l
 - 
n_ªc
) > (p_rnodepool_cp->val.ue.l/10)) {

370 
	`EºExô
(
EºExô_WARN
, "merge_backingstore(PREDECESSOR):Öred backingstore is >10% different fromÑnodepoolsize");

373 i‡(!(
p_bs_¥ed
 = 
	`ˇŒoc
(
n_ªc
+1, (
bs_ªc‹d_t
)))) {

374 
	`EºExô
(
EºExô_ASSERT
, "merge_backingstore(PREDECESSOR) !p_bs_pred");

375  
FALSE
;

377 i‡(
	`fwrôe
("dump", 1, 
	`öã∫Æ_°æí
("dump"), 
p_§c_˝
->
pd
.
f°r
) <= 0) {

378 
	`EºExô
(
EºExô_ASSERT
, "merge_backingstore(PREDECESSOR) !fwrite(fstr, \"dump\")");

379  
FALSE
;

381 i‡(
	`‰ód
(
p_bs_¥ed
, (
bs_ªc‹d_t
), 
n_ªc
, 
p_§c_˝
->
pd
.
f°r
) != (n_rec * (bs_record_t))) {

382 
	`EºExô
(
EºExô_ASSERT
, "merge_backingstore(PREDECESSOR) !fread");

383  
FALSE
;

385 
p_bs_ba£
 = 
p_bs_¥ed
;

387 } i‡(
MS_BACKINGSTORE
) {

388 i‡(!
p_§c_˝
->
≥r_§c
.
rmfs
.
backög°‹e
) {

389 
	`EºExô
(
EºExô_ASSERT
, "merge_backingstore(BACKINGSTORE) but !p_src_cp->...backingstore");

390  
FALSE
;

392 
p_bs_ba£
 = 
p_§c_˝
->
vÆ
.
ue
.
bs
;

394 i‡(!
	`ck_bs
(
p_bs
)) {

395 
	`EºExô
(
EºExô_ASSERT
, "merge_backingstore(PREDECESSOR) !ck_bs()");

396  
FALSE
;

398 
	`time
(&
t
);

399 
bsh
 = 
p_bs_ba£
;

400 
n_j
 = 
bsh
->
size
;

402 i‡(!(
p_jn
 = 
	`ˇŒoc
(
n_j
, (
jnode_t
)))) {

403 
	`EºExô
(
EºExô_ASSERT
, "merge_backingstore() calloc(jobÇode)");

404  
FALSE
;

407 
h_˘x
 = 
	`djb_°πohash
(
CTX_XATTR_NM
);

415 
j
 = 0, 
p_b§
 = 
p_bs
 = 
p_bs_ba£
, 
n_j
 = 0;

416 !
p_b§
->
htyp
.
åaûî
;

417 
j
++, 
p_b§
 = (
p_bs
++)->
_u
.
_r
) {

419 i‡(
p_b§
->
htyp
.
öföôe_expú©i⁄
 ||Ö_b§->htyp.
node_dñè
) {

421 i‡(
	`∫_jobid_m©chsig
(
p_b§
->
job_id
,Ö_b§->
∫_sig
)) {

422 i‡(
p_b§
->
htyp
.
öföôe_expú©i⁄
 ||

423 (
p_b§
->
htyp
.
node_dñè
 &&Ö_b§->
tm_exp
 >
t
)

425 
h
 = 
	`djb_°πohash
(
p_b§
->
x©å
.
nm
);

427 i‡(
h_˘x
 =
h
) {

428 i‡(!
	`∫_jobid_addx©å
(
p_b§
->
job_id
,Ö_b§->
x©å
.
nm
,Ö_b§->x©å.
˘x
)) {

429 
	`EºExô
(
EºExô_ASSERT
, "merge_backingstore()Ñn_jobid_addxattr(jobid)");

430  
FALSE
;

432 
rc
 = 
TRUE
;

438  
rc
;

439 
	}
}

450 
åi_t


451 
	$›í_BackögSt‹e
(
c⁄fig_∑øm_t
 *
p_backög°‹e_˝
, 
rdwr
) {

452 
∫_∑øm_t
 *
p_∫_∑ømèb
;

453 
√edToCª©e
 = 0;

454 
exi°s
 = 0;

455 
i
, 
n_öf
, 
bs_fd
;

456 
FILE
 *
bs_f°r
;

457 
bs_size
;

458 
°©
 
°
;

459 
bs_ªc‹d_t
 *
p_bs
, *
p_hdr
, *
p_b¨rõr
, *
p_åaûî
;

460 
bs_ªc‹d_t
 
bs_ªc
, 
bs_zîo
;

461 
c⁄fig_∑øm_t
 *
p_pid_˝
, *
p_ho°«me_˝
;

462 
time_t
 
t
;

464 i‡(!
p_backög°‹e_˝
) {

465 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !p_backingstore_cp");

466  
FALSE
;

469 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
FALSE
);

470 i‡(!
p_∫_∑ømèb
) {

471 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !p_rn_paramtab");

472  
FALSE
;

474 
bs_size
 = 
p_∫_∑ømèb
->
∫_maxÆloc
;

476 i‡(!(
p_pid_˝
 = 
	`gëc⁄fig_‰omnm
("pid"))) {

477 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !p_pid_cp");

478  
FALSE
;

481 i‡(!(
p_ho°«me_˝
 = 
	`gëc⁄fig_‰omnm
("hostname"))) {

482 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !p_hostname_cp");

483  
FALSE
;

486 i‡(
	`ac˚ss
(
p_backög°‹e_˝
->
vÆ
.
∑thnm
) < 0) {

487 
√edToCª©e
++;

489 
exi°s
++;

492 i‡(
exi°s
) {

493 i‡((
bs_fd
 = 
	`shm_›í
(
p_˝
->
vÆ
.
fuŒ°r
, 
rdwr
? 
O_RDWR
: 
O_RDONLY
 )) < 0) {

494 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !SHM_OPEN(BackingStore)");

495  
FALSE
;

497 i‡(!(
p_bs
 = 
	`mm≠64
–
NULL
, 
bs_size
, 
rdwr
? 
PROT_READ
|
PROT_WRITE
: PROT_READ,

498 
rdwr
? 
MAP_SHARED
|
MAP_LOCKED
|
MAP_POPULATE
:
MAP_PRIVATE
|MAP_LOCKED|MAP_POPULATE,

499 
bs_fd
, 0))) {

500 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !mmap(existing BackingStore)");

501  
FALSE
;

504 i‡(
rdwr
) {

505 i‡(
p_bs
->
size
 !
bs_size
) {

506 i‡(
p_bs
->
size
 < 
bs_size
) {

507 i‡(
	`·runˇã
(
bs_fd
, 
bs_size
*(
bs_ªc‹d_t
)) < 0) {

508 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !ftruncate(BackingStore)");

509  
FALSE
;

511 
	`EºExô
(
EºExô_WARN
, "open_BackingStore():Énlarged BackingStore");

516 
p_hdr
 = 
p_bs
;

517 
p_åaûî
 = 
p_bs
 + 
bs_size
 - 1;

520 i‡(
√edToCª©e
) {

521 i‡((
bs_fd
 = 
	`shm_›í
(
p_˝
->
vÆ
.
fuŒ°r
, 
O_RDWR
|
O_CREAT
)) < 0) {

522 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !SHM_OPEN(BackingStore, O_CREAT)");

523  
FALSE
;

525 i‡(
	`·runˇã
(
bs_fd
, 
bs_size
*(
bs_ªc‹d_t
)) < 0) {

526 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !ftruncate(BackingStore)");

527  
FALSE
;

529 i‡(!(
p_bs
 = 
	`mm≠64
–
NULL
, 
bs_size
, 
PROT_READ
|
PROT_WRITE
,

530 
MAP_SHARED
|
MAP_LOCKED
|
MAP_POPULATE
, 
bs_fd
, 0))) {

531 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !mmap(new BackingStore)");

532  
FALSE
;

535 i‡(
	`mem£t
(
p_bs
, 0, 
bs_size
*(
bs_ªc‹d_t
)) !=Ö_bs) {

536 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !memset(0, BackingStore)");

537  
FALSE
;

539 i‡(
	`time
(&
t
) < 0) {

540 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !time()");

541  
FALSE
;

545 
p_hdr
 = 
p_bs
;

546 
p_åaûî
 = 
p_bs
 + 
bs_size
 - 1;

549 
bs_ªc
.
htyp
.
hódî
 = 
TRUE
;

550 
bs_ªc
.
time_°amp
 = 
t
;

551 
bs_ªc
.
n_öföôe_expú©i⁄
 = 
n_öf
 = 
BS_MIN_INF_EXP_SPACE
;

552 
bs_ªc
.
size
 = 
bs_size
;

553 
bs_ªc
.
ow√r
 = 
p_pid_˝
->
vÆ
.
ue
.
pid
;

554 
bs_ªc
.
œ°_wrôãn
 = 0;

555 
bs_ªc
.
f‹m©_vîsi⁄
 = 
BS_FORMAT_VERSION
;

558 i‡(
	`°æ˝y
(
bs_ªc
.
ho°
, 
p_ho°«me_˝
->
vÆ
.
ch¨°r
, 
p_hdr
->ho°,Ö_ho°«me_˝->vÆ.
size
) !=Ö_hostname_cp->val.size) {

559 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !strlcpy(HEADER, hostname)");

560  
FALSE
;

562 *
p_hdr
 = 
bs_ªc
;

564 
bs_ªc
.
htyp
.
hódî
 = 
FALSE
;

565 
bs_ªc
.
htyp
.
åaûî
 = 
TRUE
;

566 *
p_åaûî
 = 
bs_ªc
;

568 i‡(
	`mem£t
(
bs_zîo
, 0, (
bs_ªc‹d_t
)Ë!
p_bs
) {

569 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !memset(0, BackingStore)");

570  
FALSE
;

575 
bs_ªc
 = 
bs_zîo
;

576 
bs_ªc
.
htyp
.
b¨rõr
 = 
TRUE
;

577 
bs_ªc
.
htyp
.
hódî
 = 
TRUE
;

578 
bs_ªc
.
htyp
.
öföôe_expú©i⁄
 = 
TRUE
;

580 
p_b¨rõr
 = 
p_hdr
 + 1;

581 *
p_b¨rõr
 = 
bs_ªc
;

584 
bs_ªc
 = 
bs_zîo
;

586 
bs_ªc
.
htyp
.
öföôe_expú©i⁄
 = 
TRUE
;

587 
bs_ªc
.
time_°amp
 = 
t
;

588 
bs_ªc
.
job_id
 = 
NO_VAL
;

589 
bs_ªc
.
∫_sig
 = 0;

591 
i
 = 0, 
p_bs
 = 
p_b¨rõr
 + 1; i < 
n_öf
; i++,Ö_bs++) {

592 *
p_bs
 = 
bs_ªc
;

595 
bs_ªc
 = 
bs_zîo
;

596 
bs_ªc
.
htyp
.
b¨rõr
 = 
TRUE
;

597 
bs_ªc
.
htyp
.
öföôe_expú©i⁄
 = 
TRUE
;

598 
bs_ªc
.
htyp
.
node_dñè
 = 
TRUE
;

599 
p_b¨rõr
 = 
p_bs
;

600 *
p_b¨rõr
 = 
bs_ªc
;

603 
bs_ªc
 = 
bs_zîo
;

604 
bs_ªc
.
htyp
.
b¨rõr
 = 
TRUE
;

605 
bs_ªc
.
htyp
.
node_dñè
 = 
TRUE
;

606 
bs_ªc
.
htyp
.
åaûî
 = 
TRUE
;

607 
p_b¨rõr
 = 
p_åaûî
 - 1;

608 *
p_b¨rõr
 = 
bs_ªc
;

610 i‡(
	`msync
(
p_hdr
, 
bs_size
*(
bs_ªc‹d_t
), 
MS_SYNC
|
MS_INVALIDATE
) < 0) {

611 
	`EºExô
(
EºExô_ASSERT
, "open_BackingStore(): !msync(initial format)");

612  
FALSE
;

614 
p_bs
 = 
p_hdr
;

617 
p_backög°‹e_˝
->
vÆ
.
ue
.
bs
 = 
p_hdr
;

618 
p_backög°‹e_˝
->
pd
.
is_fûe°r
 = 
FALSE
;

619 
p_backög°‹e_˝
->
pd
.
is_mm≠≥d
 = 
TRUE
;

621  
p_hdr
;

622 
	}
}

629 
åi_t


630 
	$ªque°Wrôe_BackögSt‹e
(*
mou¡poöt
) {

631 
fd
;

632 
FILE
 *
f°r
;

633 
pbuf
[
_POSIX_PATH_MAX
];

635 i‡(!
mou¡poöt
) {

636 
	`EºExô
(
EºExô_ASSERT
, "requestWrite_BackingStore: !mountpoint");

637  
FALSE
;

642 i‡(
	`¢¥ötf
(
pbuf
, 
_POSIX_PATH_MAX
-1, "%s/c⁄åﬁ/wrôe", 
mou¡poöt
) < 0) {

643 
	`EºExô
(
EºExô_ASSERT
, "requestWrite_BackingStore: snprintf(pbuf/control/write)");

644  
FALSE
;

646 i‡((
fd
 = 
	`›í
(
pbuf
, 
W_OK
)) < 0) {

647 
	`EºExô
(
EºExô_ASSERT
, "requestWrite_BackingStore: open(pbuf/control/write) < 0");

648  
FALSE
;

650 i‡(!(
f°r
 = 
	`fd›í
(
fd
, "w+"))) {

651 
	`EºExô
(
EºExô_ASSERT
, "requestWrite_BackingStore: fdopen(pbuf/control/write) < 0");

652  
FALSE
;

654 i‡(
	`Ârötf
(
f°r
, "write\n") <= 0) {

655 
	`EºExô
(
EºExô_ASSERT
, "requestWrite_BackingStore: fprintf(pbuf/control/write) < 0");

656  
FALSE
;

658 
	`f˛o£
(
f°r
);

659  
TRUE
;

660 
	}
}

	@lib/collect/collect_cp.c

2 
	~"rmfs.h
"

5 
∑øm_sour˚_t


6 
	$cﬁÀ˘_˝
(
c⁄fig_∑øm_t
 *
p_˝
) {

7 
c⁄fig_∑øm_t
 *
p_˝_dïíds
, *
p_˝_di
, *
p_˝_Debug
;

8 
∑øm_sour˚_t
 
dï_p§c
, 
§c
, 
s
;

9 
åi_t
 
debug
;

11 
c⁄fig_∑øm_t
 *
	`öô_dïídícy_˝
(config_param_t *);

13 i‡(!
p_˝
) {

14 
	`EºExô
(
EºExô_ASSERT
, "collect_cp: !p_cp");

15  
PSRC_NONE
;

17 
	`öô_hash_˝
(
p_˝
);

18 
	`öô_dïídícy_˝
(
p_˝
);

24 i‡(
p_˝
->
dïíds_⁄
.
nm
) {

25 i‡(!(
p_˝_dïíds
 = 
	`öô_dïídícy_˝
(
p_˝
))) {

26 
	`EºExô
(
EºExô_ASSERT
, "collect_cp: !p_cp_depends");

29 
p_˝_di
 = 
p_˝
->
dïíds_⁄
.p_cp;

30 
p_˝_di
 ;

31 
p_˝_di
 =Ö_˝_di->
dïíds_⁄
.
p_˝
) {

33 
dï_p§c
 = 
	`cﬁÀ˘_˝
(
p_˝_di
);

35 i‡(
	`NOBITS
(
dï_p§c
)) {

36 
	`EºExô
(
EºExô_INTERNAL
, "collect_cp: dependentÖ_cp collection failed");

45 
p_˝_Debug
 = 
	`gëc⁄fig_‰omnm
("Debug");

46 
debug
 = !
p_˝_Debug
? 
FALSE
:Ö_˝_Debug->
vÆ
.
ue
.
åuth
;

65 
s
 = 
PSRC_MOST_TRUSTED
, 
§c
 = 
p_˝
->§c.
a˘uÆ
;

66 
	`PSRC_TEST
(
s
, 
PSRC_LEAST_TRUSTED
Ë&& 
§c
 =
PSRC_NONE
;

67 
s
 = 
	`PSRC_NXT
(s)) {

72 i‡(
	`ISSET
(
p_˝
->
§c
.
Ælowed
, 
s
) ||

73 (
debug
 =
TRUE
 && 
	`ISSET
(
p_˝
->
§c
.debug, 
s
))

76 i‡(
	`NOBITS
(
p_˝
->
§c
.
a˘uÆ
)) {

77 i‡(
s
 =
PSRC_NONE
) {

78 
	`EºExô
(
EºExô_ASSERT
, "collect_cp: s=PSRC_NONE");

81 i‡(
∑øm_cﬁÀ˘i⁄_fun˘ab
[
s
-1]) {

82 
§c
 = (
∑øm_cﬁÀ˘i⁄_fun˘ab
[
s
-1])(
p_˝
);

83 i‡(
§c
 !
PSRC_NONE
) {

84 
p_˝
->
§c
.
a˘uÆ
 = 
	`BIT
(src);

92 
p_˝_Debug
 = 
	`gëc⁄fig_‰omnm
("Debug");

93 i‡(!
p_˝_Debug
) {

94 
	`EºExô
(
EºExô_INTERNAL
, "collect_cp: cannot find DebugÖ_cp");

97 i‡(
p_˝_Debug
->
h
 =
p_˝
->h &&Ö_˝_Debug->
vÆ
.
ue
.
åuth
) {

98 i‡(
p_˝
->
dïíds_⁄
.
nm
) {

99 
	`EºExô
(
EºExô_INTERNAL
, "collect_cp: Debug isÇotát base of dependency chain");

104  
p_˝
->
§c
.
a˘uÆ
;

105 
	}
}

	@lib/collect/collect_default.c

2 
	~"rmfs.h
"

6 
∑øm_sour˚_t


7 
	$cﬁÀ˘_deÁu…
(
c⁄fig_∑øm_t
 *
p_˝
) {

9 i‡(
	`ANY
(
p_˝
->
§c
.
a˘uÆ
)) {

10  
p_˝
->
§c
.
a˘uÆ
;

13 i‡(!
	`ISSET
(
p_˝
->
§c
.
Ælowed
, 
PSRC_DEFAULT
)) {

14  
PSRC_NONE
;

16 i‡(
	`IS_CONTEXT_TYPE
(
p_˝
->
typ
)) {

17  
PSRC_NONE
;

28 i‡(
	`IS_SLURM_TYPE
(
p_˝
->
typ
)) {

29 
	`£t_vÆ_±r
(
p_˝
,Ö_˝->
deÁu…_vÆ
.
ue
.
±r
);

31 } i‡(
	`IS_NUMSIGNED_TYPE
(
p_˝
->
typ
)) {

32 
	`£t_vÆ_l
(
p_˝
,Ö_˝->
deÁu…_vÆ
.
ue
.
l
);

34 } i‡(
	`IS_TRUTH_TYPE
(
p_˝
->
typ
)) {

35 
	`£t_vÆ_åuth
(
p_˝
,Ö_˝->
deÁu…_vÆ
.
ue
.
åuth
);

37 } i‡(
	`IS_NUMERIC_TYPE
(
p_˝
->
typ
)) {

38 
	`£t_vÆ_ul
(
p_˝
,Ö_˝->
deÁu…_vÆ
.
ue
.
ul
);

40 } i‡(
	`IS_FSVIS_TYPE
(
p_˝
->
typ
)) {

42 i‡(!
p_˝
->
dïíds_⁄
.
nm
 || !p_cp->depends_on.p_cp ||

43 !
	`IS_FSVIS_TYPE
(
p_˝
->
dïíds_⁄
.p_˝->
typ
)) {

44 
	`£t_vÆ_ch¨±r
(
p_˝
,Ö_˝->
deÁu…_vÆ
.
ue
.
∑thnm
);

47 *
≤
;

48 i‡(!(
≤
=
	`ˇŒoc
(
_POSIX_PATH_MAX
, ()))) {

49 
	`EºExô
(
EºExô_NOMEM
, "collect_default: calloc(pn)");

52 
	`¢¥ötf
(
≤
, 
_POSIX_PATH_MAX
, "%s/%s",

53 
p_˝
->
dïíds_⁄
.p_˝->
vÆ
.
ue
.
∑thnm
,Ö_˝->
deÁu…_vÆ
.ue.pathnm);

54 
	`£t_vÆ_ch¨±r
(
p_˝
, 
≤
);

57 } i‡(
	`IS_HOST_TYPE
(
p_˝
->
typ
)) {

58 
	`£t_vÆ_ch¨±r
(
p_˝
,Ö_˝->
deÁu…_vÆ
.
ue
.
ho°«me
);

60 } i‡(
	`IS_ALPHA_TYPE
(
p_˝
->
typ
Ë&&Ö_˝->
deÁu…_vÆ
.
size
 != 0) {

61 
	`£t_vÆ_ch¨±r
(
p_˝
,Ö_˝->
deÁu…_vÆ
.
ue
.
°r
);

64 
	`£t_vÆ_±r
(
p_˝
,Ö_˝->
deÁu…_vÆ
.
ue
.
°r
);

66  
PSRC_DEFAULT
;

67 
	}
}

	@lib/collect/collect_env.c

2 
	~"rmfs.h
"

6 
∑øm_sour˚_t


7 
	$cﬁÀ˘_ív
(
c⁄fig_∑øm_t
 *
p_˝
) {

8 *
ev¨p
;

9 
rc
;

11 
rc
 = 
PSRC_NONE
;

12 i‡(!
p_˝
) {

13 
	`EºExô
(
EºExô_ASSERT
, "collect_env: !p_cp");

14  
PSRC_NONE
;

17 i‡((
ev¨p
 = 
	`gëív
(
p_˝
->
nm
))) {

18 
	`£t_vÆ_±r
(
p_˝
, 
ev¨p
);

19 
rc
 = 
PSRC_ENV
;

21  
rc
;

22 
	}
}

	@lib/collect/collect_fuse.c

9 
	~"rmfs.h
"

40 
	g£À˘_⁄ly_⁄e
 = 0;

43 
	$∑r£_™_¨g
(*
d©a
, c⁄° *
¨g
, 
fu£key
, 
fu£_¨gs
 *
ouèrg
) {

45 
c⁄fig_∑øm_t
 *
p_fu£_˝
 = 
NULL
;

46 
c⁄fig_∑øm_t
 *
p_˝
;

47 
¶urm_fu£_›t_desc_t
 *
p_f›d
;

48 
rmfs_∑øm_t
 
√w_vÆ
;

49 
åi_t
 
tc
;

50 
Àn
;

52 
p_f›d
 = (
¶urm_fu£_›t_desc_t
 *Ë
d©a
;

54 i‡(
fu£key
 =
FUSE_OPT_KEY_NONOPT
) {

55 i‡(!(
p_f›d
->
oÊg
 | 
OPT_NONOPT
)) {

56 
	`EºExô
(
EºExô_ASSERT
, "parse_an_arg: fusekey==FUSE_OPT_KEY_NONOPT, butÖ_fopd->oflg !OPT_NONOPT");

59 
p_˝
 = 
	`gëc⁄fig_‰omnm
(
p_f›d
->
nm
);

60 i‡(!
p_˝
) {

61 
	`EºExô
(
EºExô_ASSERT
, "parse_an_arg: NONOPT: !p_cp ");

65 
Àn
 = 
	`öã∫Æ_°æí
((*Ë
¨g
);

66 i‡(
Àn
 >
_POSIX_PATH_MAX
) {

67 
	`EºExô
(
EºExô_ENOMEM
, "parse_an_arg:árg is >= _POSIX_PATH_MAX ");

70 
√w_vÆ
.
ue
.
∑thnm
 = (*Ë
¨g
;

71 
√w_vÆ
.
size
 = 
Àn
 + 1;

73 
tc
 = 
	`typ_check
(
p_˝
->
typ
, &
√w_vÆ
);

74 i‡(
tc
 =
TRUE
) {

75 
p_˝
->
vÆ
.
size
 = 
√w_vÆ
.size;

76 
p_˝
->
vÆ
.
ue
.
∑thnm
 = 
	`°∫dup
(
¨g
, 
√w_vÆ
.
size
);

77 i‡(!
p_˝
->
vÆ
.
ue
.
∑thnm
) {

78 
	`EºExô
(
EºExô_ENOMEM
, "parse_an_arg: NONOPT strdupÑeturned NULL");

82 } i‡(
fu£key
 =
FUSE_OPT_KEY_OPT
) {

84 i‡(!(
p_f›d
->
oÊg
 | 
OPT_SELECT_ONE
)) {

85 
£À˘_⁄ly_⁄e
++;

87 i‡(!
¨g
) {

90 i‡(!(
p_fu£_˝
 = 
	`gëc⁄fig_‰omnm
((*Ë
¨g
))) {

93 
√w_vÆ
.
ue
.
±r
 = (*Ë
¨g
;

94 
√w_vÆ
.
size
 = 
p_fu£_˝
->
vÆ
.size;

95 
tc
 = 
	`typ_check
(
p_fu£_˝
->
typ
, &
√w_vÆ
);

96 i‡(
tc
 =
TRUE
) {

97 
	`£t_vÆ_±r
(
p_fu£_˝
, 
√w_vÆ
.
ue
.
±r
);

100 
	`EºExô
(
EºExô_INTERNAL
, "parse_an_arg: unknown key?");

102 i‡(
TRUE
 =
tc
) {

103 
p_˝
->
§c
.
a˘uÆ
 = 
	`BIT
(
PSRC_FUSE
);

105 i‡(
£À˘_⁄ly_⁄e
 > 1) {

106 
	`EºExô
(
EºExô_CONFIG
, "parse_an_arg:Åoo many SELECT_ONE options specified");

109 
	}
}

112 
¶urm_fu£_›t_desc_t
 *

113 
	$gëfu£›tdesc_‰omc⁄fig
(
c⁄fig_∑øm_t
 *
p_˝
) {

114 
¶urm_fu£_›t_desc_t
 *
p_fu_›d
 = 
NULL
;

116 i‡(
p_˝
->
p_f›d
) {

117  
p_˝
->
p_f›d
;

119 i‡(
	`IS_INVALID_HASH
(
p_˝
->
h
)) {

120 
	`öô_hash_˝
(
p_˝
);

122 
p_fu_›d
 = 
¶urm_f›ts
;Ö_fu_›d->
nm
;Ö_fu_opd++) {

123 i‡(
p_˝
->
h
 =
	`djb_°πohash
(
p_fu_›d
->
nm
)) {

124  
p_fu_›d
;

127  
NULL
;

128 
	}
}

140 
∑øm_sour˚_t


141 
	$c⁄°ru˘_fu£_mou¡›ts
(
c⁄fig_∑øm_t
 *
p_˝
) {

142 
i
 = 0, 
n
 = 0, 
√w_size
 = 0;

143 íum { 
NOTHING
 = 0, 
TERMINATOR
 = 1, 
OPT
 = 2, 
NONOPT
 = 4 } 
to_do
;

144 
∑øm_sour˚_t
 
rc
 = 
PSRC_NONE
;

147 
fu£›ts_Àn
;

148 
fu£_›t
 *
p_fu£›ts_tbl
;

149 
¶urm_fu£_›t_desc_t
 
¶urm_f›ts
[];

151 
fu£_›t
 *
p_fo
 = 
NULL
;

152 
fu£_›t
 *
p_f1
 = 
NULL
;

153 
¶urm_fu£_›t_desc_t
 *
p_f›d
 = 
NULL
;

155 i‡(!(
p_f›d
 = 
	`gëfu£›tdesc_‰omc⁄fig
(
p_˝
))) {

160  
rc
;

173 
p_˝
->
p_f›d
 =Ö_fopd;

174 
p_f›d
->
p_˝
 =Ö_cp;

189 
i
 = 
fu£›ts_Àn
;

190 
to_do
 = 
NOTHING
;

193 i‡(!
p_f›d
->
nm
) {

194 
to_do
 = 
TERMINATOR
;

195 
n
 = 1;

198 } i‡(
p_f›d
->
oÊg
 & 
OPT_NONOPT
) {

199 
to_do
 = 
NONOPT
; 
n
 = 1;

202 } i‡(
p_f›d
->
_s
 &&Ö_f›d->
_l⁄g
) {

203 
to_do
 = 
OPT
;

204 
n
 = 2;

208 
	`EºExô
(
EºExô_INTERNAL
, "construct_fuse_mountops: brokenÖarameterÅable");

210 
√w_size
 = 
fu£›ts_Àn
 + 
n
;

212 i‡(
√w_size
 <= 0) {

213 
	`EºExô
(
EºExô_ASSERT
, "construct_fuse_mountopts:Çew_size <= 0");

214  
PSRC_NONE
;

217 i‡(!
p_fu£›ts_tbl
) {

219 
p_fu£›ts_tbl
 = (
fu£_›t
 *Ë
	`ˇŒoc
(
	`gë_fo_max_Àn
(), (fuse_opt));

220 i‡(!
p_fu£›ts_tbl
) {

221 
	`EºExô
(
EºExô_TEMPFAIL
, "calloc(fuseopts_tbl)Ñeturned NULL");

224 
p_fo
 = &
p_fu£›ts_tbl
[
n
];

225 
p_f1
 = 
p_fo
 + 1;

226 
fu£›ts_Àn
 = 
√w_size
;

228 
p_˝
->
p_fo
 =Ö_fo;

230 
to_do
) {

231 
TERMINATOR
:

232 *
p_fo
 = (
fu£_›t
Ë
FUSE_OPT_END
;

233 
rc
 = 
PSRC_MNT_NONOPT
;

236 
NONOPT
:

243 
p_fo
->
ãm∂
 = 
p_˝
->
nm
;

244 
p_fo
->
off£t
 = -1U;

245 
p_fo
->
vÆue
 = (Ë
	`djb_°πohash
(
p_˝
->
nm
);

246 
rc
 = 
PSRC_MNT_NONOPT
;

249 
OPT
:

258 
p_fo
->
ãm∂
 = 
p_f›d
->
_s
;

259 
p_fo
->
off£t
 = -1U;

260 
p_fo
->
vÆue
 = (Ë
	`djb_°πohash
(
p_˝
->
nm
);

262 
p_f1
 = (
p_fo
 + 1);

264 
p_f1
->
ãm∂
 = 
p_f›d
->
_l⁄g
;

265 
p_f1
->
off£t
 = -1U;

266 
p_f1
->
vÆue
 = (Ë
	`djb_°πohash
(
p_˝
->
nm
);

267 
rc
 = 
PSRC_MNT_OPT
;

273  
rc
;

274 
	}
}

282 
	gãrm_cou¡
 = 0;

284 
∑øm_sour˚_t


285 
	$cﬁÀ˘_fu£_mou¡›ts
(
c⁄fig_∑øm_t
 *
p_˝
) {

286 
∑øm_sour˚_t
 
rc
 = 
PSRC_NONE
;

287 
fu£_¨gs
 
f_¨gs
;

289 i‡(
ãrm_cou¡
++ > 1) {

290 
	`EºExô
(
EºExô_INTERNAL
, "collect_fuse_mountopts: (re)terminate?");

292 i‡(!
p_˝
) {

293 
	`EºExô
(
EºExô_ASSERT
, "collect_fuse_mountopts: !p_cp");

294  
rc
;

298 i‡((
rc
 = 
	`c⁄°ru˘_fu£_mou¡›ts
(
p_˝
))) {

300 i‡(
p_˝
 !
¶urm_f›ts
[0].p_cp) {

301 
	`EºExô
(
EºExô_INTERNAL
, "collect_fuse_mountopts: NONOPTÖ_cpÜinkage broken");

305 i‡(
	`fu£_›t_∑r£
(&
f_¨gs
, &
¶urm_f›ts
[0], 
p_fu£›ts_tbl
, &
∑r£_™_¨g
)) {

306 
	`Ußge
 (
EºExô_ARGPARSE
, 
NULL
);

308 
rc
 = 
PSRC_MNT_NONOPT
;

310  
rc
;

311 
	}
}

	@lib/collect/collect_macconf.c

2 
	~"rmfs.h
"

12 
∑øm_sour˚_t


13 
	$cﬁÀ˘_macc⁄f
(
c⁄fig_∑øm_t
 *
p_˝
) {

14 
c⁄fig_∑øm_t
 *
p_˝_macc⁄f
;

15 
°©
 
°
;

16 
macc⁄f_fd
;

17 *
macc⁄f
;

18 *
≤am
, *
pvÆ
;

20 
p_˝_macc⁄f
 = 
	`gëc⁄fig_‰omnm
("SLURM_MAC_CONF");

21 i‡(!
p_˝_macc⁄f
) {

22 
	`EºExô
(
EºExô_ASSERT
, "collect_macconf: !p_cp_macconf");

23 
out
;

30 i‡(-1 =
	`°©
(
p_˝_macc⁄f
->
nm
, &
°
)) {

31 
out
;

33 i‡(-1 =(
macc⁄f_fd
 = 
	`›í
(
p_˝_macc⁄f
->
nm
, 
O_RDONLY
, 0))) {

34 
out
;

36 i‡(
MAP_FAILED
 =(
macc⁄f
 = 
	`mm≠
(
NULL
, 
°
.
°_size
, 
PROT_READ
, 
MAP_PRIVATE
, 
macc⁄f_fd
, 0))) {

37 
˛o£_out
;

44 i‡((
≤am
 = 
	`°r°r
(
macc⁄f
, 
p_˝
->
nm
))) {

45 i‡((
pvÆ
 = 
	`°πok
(
≤am
, "="))) {

46 
pvÆ
 = 
	`°πok
(
NULL
, "\n\0");

47 
	`£t_vÆ_±r
(
p_˝
, 
pvÆ
);

48 
	`˛o£
(
macc⁄f_fd
);

49  
PSRC_MAC_CONF
;

53 
˛o£_out
:

54 
	`˛o£
(
macc⁄f_fd
);

55 
out
:

56  
PSRC_NONE
;

57 
	}
}

59 
∑øm_sour˚_t


60 
	$cﬁÀ˘mac_c⁄ãxt
(
c⁄fig_∑øm_t
 *
p_˝
) {

62 
åi_t
 
	`typ_c⁄ãxt
(
rmfs_∑øm_t
 *);

64 i‡(!
p_˝
) {

65  
PSRC_NONE
;

67 i‡(
	`ANY
(
p_˝
->
§c
.
a˘uÆ
)) {

68  
p_˝
->
§c
.
a˘uÆ
;

70 i‡(
TRUE
 !
	`typ_c⁄ãxt
(&
p_˝
->
vÆ
)) {

71  
PSRC_NONE
;

73  
	`cﬁÀ˘_macc⁄f
(
p_˝
);

74 
	}
}

	@lib/collect/collect_os.c

2 
	~"rmfs.h
"

10 
	$mkdú_v¨run
(
c⁄fig_∑øm_t
 *
v¨run_˝
) {

11 
rc
, 
e
;

12 
î∫o
;

13 
åi_t
 
	`typ_dú
(
rmfs_∑øm_t
 *);

15 i‡(!
v¨run_˝
) {

18 i‡(!
v¨run_˝
->
vÆ
.
ue
.
∑thnm
) {

21 i‡(
FALSE
 =
	`typ_dú
(&
v¨run_˝
->
vÆ
)) {

24 
rc
 = 
	`mkdú
(
v¨run_˝
->
vÆ
.
ue
.
∑thnm
, 
S_IRWXU
|
S_IRGRP
|
S_IXGRP
|
S_IXOTH
|
S_IROTH
);

25 i‡(-1 =
rc
) {

26 
e
 = 
î∫o
;

27 i‡(
e
 !
EEXIST
) {

28 
	`EºExô
(
EºExô_NOPERM
, "mkdir_varrun: mkdir");

32  
rc
;

33 
	}
}

43 
	$v¨run_›í˝
(
c⁄fig_∑øm_t
 *
fûe_˝
) {

44 *
fuŒ∑th
;

45 
fd
, 
e
;

46 
î∫o
;

47 
FILE
 *
f°r
;

48 
c⁄fig_∑øm_t
 *
v¨run_˝
, *
pid_˝
;

49 
mode_t
 
mode
;

50 
pid_t
 
ow√r
;

52 i‡(!
fûe_˝
) {

53 
	`EºExô
(
EºExô_ASSERT
, "varrun_opencp: !file_cp");

56 
v¨run_˝
 = 
	`gëc⁄fig_‰omnm
("varrun");

57 i‡(!
v¨run_˝
) {

58 
	`EºExô
(
EºExô_ASSERT
, "varrun_opencp: !varrun_cp");

61 
pid_˝
 = 
	`gëc⁄fig_‰omnm
("pid");

62 i‡(!
pid_˝
) {

63 
	`EºExô
(
EºExô_ASSERT
, "varrun_opencp: !pid_cp");

74 
fuŒ∑th
 = 
fûe_˝
->
vÆ
.
pd
.fullpath;

75 i‡(!
fûe_˝
->
vÆ
.
pd
.
fuŒ∑th
) {

76 
fuŒ∑th
 = 
	`ˇŒoc
(
_POSIX_PATH_MAX
, ());

77 i‡(!
fuŒ∑th
) {

78 
	`EºExô
(
EºExô_ASSERT
, "varrun_opencp: calloc fullpath NULL");

81 i‡(
	`¢¥ötf
(
fuŒ∑th
, 
_POSIX_PATH_MAX
-1, "%s/%s",

82 
v¨run_˝
->
vÆ
.
ue
.
∑thnm
, 
fûe_˝
->val.ue.pathnm) < 0) {

84 
	`EºExô
(
EºExô_ASSERT
, "varrun_opencp: construct fullpath");

87 
fûe_˝
->
vÆ
.
pd
.
fuŒ∑th
 = fullpath;

90 
fd
 = 
fûe_˝
->
vÆ
.
pd
.fd;

91 i‡(
fd
 <= 0) {

92 
mode
 = 
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IROTH
;

93 i‡((
fd
 = 
	`›í
(
fuŒ∑th
, 
O_RDWR
, 
mode
)) < 0) {

94 
e
 = 
î∫o
;

95 i‡(
e
 =
ENOENT
) {

96 i‡((
fd
 = 
	`›í
(
fuŒ∑th
, 
O_RDWR
 | 
O_CREAT
, 
mode
)) < 0) {

97 
	`EºExô
(
EºExô_ASSERT
, "varrun_opencp: cannot create fullname");

101 
	`EºExô
(
EºExô_ASSERT
, "varrun_opencp: fullname open fail");

104 
fûe_˝
->
vÆ
.
pd
.
fd
 = fd;

107 
f°r
 = 
fûe_˝
->
vÆ
.
pd
.fstr;

108 i‡(!
f°r
) {

109 i‡(!(
f°r
 = 
	`fd›í
(
fd
, "r+"))) {

110 
	`EºExô
(
EºExô_ASSERT
, "varrun_opencp: fdopen(fullname) fail");

113 
fûe_˝
->
vÆ
.
pd
.
f°r
 = fstr;

114 
fûe_˝
->
vÆ
.
pd
.
is_fûe°r
 = 
TRUE
;

115 
fûe_˝
->
vÆ
.
pd
.
is_mm≠≥d
 = 
FALSE
;

118 
ow√r
 = 
fûe_˝
->
vÆ
.
pd
.owner;

119 i‡(
ow√r
 == 0) {

120 
ow√r
 = 
	`f˙é
(
fd
, 
F_GETOWN
, 0);

122 i‡(
ow√r
 =0 || ow√∏!
pid_˝
->
vÆ
.
ue
.
pid
) {

125 i‡(
	`f˙é
(
fd
, 
F_SETOWN
, 
pid_˝
->
vÆ
.
ue
.
pid
) != -1) {

126 
ow√r
 = 
pid_˝
->
vÆ
.
ue
.
pid
;

127 
fûe_˝
->
vÆ
.
pd
.
ours
 = 
TRUE
;

128 
fûe_˝
->
vÆ
.
pd
.
ow√r
 = owner;

131 
e
 = 
î∫o
;

132 i‡(
e
 !
EPERM
) {

133 
	`EºExô
(
EºExô_ASSERT
, "varrun_opencp: F_SETOWN fail");

139 
	}
}

141 
∑øm_sour˚_t


142 
	$cﬁÀ˘os_pid
(
c⁄fig_∑øm_t
 *
p_˝
) {

143 
t
[
_POSIX_PATH_MAX
];

145 i‡(!
p_˝
) {

146 
	`EºExô
(
EºExô_ASSERT
, "collectos_pid: !p_cp");

147  
PSRC_NONE
;

149 
	`£t_vÆ_pid
(
p_˝
, 
	`gëpid
());

150 i‡(
	`typ_c›yout
(
p_˝
, 
t
, 
_POSIX_PATH_MAX
) <= 0) {

151 
	`EºExô
(
EºExô_ASSERT
, "collectos_pid:Åyp_copyout <= 0");

152  
PSRC_NONE
;

154 
p_˝
->
vÆ
.
size
 = 
	`öã∫Æ_°æí
(
t
)+1;

156  
PSRC_DERIVED
;

157 
	}
}

159 #i‚de‡
_HOST_NAME_MAX


160 
	#_HOST_NAME_MAX
 
_POSIX_PATH_MAX
-1

	)

163 
∑øm_sour˚_t


164 
	$cﬁÀ˘os_ho°«me
(
c⁄fig_∑øm_t
 *
p_˝
) {

165 *
p_ho°nm
;

167 i‡(!
p_˝
) {

168 
	`EºExô
(
EºExô_ASSERT
, "collectos_hostname: !p_cp");

169  
PSRC_NONE
;

171 i‡(!(
p_ho°nm
 = 
	`ˇŒoc
(
_HOST_NAME_MAX
+1, ()))) {

172 
	`EºExô
(
EºExô_ENOMEM
, "collectos_hostname: !callocÖ_hostnm");

175 i‡(
	`gëho°«me
(
p_ho°nm
, 
_HOST_NAME_MAX
) == -1) {

176 
	`EºExô
(
EºExô_TEMPFAIL
, "collectos_hostname: gethostname");

178 
	`£t_vÆ_ch¨±r
(
p_˝
, 
p_ho°nm
);

180  
PSRC_DERIVED
;

181 
	}
}

194 
∑øm_sour˚_t


195 
	$cﬁÀ˘os_pidfûe
(
c⁄fig_∑øm_t
 *
pidfûe_˝
) {

196 
c⁄fig_∑øm_t
 *
pid_˝
, *
v¨run_˝
;

198 i‡(!
pidfûe_˝
) {

199 
	`EºExô
(
EºExô_ASSERT
, "collectos_pidfile: !p_cp");

200  
PSRC_NONE
;

203 
pid_˝
 = 
	`gëc⁄fig_‰omnm
("pid");

204 i‡(!
pid_˝
) {

205 
	`EºExô
(
EºExô_ASSERT
, "collectos_pidfile: !pid_cp");

206  
PSRC_NONE
;

208 
v¨run_˝
 = 
	`gëc⁄fig_‰omnm
("varrun");

209 i‡(!
v¨run_˝
) {

210 
	`EºExô
(
EºExô_ASSERT
, "collectos_pidfile: !varrun_cp failed");

211  
PSRC_NONE
;

214 i‡(
	`mkdú_v¨run
(
v¨run_˝
) < 0) {

215 
	`EºExô
(
EºExô_ASSERT
, "collectos_pidfile: mkdir_varrun failed");

216  
PSRC_NONE
;

218 i‡(
	`v¨run_›í˝
(
pidfûe_˝
) < 0) {

219 
	`EºExô
(
EºExô_ASSERT
, "collectos_pidfile: varrun_opencp failed");

220  
PSRC_NONE
;

223 i‡(!
pidfûe_˝
->
vÆ
.
pd
.
ours
) {

228 
	`EºExô
(
EºExô_WARN
, "collectos_pidfile:Çot owner of mpfile");

231 
	`Ârötf
(
pidfûe_˝
->
vÆ
.
pd
.
f°r
, "%d\n", 
pid_˝
->vÆ.
ue
.
pid
);

232 
	`fÊush
(
pidfûe_˝
->
vÆ
.
pd
.
f°r
);

233 
	`fsync
(
pidfûe_˝
->
vÆ
.
pd
.
fd
);

235  
PSRC_DERIVED
;

236 
	}
}

244 
∑øm_sour˚_t


245 
	$ªc‹d_mou¡poöt
(
c⁄fig_∑øm_t
 *
mpfûe_˝
) {

246 
c⁄fig_∑øm_t
 *
mp_˝
, *
v¨run_˝
, *
pid_˝
;

248 i‡(!
mpfûe_˝
) {

249 
	`EºExô
(
EºExô_ASSERT
, "record_mountpoint: !mpfile_cp");

250  
PSRC_NONE
;

252 
mp_˝
 = 
	`gëc⁄fig_‰omnm
("MountPoint");

253 i‡(!
mp_˝
) {

254 
	`EºExô
(
EºExô_ASSERT
, "record_mountpoint: !mp_cp");

255  
PSRC_NONE
;

257 
v¨run_˝
 = 
	`gëc⁄fig_‰omnm
("varrun");

258 i‡(!
v¨run_˝
) {

259 
	`EºExô
(
EºExô_ASSERT
, "record_mountpoint: !varrun_cp failed");

260  
PSRC_NONE
;

262 
pid_˝
 = 
	`gëc⁄fig_‰omnm
("pid");

263 i‡(!
pid_˝
) {

264 
	`EºExô
(
EºExô_ASSERT
, "collectos_pidfile: !pid_cp");

265  
PSRC_NONE
;

267 i‡(
	`mkdú_v¨run
(
v¨run_˝
) < 0) {

268 
	`EºExô
(
EºExô_ASSERT
, "record_mountpoint: !mkdir_varrun()");

269  
PSRC_NONE
;

271 i‡(
	`v¨run_›í˝
(
mpfûe_˝
) < 0) {

272 
	`EºExô
(
EºExô_ASSERT
, "record_mountpoint: !varrun_opencp(mpfile_cp)");

273  
PSRC_NONE
;

276 i‡(
mpfûe_˝
->
vÆ
.
pd
.
ours
) {

277 
	`Ârötf
(
mpfûe_˝
->
vÆ
.
pd
.
f°r
, "%s\n", 
mp_˝
->vÆ.
ue
.
∑thnm
);

278 
	`fÊush
(
mpfûe_˝
->
vÆ
.
pd
.
f°r
);

279 
	`fsync
(
mpfûe_˝
->
vÆ
.
pd
.
fd
);

282 
	`EºExô
(
EºExô_ASSERT
, "record_mountpoint:Çot owner of mpfile");

285  
PSRC_DERIVED
;

286 
	}
}

	@lib/collect/collect_predecessor.c

2 
	~"rmfs.h
"

17 
åi_t


18 
	$¥ede˚ss‹_Æive
(
c⁄fig_∑øm_t
 *
p_pid_˝
,

19 
c⁄fig_∑øm_t
 *
p_mp_˝
) {

21 
c⁄fig_∑øm_t
 *
p_pidfûe_˝
, *
p_mpfûe_˝
;

22 
pid_t
 
¥ed_pid
;

23 
¥ed_˘Õid_fd
;

24 
FILE
 *
¥ed_˘Õid_f°r
;

25 
°©
 
°
;

26 
pbuf
[
_POSIX_PATH_MAX
];

29 
p_pidfûe_˝
 = 
	`gëc⁄fig_‰omnm
("pidfile");

30 
p_mpfûe_˝
 = 
	`gëc⁄fig_‰omnm
("mountpointfile");

31 i‡(!
p_pidfûe_˝
) {

32 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive: !getconfig_fromnm(\"pidfile\")");

33  
FALSE
;

35 i‡(!
p_mpfûe_˝
) {

36 
	`EºExô
(
EºExô_INTERNAL
, "predecessor_alive: !getconfig_fromnm(\"mountpointfile\")");

37  
FALSE
;

40 i‡(!
p_pidfûe_˝
->
vÆ
.
pd
.
fuŒ∑th
) {

41 
	`EºExô
(
EºExô_INTERNAL
, "predecessor_alive: !pidfile->cp->val.pd.fullpath");

42  
FALSE
;

44 i‡(!
p_mpfûe_˝
->
vÆ
.
pd
.
fuŒ∑th
) {

45 
	`EºExô
(
EºExô_INTERNAL
, "predecessor_alive: !mpfile->cp->val.pd.fullpath");

46  
FALSE
;

49 i‡(
	`°©
(
p_mpfûe_˝
->
vÆ
.
pd
.
fuŒ∑th
, &
°
) < 0) {

50 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive: !mpfile->cp->val.pd.fullpath");

51  
FALSE
;

56 i‡(
	`mem£t
(
pbuf
, 0, 
_POSIX_PATH_MAX
) < 0) {

57 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive: memset(pbuf) mpfile");

58  
FALSE
;

61 i‡(!
p_mpfûe_˝
->
vÆ
.
pd
.
is_fûe°r
) {

62 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive: mpfile !is_filestr");

63  
FALSE
;

65 i‡(
	`fsˇnf
(
p_mpfûe_˝
->
vÆ
.
pd
.
f°r
, "%s", 
pbuf
) < 0) {

66 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive: memset(pbuf) mpfile");

67  
FALSE
;

70 i‡(
	`°©
(
pbuf
, &
°
) < 0) {

71 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive: !stat(mpfile->pbuf)");

72  
FALSE
;

75 i‡(!
	`S_ISDIR
(
°
.
°_mode
)) {

76 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive: !ISDIR(mpfile->pbuf)");

77  
FALSE
;

80 i‡(
	`¢¥ötf
(
pbuf
, 
_POSIX_PATH_MAX
-1, "%s/attributes/pid",Öbuf) < 0) {

81 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive: snprintf(mpfile->pbuf/attributes/pid)");

82  
FALSE
;

85 i‡(
	`ac˚ss
(
pbuf
, 
R_OK
) < 0) {

86 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive:áccess(mpfile->cp->val.pd.fullpath/attributes/pid)");

87  
FALSE
;

90 i‡((
¥ed_˘Õid_fd
 = 
	`›í
(
pbuf
, 
R_OK
)) < 0) {

91 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive: open(mpfile->cp->val.pd.fullpath/attributes/pid) < 0");

92  
FALSE
;

94 i‡((
¥ed_˘Õid_f°r
 = 
	`fd›í
(
¥ed_˘Õid_fd
, "r")) < 0) {

95 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive: fdopen(mpfile->cp->val.pd.fullpath/attributes/pid) < 0");

96  
FALSE
;

99 i‡(
	`fsˇnf
(
¥ed_˘Õid_f°r
, "%ld", (*Ë&
¥ed_pid
) < 0) {

100 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive: fscanf(mpfile->cp->val.pd.fullpath/attributes/pid) < 0");

101  
FALSE
;

103 
	`f˛o£
 (
¥ed_˘Õid_f°r
);

104 
¥ed_˘Õid_fd
 = -1;

106 i‡(
¥ed_pid
 <= 1) {

107 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive:Öredecessor/attributes/pid <= 1");

108  
FALSE
;

111 i‡(
	`mem£t
(
pbuf
, 0, 
_POSIX_PATH_MAX
) < 0) {

112 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive: memset(pbuf-2) mpfile");

113  
FALSE
;

115 i‡(
	`fsˇnf
(
p_mpfûe_˝
->
vÆ
.
pd
.
f°r
, "%s", 
pbuf
) < 0) {

116 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive: memset(pbuf) mpfile");

117  
FALSE
;

120 i‡(
	`kûl
(
¥ed_pid
, 0) == 0) {

121  
FALSE
;

124 
	`ªque°Wrôe_BackögSt‹e
(
pbuf
);

126 
p_pid_˝
 = 
p_pidfûe_˝
;

127 
p_mp_˝
 = 
p_mpfûe_˝
;

129  
TRUE
;

130 
	}
}

136 
åi_t


137 
	$˛aim_v¨run
() {

138 
	}
}

141 
åi_t


142 
	$¥ede˚ss‹_umou¡
(
c⁄fig_∑øm_t
 *
p_¥ed_pid_˝
, c⁄fig_∑øm_à*
p_¥ed_mp_˝
) {

143 
pbuf
[
_POSIX_PATH_MAX
];

144 
¥ed_˘Õid_fd
;

146 i‡(!
p_¥ed_pid_˝
) {

147 
	`EºExô
(
EºExô_ASSERT
, "predecessor_umount: !p_pred_pid_cp");

148  
FALSE
;

150 i‡(!
p_¥ed_mp_˝
) {

151 
	`EºExô
(
EºExô_ASSERT
, "predecessor_umount: !p_pred_mp_cp");

152  
FALSE
;

155 i‡(
	`mem£t
(
pbuf
, 0, 
_POSIX_PATH_MAX
) < 0) {

156 
	`EºExô
(
EºExô_ASSERT
, "predecessor_umount: memset(pbuf) mpfile");

157  
FALSE
;

160 i‡(
	`¢¥ötf
(
pbuf
, 
_POSIX_PATH_MAX
-1, "%s/control/umount",Öbuf) < 0) {

161 
	`EºExô
(
EºExô_ASSERT
, "predecessor_umount: snprintf(mpfile->pbuf/control/umount)");

162  
FALSE
;

165 i‡(
	`ac˚ss
(
pbuf
, 
R_OK
) < 0) {

166 
	`EºExô
(
EºExô_ASSERT
, "predecessor_umount:áccess(mpfile->cp->val.pd.fullpath/control/umount)");

167  
FALSE
;

170 i‡((
¥ed_˘Õid_fd
 = 
	`›í
(
pbuf
, 
R_OK
)) < 0) {

171 
	`EºExô
(
EºExô_ASSERT
, "predecessor_umount: open(mpfile->cp->val.pd.fullpath/control/umount) < 0");

172  
FALSE
;

175 i‡(
	`wrôe
(
¥ed_˘Õid_fd
, "umou¡", 
	`öã∫Æ_°æí
("umount")) < 0) {

176 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive: write(mpfile->cp->val.pd.fullpath/control/umount, ) < 0");

177  
FALSE
;

180 i‡(
	`˛o£
(
¥ed_˘Õid_fd
)) {

181 
	`EºExô
(
EºExô_ASSERT
, "predecessor_alive: close(mpfile->cp->val.pd.fullpath/control/umount) < 0");

182  
FALSE
;

184  
TRUE
;

185 
	}
}

193 
åi_t


194 
	$cﬁÀ˘_¥ed°©e
() {

195 
c⁄fig_∑øm_t
 *
p_bs_˝
 = 
NULL
;

196 
c⁄fig_∑øm_t
 *
p_¥ed_pid_˝
 = 
NULL
;

197 
c⁄fig_∑øm_t
 *
p_¥ed_mp_˝
 = 
NULL
;

198 
c⁄fig_∑øm_t
 *
p_pid_˝
 = 
NULL
;

199 
mîged
;

200 
åi_t
 
˘Ã
;

202 
˘Ã
 = 
	`isCér
();

203 i‡(
˘Ã
) {

204 i‡(
	`›í_BackögSt‹e
(
p_bs_˝
, 
˘Ã
) < 0) {

205 
	`EºExô
(
EºExô_ASSERT
, "collect_predstate: !open_BackingStore(isCtlr)");

206  
FALSE
;

208 i‡(
	`¥ede˚ss‹_Æive
(
p_¥ed_pid_˝
, 
p_¥ed_mp_˝
)) {

209 
mîged
 = 0;

211 i‡(
	`mîge_BackögSt‹e
(
p_¥ed_mp_˝
, 
MS_PREDECESSOR
)) {

212 
mîged
++;

214 
	`EºExô
(
EºExô_ASSERT
, "merge_state[Controller]: !PREDECESSOR");

216 i‡(
	`mîge_BackögSt‹e
(
p_bs_˝
, 
MS_BACKINGSTORE
)) {

217 
mîged
++;

219 
	`EºExô
(
EºExô_ASSERT
, "merge_state[Controller]: !BACKINGSTORE");

222 i‡(
mîged
 == 0) {

223 
	`EºExô
(
EºExô_ASSERT
, "collect_predstate: !merge_state()");

224  
FALSE
;

226 i‡(
	`¥ede˚ss‹_umou¡
(
p_¥ed_pid_˝
, 
p_¥ed_mp_˝
) < 0) {

227 
	`EºExô
(
EºExô_STUCK
, "collect_predstate: !predecessor_umount()");

228  
FALSE
;

230 i‡(
	`¥ede˚ss‹_Æive
(
p_¥ed_pid_˝
, 
p_¥ed_mp_˝
)) {

231 
	`EºExô
(
EºExô_STUCK
, "collect_predstate:ÖredecessorÑefusingÅoÑelinquish");

232  
FALSE
;

236 i‡(!(
p_pid_˝
 = 
	`gëc⁄fig_‰omnm
("pid"))) {

237 
	`EºExô
(
EºExô_STUCK
, "collect_predstate: NULLÖ_pid_cp");

238  
FALSE
;

240 i‡(
	`˛aim_BackögSt‹e
(
p_bs_˝
, 
p_pid_˝
, 
CL_CLAIM
) < 0) {

241 
	`EºExô
(
EºExô_STUCK
, "collect_predstate: !claim_BackingStore()");

242  
FALSE
;

244 i‡(
	`•awn_BackögSt‹ñi°íî
(
p_bs_˝
) < 0) {

245 
	`EºExô
(
EºExô_STUCK
, "collect_predstate: spawn_BackingStorelistener");

246  
FALSE
;

248 } i‡(!
	`isCér
()) {

249 i‡(
	`›í_BackögSt‹e
(
p_bs_˝
, !
˘Ã
) < 0) {

250 
	`EºExô
(
EºExô_STUCK
, "collect_predstate[!ctlr]: open_BackingStore(!isCtlr)");

251  
FALSE
;

253 i‡(
	`mîge_BackögSt‹e
(
p_¥ed_mp_˝
, 
MS_CONTROLLER
) < 0) {

254 
	`EºExô
(
EºExô_STUCK
, "collect_predstate[!ctlr]: merge_state(CONTROLLER)");

255  
FALSE
;

258  
	`˛aim_v¨run
(
p_¥ed_pid_˝
, 
p_¥ed_mp_˝
);

259 
	}
}

	@lib/collect/collect_slurm.c

14 
	~"rmfs.h
"

18 
∑øm_sour˚_t


19 
	$cﬁÀ˘¶urm_≠i_vîsi⁄
(
c⁄fig_∑øm_t
 *
p_˝
) {

20 
v
 = 0;

21 
	`¶urm_≠i_vîsi⁄
();

23 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

24 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_api_version: !derefable(p_cp)");

25  
PSRC_NONE
;

28 
v
 = 
	`¶urm_≠i_vîsi⁄
();

29 
	`£t_vÆ_l
(
p_˝
, 
v
);

30  
PSRC_SLURM
;

31 
	}
}

49 
c⁄fig_∑øm_t
 *

50 
	$cﬁÀ˘¶urm_©å
(
∫_ty≥_t
 
πy≥
, 
c⁄fig_∑øm_t
 *
p_˝
, *
p_dy¡yp
) {

51 
rmfs_∑øm_t
 
√w_vÆ
;

52 
c⁄fig_∑øm_t
 *
p_2˝
;

53 
out
[
_POSIX_PATH_MAX
];

54 
l
;

55 
tm
 *
p_tm
;

56 
size
 = 
_POSIX_PATH_MAX
-1;

58 
c⁄fig_∑øm_t
 *
	`cﬁÀ˘¶urm_©å_∑π
(c⁄fig_∑øm_à*, 
rmfs_∑øm_t
 *, 
∑πôi⁄_öfo_t
 *);

59 
c⁄fig_∑øm_t
 *
	`cﬁÀ˘¶urm_©å_node
(c⁄fig_∑øm_à*, 
rmfs_∑øm_t
 *, 
node_öfo_t
 *);

60 
c⁄fig_∑øm_t
 *
	`cﬁÀ˘¶urm_©å_job
(c⁄fig_∑øm_à*, 
rmfs_∑øm_t
 *, 
job_öfo_t
 *);

61 
c⁄fig_∑øm_t
 *
	`cﬁÀ˘¶urm_©å_°ï
(c⁄fig_∑øm_à*, 
rmfs_∑øm_t
 *, 
job_°ï_öfo_t
 *);

63 i‡(!
p_˝
) {

64 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_attr: !p_cp");

65  
NULL
;

67 i‡(
p_˝
->
≥r_§c
.
rmfs
.
loˇl
) {

68 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_attr: !slurmáttr,Ñmfs.local");

69  
NULL
;

71 i‡(!
p_˝
->
≥r_§c
.
¶urm
.
dy«mic
) {

72 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_attr: !slurmáttr, slurm.dynamic");

73  
NULL
;

75 i‡(!
p_dy¡yp
) {

76 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_attr: !p_dyntyp");

77  
NULL
;

91 
p_2˝
 = 
NULL
;

92 
l
 = 0;

94 i‡(
	`mem£t
(&
√w_vÆ
, 0, (new_val)) != (*) &new_val) {

95 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_attr: memset");

96  
NULL
;

98 
πy≥
) {

99 
RND_PARTNAME
:

100 
p_2˝
 = 
	`cﬁÀ˘¶urm_©å_∑π
(
p_˝
, &
√w_vÆ
, 
p_dy¡yp
);

102 
RND_NODENAME
:

103 
p_2˝
 = 
	`cﬁÀ˘¶urm_©å_node
(
p_˝
, &
√w_vÆ
, 
p_dy¡yp
);

105 
RND_JOBNAME
:

106 
p_2˝
 = 
	`cﬁÀ˘¶urm_©å_job
(
p_˝
, &
√w_vÆ
, 
p_dy¡yp
);

108 
RND_JOBSTEPID
:

109 
p_2˝
 = 
	`cﬁÀ˘¶urm_©å_°ï
(
p_˝
, &
√w_vÆ
, 
p_dy¡yp
);

112 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr: switch(whatÅype?)");

115 i‡(!
p_2˝
) {

116 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_attr:Öer-type collector failed");

117  
NULL
;

120 i‡(
	`typ_check
(
p_2˝
->
typ
, &p_2˝->
vÆ
Ë=
FALSE
) {

121 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_attr:Öer-type check failed");

122  
NULL
;

125 i‡(
	`mem£t
(
out
, 0, 
size
+1) != out) {

126 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_attr: memset");

127  
NULL
;

129 i‡(
PTYP_UID
 =
p_2˝
->
typ
) {

130 
	`¢¥ötf
(
out
, 
size
, "%d", (Ë((Ë
p_2˝
->
vÆ
.
ue
.
uid
));

131 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

133 } i‡(
PTYP_PID
 =
p_2˝
->
typ
) {

134 
	`¢¥ötf
(
out
, 
size
, "%d", (Ë((Ë
p_2˝
->
vÆ
.
ue
.
pid
));

135 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

137 } i‡(
PTYP_NUMTIME_SECS
 =
p_2˝
->
typ
) {

138 
p_tm
 = 
	`loˇ…ime
(&
p_˝
->
vÆ
.
ue
.
time
);

139 i‡(!
p_tm
) {

140 
	`¢¥ötf
(
out
, 
size
, "%ld", 
p_˝
->
vÆ
.
ue
.
time
);

141 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

143 
l
 = 
	`°r·ime
(
out
, 
size
 , "%†", 
p_tm
);

146 } i‡(
PTYP_NUMERICTIME
 =
p_2˝
->
typ
) {

147 
p_tm
 = 
	`loˇ…ime
(&
p_˝
->
vÆ
.
ue
.
time
);

148 i‡(!
p_tm
) {

149 
	`¢¥ötf
(
out
, 
size
, "%u", (Ë
p_˝
->
vÆ
.
ue
.
time
);

150 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

152 
l
 = 
	`°r·ime
(
out
, 
size
, "%†", 
p_tm
);

155 } i‡(
PTYP_NUMSIGNED
 =
p_2˝
->
typ
) {

156 
	`¢¥ötf
(
out
, 
size
, "%ld", 
p_2˝
->
vÆ
.
ue
.
l
);

157 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

159 } i‡(
PTYP_NUMERIC
 =
p_2˝
->
typ
) {

160 
	`¢¥ötf
(
out
, 
size
, "%u", (Ë((Ë
p_2˝
->
vÆ
.
ue
.
ul
));

161 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

163 } i‡(
PTYP_UNSIGNED_INT16
 =
p_2˝
->
typ
) {

164 
	`¢¥ötf
(
out
, 
size
, "%u", 
p_2˝
->
vÆ
.
ue
.
ui_16
);

165 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

167 } i‡(
PTYP_UNSIGNED_INT32
 =
p_2˝
->
typ
) {

168 
	`¢¥ötf
(
out
, 
size
, "%u", 
p_2˝
->
vÆ
.
ue
.
ui_32
);

169 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

172 
p_2˝
->
vÆ
.
size
 = 
l
 > 0?Ü: 0;

174  
p_2˝
;

175 
	}
}

180 
∑øm_sour˚_t


181 
	$cﬁÀ˘¶urm_c⁄Â¨am
(
c⁄fig_∑øm_t
 *
p_˝
) {

182 
time_t
 
t
 = 0;

183 *
p
 = 
NULL
;

184 *
p_ul
 = 
NULL
;

186 
¶urm_˘l_c⁄f_t
 *
p_¶˙f
;

187 
time_t
 
¶urm_upd©e_time
;

188 
	`¶urm_lﬂd_˘l_c⁄f
(
time_t
, 
¶urm_˘l_c⁄f_t
 **);

190 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

191  
PSRC_NONE
;

195 i‡(!
p_¶˙f
) {

196 i‡(
	`¶urm_lﬂd_˘l_c⁄f
(
t
, &
p_¶˙f
) < 0) {

197 i‡(
p_¶˙f
) {

198 
	`¶urm_‰ì_˘l_c⁄f
(
p_¶˙f
);

200  
PSRC_NONE
;

202 
¶urm_upd©e_time
 = 
p_¶˙f
->
œ°_upd©e
;

205 
p
 = (*Ë(
p_¶˙f
 + 
p_˝
->
≥r_§c
.
¶urm
.
off
);

207 i‡(
	`IS_SLURM_TYPE
(
p_˝
->
typ
)) {

208 
	`£t_vÆ_¶urm
(
p_˝
, 
p_¶˙f
);

210 } i‡(
	`IS_NUMERIC_TYPE
(
p_˝
->
typ
)) {

211 
p_ul
 = (*Ë
p
;

212 
	`£t_vÆ_ul
(
p_˝
, *
p_ul
);

214 } i‡(
	`IS_ALPHA_TYPE
(
p_˝
->
typ
)) {

215 
	`£t_vÆ_ch¨±r
(
p_˝
, 
p
);

218 
	`£t_vÆ_±r
(
p_˝
, 
p
);

222  
PSRC_SLURM
;

223 
	}
}

226 
	$£t_vÆ_¶urm
(
c⁄fig_∑øm_t
 *
p_˝
, *
p_›aque
)

228 
rmfs_∑øm_t
 
√w_vÆ
;

229 
±yp_t
 
±yp
;

230 
¶urm_˘l_c⁄f_t
 *
p_¶˙f
;

232 i‡(!
p_˝
) {

233 
	`EºExô
(
EºExô_ASSERT
, "set_val_slurm: !p_cp");

236 
±yp
 = 
p_˝
->
typ
;

238 i‡(!
	`IS_SLURM_TYPE
(
p_˝
->
typ
)) {

239 
	`EºExô
(
EºExô_INTERNAL
, "set_val_slurm:Ö_cp->typ isÇotá SLURMÅype");

242 i‡(!
p_›aque
) {

243 
	`EºExô
(
EºExô_INTERNAL
, "set_val_slurm:Ço slurm data !p_opaque");

247 
±yp
) {

248 
PTYP_CLUSTER
:

249 
p_¶˙f
 = 
p_›aque
;

250 i‡(!
p_¶˙f
->
˛u°î_«me
) {

251 
	`EºExô
(
EºExô_SLURM
, "set_val_slurm: slurmÑeportsÇo cluster_name");

254 
√w_vÆ
.
ue
.
ho°«me
 = 
p_¶˙f
->
˛u°î_«me
;

255 
√w_vÆ
.
size
 = 
	`öã∫Æ_°æí
“ew_vÆ.
ue
.
ho°«me
)+1;

257 i‡(
	`typ_check
(
±yp
, &
√w_vÆ
Ë=
FALSE
) {

258 
	`EºExô
(
EºExô_SLURM
, "set_val_slurm:Åyp_check(cluster_name) failed");

261 
p_˝
->
vÆ
.
ue
.
ho°«me
 = 
√w_vÆ
.ue.hostname;

262 
p_˝
->
vÆ
.
size
 = 
√w_vÆ
.size;

265 
PTYP_CNTRLMACH
:

266 
p_¶˙f
 = 
p_›aque
;

267 i‡(!
p_¶˙f
->
c⁄åﬁ_machöe
) {

268 
	`EºExô
(
EºExô_SLURM
, "set_val_slurm: slurmÑeportsÇo control_machine");

271 
√w_vÆ
.
ue
.
ho°«me
 = 
p_¶˙f
->
˛u°î_«me
;

272 
√w_vÆ
.
size
 = 
	`öã∫Æ_°æí
“ew_vÆ.
ue
.
ho°«me
)+1;

273 i‡(
	`typ_check
(
±yp
, &
√w_vÆ
Ë=
FALSE
) {

274 
	`EºExô
(
EºExô_SLURM
, "set_val_slurm:Åyp_check(cluster_name) failed");

277 
p_˝
->
vÆ
.
ue
.
ho°«me
 = 
√w_vÆ
.ue.hostname;

278 
p_˝
->
vÆ
.
size
 = 
√w_vÆ
.size;

281 
PTYP_PARTITION
:

282 
	`EºExô
(
EºExô_INTERNAL
, "set_val_slurm: PTYP_PARTITION");

284 
PTYP_NODE
:

285 
	`EºExô
(
EºExô_INTERNAL
, "set_val_slurm: PTYP_NODE");

287 
PTYP_JOB
:

288 
	`EºExô
(
EºExô_INTERNAL
, "set_val_slurm: PTYP_JOB");

290 
PTYP_STEP
:

291 
	`EºExô
(
EºExô_INTERNAL
, "set_val_slurm: PTYP_STEP");

293 
PTYP_ALLOCJOB
:

294 
	`EºExô
(
EºExô_INTERNAL
, "set_val_slurm: PTYP_ALLOCJOB");

296 
PTYP_NODESTATE
:

297 
	`EºExô
(
EºExô_INTERNAL
, "set_val_slurm: PTYP_NODESTATE");

300 
PTYP_SLURMVERSION
:

301 
	`cﬁÀ˘¶urm_≠i_vîsi⁄
(
p_˝
);

304 
PTYP_SLURMUID
:

305 
p_¶˙f
 = 
p_›aque
;

306 
	`£t_vÆ_uid
(
p_˝
, 
p_¶˙f
->
¶urm_u£r_id
);

309 
PTYP_SLURMTMOUT
:

310 
p_¶˙f
 = 
p_›aque
;

311 
	`£t_vÆ_ui
(
p_˝
, 
p_¶˙f
->
¶urmd_timeout
);

314 
PTYP_SPANKENV
:

315 
	`EºExô
(
EºExô_INTERNAL
, "set_val_slurm: PTYP_SPANKENV");

318 
PTYP_SPANKENVSIZE
:

319 
	`EºExô
(
EºExô_INTERNAL
, "set_val_slurm: PTYP_SPANKENVSIZE");

322 
PTYP_GRES_PLUGIN
:

323 
p_¶˙f
 = 
p_›aque
;

324 
p_˝
->
vÆ
.
ue
.
°r
 = 
NULL
;

325 
p_˝
->
vÆ
.
size
 = 0;

327 i‡(
p_¶˙f
->
gªs_∂ugös
) {

328 
	`£t_vÆ_ch¨±r
(
p_˝
, 
p_¶˙f
->
gªs_∂ugös
);

332 
PTYP_JSUB_PLUGIN
:

333 
p_¶˙f
 = 
p_›aque
;

334 
p_˝
->
vÆ
.
ue
.
°r
 = 
NULL
;

335 
p_˝
->
vÆ
.
size
 = 0;

337 i‡(
p_¶˙f
->
job_submô_∂ugös
) {

338 
	`£t_vÆ_ch¨±r
(
p_˝
, 
p_¶˙f
->
job_submô_∂ugös
);

342 
PTYP_SLURMUNAME
:

343 
p_¶˙f
 = 
p_›aque
;

344 
p_˝
->
vÆ
.
ue
.
°r
 = 
NULL
;

345 
p_˝
->
vÆ
.
size
 = 0;

347 i‡(
p_¶˙f
->
¶urm_u£r_«me
) {

348 
	`£t_vÆ_ch¨±r
(
p_˝
, 
p_¶˙f
->
¶urm_u£r_«me
);

352 
PTYP_SLURMDUNAME
:

353 
p_¶˙f
 = 
p_›aque
;

354 
p_˝
->
vÆ
.
ue
.
°r
 = 
NULL
;

355 
p_˝
->
vÆ
.
size
 = 0;

357 i‡(
p_¶˙f
->
¶urmd_u£r_«me
) {

358 
	`£t_vÆ_ch¨±r
(
p_˝
, 
p_¶˙f
->
¶urmd_u£r_«me
);

363 
	`EºExô
(
EºExô_INTERNAL
, "set_val_slurm:Ö_cp->typ isán unknown SLURMÅype");

367 
	}
}

369 
time_t
 
	g¶urm_upd©e_time
 = 0;

370 
¶urm_˘l_c⁄f_t
 *
	gp_¶˙f
 = 
NULL
;

372 
∑øm_sour˚_t


373 
	$cﬁÀ˘_¶urm
(
c⁄fig_∑øm_t
 *
p_˝
) {

375 
∑øm_sour˚_t
 
rc
 = 
PSRC_NONE
;

377 i‡(!
	`ISSET
(
p_˝
->
§c
.
Ælowed
, 
PSRC_SLURM
)) {

378 
	`EºExô
(
EºExô_ASSERT
, "collect_slurm: !bit(PSRC_SLURM)");

379 
out
;

382 i‡(
p_˝
->
cﬁÀ˘‹
) {

383 
rc
 = (*
p_˝
->
cﬁÀ˘‹
)(p_cp);

390 
out
:

391  
rc
;

392 
	}
}

	@lib/collect/collect_slurm_job.c

3 
	~"rmfs.h
"

13 
c⁄fig_∑øm_t
 
	gjoböfodesc_èb
[] = {

14 {.
nm
="accou¡", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
accou¡
), .
	gtyp
=
PTYP_ALPHANUM
,

15 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

16 {.
	gnm
="commít", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
commít
), .
	gtyp
=
PTYP_ALPHANUM
,

17 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

18 {.
	gnm
="íd_time", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
íd_time
), .
	gtyp
=
PTYP_NUMERICTIME
,

19 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

20 {.
	gnm
="„©uªs", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
node_öfo_t
, 
„©uªs
), .
	gtyp
=
PTYP_ALPHANUM
,

21 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

22 {.
	gnm
="group_id", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
group_id
), .
	gtyp
=
PTYP_UID
,

23 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

24 {.
	gnm
="gªs", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
gªs
), .
	gtyp
=
PTYP_ALPHANUM
,

25 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

26 {.
	gnm
="job_id", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
job_id
), .
	gtyp
=
PTYP_NUMERIC
,

27 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

28 {.
	gnm
="job_°©e", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
job_°©e
), .
	gtyp
=
PTYP_OPAQUE
,

29 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

30 {.
	gnm
="«me", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
«me
), .
	gtyp
=
PTYP_ALPHANUM
,

31 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

32 {.
	gnm
="nodes", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
nodes
), .
	gtyp
=
PTYP_ALPHANUM
,

33 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

34 {.
	gnm
="num_˝us", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
num_˝us
), .
	gtyp
=
PTYP_UNSIGNED_INT32
,

35 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

36 {.
	gnm
="num_nodes", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
num_nodes
), .
	gtyp
=
PTYP_UNSIGNED_INT32
,

37 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

38 {.
	gnm
="∑πôi⁄", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
∑πôi⁄
), .
	gtyp
=
PTYP_ALPHANUM
,

39 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

40 {.
	gnm
="°©e_desc", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
°©e_desc
), .
	gtyp
=
PTYP_ALPHANUM
,

41 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

42 {.
	gnm
="°©e_ªas⁄", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
°©e_ªas⁄
), .
	gtyp
=
PTYP_ALPHANUM
,

43 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

44 {.
	gnm
="submô_time", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
submô_time
), .
	gtyp
=
PTYP_NUMERICTIME
,

45 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

46 {.
	gnm
="u£r_id", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_öfo_t
, 
u£r_id
), .
	gtyp
=
PTYP_UID
,

47 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_JOB
},

48 {.
	gnm
="c⁄ãxt", .
	g§c
.
	gÆlowed
=(
BIT
(
PSRC_MAC
)|BIT(
PSRC_MNT
)|BIT(
PSRC_DEFAULT
)),

49 .
	gtyp
=
PTYP_CONTEXT
,

50 .
	g≥r_§c
.
	grmfs
.
	gloˇl
=
TRUE
, .≥r_§c.
	g¶urm
.
	g∑ª¡_ty≥
=
PTYP_JOB
},

51 {.
	gnm
="sig«tuª", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_DERIVED
), .
	gtyp
=
PTYP_SIGNATURE
,

52 .
	g≥r_§c
.
	grmfs
.
	gloˇl
=
TRUE
},

53 {.
	gnm
=
NULL
 }

56 
c⁄fig_∑øm_t
 *

57 
	$cﬁÀ˘¶urm_©å_job
(
c⁄fig_∑øm_t
 *
p_˝
, 
rmfs_∑øm_t
 *
p_vÆ
, 
job_öfo_t
 *
ji
) {

58 
c⁄fig_∑øm_t
 *
p_2˝
;

60 i‡(!
p_˝
) {

61 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_job: !p_cp");

62  
NULL
;

64 i‡(!
p_vÆ
) {

65 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_job: !p_val");

66  
NULL
;

68 i‡(!
ji
) {

69 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_job: !p_ji");

70  
NULL
;

73 i‡(!
p_˝
->
≥r_§c
.
¶urm
.
dy«mic
) {

74 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_node: !slurm.dynamic");

76 i‡(
p_˝
->
≥r_§c
.
rmfs
.
loˇl
) {

77 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_node:Ñmfs.local");

80 i‡(!
	`IS_VALID_HASH
(
p_˝
->
h
)) {

81 
	`öô_hash_˝
(
p_˝
);

82 
	`EºExô
(
EºExô_WARN
, "collectslurm_attr_job: invalid hash");

83 i‡(!
	`IS_VALID_HASH
(
p_˝
->
h
)) {

84 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_job: invalid hash");

87 i‡(
	`djb_°πohash
("accou¡"Ë=
p_˝
->
h
) {

88 
p_vÆ
->
ue
.
°r
 = 
ji
->
accou¡
;

89 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ji
->
accou¡
);

90 i‡(
p_vÆ
->
size
 > 0) {

91 
p_vÆ
->
size
 += 1;

94 } i‡(
	`djb_°πohash
("comm™d"Ë=
p_˝
->
h
) {

95 
p_vÆ
->
ue
.
°r
 = 
ji
->
comm™d
;

96 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ji
->
comm™d
);

97 i‡(
p_vÆ
->
size
 > 0) {

98 
p_vÆ
->
size
 += 1;

101 } i‡(
	`djb_°πohash
("commít"Ë=
p_˝
->
h
) {

102 
p_vÆ
->
ue
.
°r
 = 
ji
->
commít
;

103 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ji
->
commít
);

104 i‡(
p_vÆ
->
size
 > 0) {

105 
p_vÆ
->
size
 += 1;

108 } i‡(
	`djb_°πohash
("íd_time"Ë=
p_˝
->
h
) {

109 
p_vÆ
->
ue
.
time
 = 
ji
->
íd_time
;

111 } i‡(
	`djb_°πohash
("„©uªs"Ë=
p_˝
->
h
) {

112 
p_vÆ
->
ue
.
°r
 = 
ji
->
„©uªs
;

113 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ji
->
„©uªs
);

114 i‡(
p_vÆ
->
size
 > 0) {

115 
p_vÆ
->
size
 += 1;

118 } i‡(
	`djb_°πohash
("group_id"Ë=
p_˝
->
h
) {

119 
p_vÆ
->
ue
.
gid
 = 
ji
->
group_id
;

121 } i‡(
	`djb_°πohash
("gªs"Ë=
p_˝
->
h
) {

122 
p_vÆ
->
ue
.
°r
 = 
ji
->
gªs
;

123 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ji
->
gªs
);

124 i‡(
p_vÆ
->
size
 > 0) {

125 
p_vÆ
->
size
 += 1;

127 } i‡(
	`djb_°πohash
("job_id"Ë=
p_˝
->
h
) {

128 
p_vÆ
->
ue
.
ui_32
 = 
ji
->
job_id
;

130 } i‡(
	`djb_°πohash
("job_°©e"Ë=
p_˝
->
h
) {

131 
p_vÆ
->
ue
.
ui_16
 = 
ji
->
job_°©e
;

133 } i‡(
	`djb_°πohash
("«me"Ë=
p_˝
->
h
) {

134 
p_vÆ
->
ue
.
°r
 = 
ji
->
«me
;

135 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ji
->
«me
);

136 i‡(
p_vÆ
->
size
 > 0) {

137 
p_vÆ
->
size
 += 1;

140 } i‡(
	`djb_°πohash
("nodes"Ë=
p_˝
->
h
) {

141 
p_vÆ
->
ue
.
°r
 = 
ji
->
nodes
;

142 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ji
->
nodes
);

143 i‡(
p_vÆ
->
size
 > 0) {

144 
p_vÆ
->
size
 += 1;

147 } i‡(
	`djb_°πohash
("num_˝us"Ë=
p_˝
->
h
) {

148 
p_vÆ
->
ue
.
ui_32
 = 
ji
->
num_˝us
;

150 } i‡(
	`djb_°πohash
("num_nodes"Ë=
p_˝
->
h
) {

151 
p_vÆ
->
ue
.
ui_32
 = 
ji
->
num_nodes
;

153 } i‡(
	`djb_°πohash
("∑πôi⁄"Ë=
p_˝
->
h
) {

154 
p_vÆ
->
ue
.
°r
 = 
ji
->
∑πôi⁄
;

155 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ji
->
∑πôi⁄
);

156 i‡(
p_vÆ
->
size
 > 0) {

157 
p_vÆ
->
size
 += 1;

160 } i‡(
	`djb_°πohash
("°©e_desc"Ë=
p_˝
->
h
) {

161 
p_vÆ
->
ue
.
°r
 = 
ji
->
°©e_desc
;

162 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ji
->
°©e_desc
);

163 i‡(
p_vÆ
->
size
 > 0) {

164 
p_vÆ
->
size
 += 1;

167 } i‡(
	`djb_°πohash
("°©e_ªas⁄"Ë=
p_˝
->
h
) {

168 
p_vÆ
->
ue
.
i
 = 
ji
->
°©e_ªas⁄
;

170 } i‡(
	`djb_°πohash
("submô_time"Ë=
p_˝
->
h
) {

171 
p_vÆ
->
ue
.
time
 = 
ji
->
submô_time
;

173 } i‡(
	`djb_°πohash
("u£r_id"Ë=
p_˝
->
h
) {

174 
p_vÆ
->
ue
.
uid
 = (
uid_t
Ë
ji
->
u£r_id
;

177 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_attr_job; unknownáttribute");

178  
NULL
;

181 
p_2˝
 = 
	`dup_˝
(
p_˝
);

182 
p_2˝
->
vÆ
 = *
p_vÆ
;

184  
p_2˝
;

185 
	}
}

188 
∑øm_sour˚_t


189 
	$cﬁÀ˘¶urm_jobs
(
c⁄fig_∑øm_t
 *
p_˝
) {

190 
time_t
 
t
 = 0;

192 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

193  
PSRC_NONE
;

195 i‡(!
p_˝
->
≥r_§c
.
¶urm
.
jim
) {

196 i‡(
	`¶urm_lﬂd_jobs
(
t
, &
p_˝
->
≥r_§c
.
¶urm
.
jim
, 
SHOW_ALL
|
SHOW_DETAIL
) < 0) {

197  
PSRC_NONE
;

200 
t
 = 
p_˝
->
≥r_§c
.
¶urm
.
jim
->
œ°_upd©e
;

201 
	`£t_∫∑øm_time
(
	`off£tof
(
∫_∑øm_t
, 
œ°_upd©e
), 
t
);

202  
PSRC_SLURM
;

203 
	}
}

	@lib/collect/collect_slurm_node.c

2 
	~"rmfs.h
"

12 
c⁄fig_∑øm_t
 
	gnodeöfodesc_èb
[] = {

13 {.
nm
="¨ch", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
node_öfo_t
, 
¨ch
), .
	gtyp
=
PTYP_ALPHANUM
,

14 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_NODE
},

15 {.
	gnm
="c‹es", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
node_öfo_t
, 
c‹es
), .
	gtyp
=
PTYP_NUMERIC
,

16 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_NODE
},

17 {.
	gnm
="˝us", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
node_öfo_t
, 
˝us
), .
	gtyp
=
PTYP_NUMERIC
,

18 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_NODE
},

19 {.
	gnm
="„©uªs", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
node_öfo_t
, 
„©uªs
), .
	gtyp
=
PTYP_ALPHANUM
,

20 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_NODE
},

21 {.
	gnm
="gªs", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
node_öfo_t
, 
gªs
), .
	gtyp
=
PTYP_ALPHANUM
,

22 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_NODE
},

23 {.
	gnm
="«me", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
node_öfo_t
, 
«me
), .
	gtyp
=
PTYP_ALPHANUM
,

24 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_NODE
},

25 {.
	gnm
="node_addr", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
node_öfo_t
, 
node_addr
), .
	gtyp
=
PTYP_ALPHANUM
,

26 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_NODE
},

27 {.
	gnm
="node_ho°«me", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
node_öfo_t
, 
node_ho°«me
), .
	gtyp
=
PTYP_HOSTNAME
,

28 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_NODE
},

29 {.
	gnm
="node_°©e", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
node_öfo_t
, 
node_°©e
), .
	gtyp
=
PTYP_NODESTATE
,

30 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_NODE
},

31 {.
	gnm
="os", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
node_öfo_t
, 
os
), .
	gtyp
=
PTYP_ALPHANUM
,

32 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_NODE
},

33 {.
	gnm
="ªÆ_mem‹y", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
node_öfo_t
, 
ªÆ_mem‹y
), .
	gtyp
=
PTYP_NUMERIC
,

34 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_NODE
},

35 {.
	gnm
="ªas⁄", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
node_öfo_t
, 
ªas⁄
), .
	gtyp
=
PTYP_ALPHANUM
,

36 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_NODE
},

37 {.
	gnm
="sockës", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
node_öfo_t
, 
sockës
), .
	gtyp
=
PTYP_NUMERIC
,

38 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_NODE
},

39 {.
	gnm
="thªads", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
node_öfo_t
, 
thªads
), .
	gtyp
=
PTYP_NUMERIC
,

40 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_NODE
},

41 {.
	gnm
="Ælocjob", .
	g≥r_§c
.
	grmfs
.
	gloˇl
=
TRUE
, .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_DERIVED
), .
	gtyp
=
PTYP_ALLOCJOB
},

42 {.
	gnm
=
NULL
 }

46 
c⁄fig_∑øm_t
 *

47 
	$cﬁÀ˘¶urm_©å_node
(
c⁄fig_∑øm_t
 *
p_˝
, 
rmfs_∑øm_t
 *
p_vÆ
, 
node_öfo_t
 *
ni
) {

48 
c⁄fig_∑øm_t
 *
p_2˝
;

50 i‡(!
p_˝
) {

51 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_node: !p_cp");

52  
NULL
;

54 i‡(!
p_vÆ
) {

55 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_node: !p_val");

56  
NULL
;

58 i‡(!
ni
) {

59 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_node: !p_ni");

60  
NULL
;

63 i‡(!
p_˝
->
≥r_§c
.
¶urm
.
dy«mic
) {

64 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_node: !slurm.dynamic");

65  
NULL
;

67 i‡(
p_˝
->
≥r_§c
.
rmfs
.
loˇl
) {

68 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_node:Ñmfs.local");

69  
NULL
;

72 i‡(!
	`IS_VALID_HASH
(
p_˝
->
h
)) {

73 
	`öô_hash_˝
(
p_˝
);

74 
	`EºExô
(
EºExô_WARN
, "collectslurm_attr_node: invalid hash");

75 i‡(!
	`IS_VALID_HASH
(
p_˝
->
h
)) {

76 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_node: invalid hash");

80 i‡(
	`djb_°πohash
("¨ch"Ë=
p_˝
->
h
) {

81 
p_vÆ
->
ue
.
°r
 = 
ni
->
¨ch
;

82 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ni
->
¨ch
);

83 i‡(
p_vÆ
->
size
 > 0) {

84 
p_vÆ
->
size
 += 1;

87 } i‡(
	`djb_°πohash
("c‹es"Ë=
p_˝
->
h
) {

88 
p_vÆ
->
ue
.
ui_16
 = 
ni
->
c‹es
;

90 } i‡(
	`djb_°πohash
("˝us"Ë=
p_˝
->
h
) {

91 
p_vÆ
->
ue
.
ui_16
 = 
ni
->
˝us
;

93 } i‡(
	`djb_°πohash
("„©uªs"Ë=
p_˝
->
h
) {

94 
p_vÆ
->
ue
.
°r
 = 
ni
->
„©uªs
;

95 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ni
->
„©uªs
);

96 i‡(
p_vÆ
->
size
 > 0) {

97 
p_vÆ
->
size
 += 1;

100 } i‡(
	`djb_°πohash
("gªs"Ë=
p_˝
->
h
) {

101 
p_vÆ
->
ue
.
°r
 = 
ni
->
gªs
;

102 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ni
->
gªs
);

103 i‡(
p_vÆ
->
size
 > 0) {

104 
p_vÆ
->
size
 += 1;

107 } i‡(
	`djb_°πohash
("«me"Ë=
p_˝
->
h
) {

108 
p_vÆ
->
ue
.
°r
 = 
ni
->
«me
;

109 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ni
->
«me
);

110 i‡(
p_vÆ
->
size
 > 0) {

111 
p_vÆ
->
size
 += 1;

114 } i‡(
	`djb_°πohash
("node_addr"Ë=
p_˝
->
h
) {

115 
p_vÆ
->
ue
.
°r
 = 
ni
->
node_addr
;

116 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ni
->
node_addr
);

117 i‡(
p_vÆ
->
size
 > 0) {

118 
p_vÆ
->
size
 += 1;

121 } i‡(
	`djb_°πohash
("node_ho°«me"Ë=
p_˝
->
h
) {

122 
p_vÆ
->
ue
.
°r
 = 
ni
->
node_ho°«me
;

123 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ni
->
node_ho°«me
);

124 i‡(
p_vÆ
->
size
 > 0) {

125 
p_vÆ
->
size
 += 1;

128 } i‡(
	`djb_°πohash
("node_°©e"Ë=
p_˝
->
h
) {

129 
p_vÆ
->
ue
.
ui_16
 = 
ni
->
node_°©e
;

131 } i‡(
	`djb_°πohash
("os"Ë=
p_˝
->
h
) {

132 
p_vÆ
->
ue
.
°r
 = 
ni
->
os
;

133 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ni
->
os
);

134 i‡(
p_vÆ
->
size
 > 0) {

135 
p_vÆ
->
size
 += 1;

138 } i‡(
	`djb_°πohash
("ªÆ_mem‹y"Ë=
p_˝
->
h
) {

139 
p_vÆ
->
ue
.
ui_32
 = 
ni
->
ªÆ_mem‹y
;

141 } i‡(
	`djb_°πohash
("ªas⁄"Ë=
p_˝
->
h
) {

142 
p_vÆ
->
ue
.
°r
 = 
ni
->
ªas⁄
;

143 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
ni
->
ªas⁄
);

144 i‡(
p_vÆ
->
size
 > 0) {

145 
p_vÆ
->
size
 += 1;

148 } i‡(
	`djb_°πohash
("sockës"Ë=
p_˝
->
h
) {

149 
p_vÆ
->
ue
.
ui_16
 = 
ni
->
sockës
;

151 } i‡(
	`djb_°πohash
("thªads"Ë=
p_˝
->
h
) {

152 
p_vÆ
->
ue
.
ui_16
 = 
ni
->
thªads
;

155 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_attr_node; unknownáttribute");

156  
NULL
;

158 
p_2˝
 = 
	`dup_˝
(
p_˝
);

159 
p_2˝
->
vÆ
 = *
p_vÆ
;

161  
p_2˝
;

162 
	}
}

165 
∑øm_sour˚_t


166 
	$cﬁÀ˘¶urm_nodes
(
c⁄fig_∑øm_t
 *
p_˝
) {

167 
time_t
 
t
 = 0;

169 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

170  
PSRC_NONE
;

172 i‡(!
p_˝
->
≥r_§c
.
¶urm
.
nim
) {

173 i‡(
	`¶urm_lﬂd_node
(
t
, &
p_˝
->
≥r_§c
.
¶urm
.
nim
, 
SHOW_ALL
|
SHOW_DETAIL
) != 0) {

174 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_nodes:ÇoÇodes?");

175  
PSRC_NONE
;

178 
t
 = 
p_˝
->
≥r_§c
.
¶urm
.
nim
->
œ°_upd©e
;

179 
	`£t_∫∑øm_time
(
	`off£tof
(
∫_∑øm_t
, 
œ°_upd©e
), 
t
);

180  
PSRC_SLURM
;

181 
	}
}

	@lib/collect/collect_slurm_part.c

3 
	~"rmfs.h
"

13 
c⁄fig_∑øm_t
 
	g∑πöfodesc_èb
[] = {

14 {.
nm
="Êags", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
∑πôi⁄_öfo_t
, 
Êags
), .
	gtyp
=
PTYP_OPAQUE
,

15 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_PARTITION
},

16 {.
	gnm
="«me", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
∑πôi⁄_öfo_t
, 
«me
), .
	gtyp
=
PTYP_ALPHANUM
,

17 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_PARTITION
},

18 {.
	gnm
="node_li°", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
∑πôi⁄_öfo_t
, 
nodes
), .
	gtyp
=
PTYP_ALPHANUM
,

19 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_PARTITION
},

20 {.
	gnm
="°©e_up", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
∑πôi⁄_öfo_t
, 
°©e_up
), .
	gtyp
=
PTYP_NODESTATE
,

21 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_PARTITION
},

22 {.
	gnm
="tŸÆ_˝us", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
∑πôi⁄_öfo_t
, 
tŸÆ_˝us
), .
	gtyp
=
PTYP_NUMERIC
,

23 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_PARTITION
},

24 {.
	gnm
="tŸÆ_nodes", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
∑πôi⁄_öfo_t
, 
tŸÆ_nodes
), .
	gtyp
=
PTYP_NUMERIC
,

25 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_PARTITION
},

26 {.
	gnm
=
NULL
 }

31 
c⁄fig_∑øm_t
 *

32 
	$cﬁÀ˘¶urm_©å_∑π
(
c⁄fig_∑øm_t
 *
p_˝
, 
rmfs_∑øm_t
 *
p_vÆ
, 
∑πôi⁄_öfo_t
 *
pi
) {

33 
c⁄fig_∑øm_t
 *
p_2˝
;

35 i‡(!
p_˝
) {

36 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_part: !p_cp");

37  
NULL
;

39 i‡(!
p_vÆ
) {

40 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_part: !p_val");

41  
NULL
;

43 i‡(!
pi
) {

44 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_part: !p_pi");

45  
NULL
;

48 i‡(!
	`IS_VALID_HASH
(
p_˝
->
h
)) {

49 
	`öô_hash_˝
(
p_˝
);

50 
	`EºExô
(
EºExô_WARN
, "collextslurm_attr_part: invalid hash");

51 i‡(!
	`IS_VALID_HASH
(
p_˝
->
h
)) {

52 
	`EºExô
(
EºExô_INTERNAL
, "collextslurm_attr_part: invalid hash");

56 i‡(!
p_˝
->
≥r_§c
.
¶urm
.
dy«mic
) {

57  
NULL
;

59 i‡(
p_˝
->
≥r_§c
.
rmfs
.
loˇl
) {

60  
NULL
;

63 i‡(
	`djb_°πohash
("Êags"Ë=
p_˝
->
h
) {

64 
p_vÆ
->
ue
.
ui_16
 = 
pi
->
Êags
;

66 } i‡(
	`djb_°πohash
("«me"Ë=
p_˝
->
h
) {

67 
p_vÆ
->
ue
.
°r
 = 
pi
->
«me
;

68 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
pi
->
«me
);

69 i‡(
p_vÆ
->
size
 > 0) {

70 
p_vÆ
->
size
 += 1;

73 } i‡(
	`djb_°πohash
("node_li°"Ë=
p_˝
->
h
) {

74 
p_vÆ
->
ue
.
°r
 = 
pi
->
nodes
;

75 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
pi
->
nodes
);

76 i‡(
p_vÆ
->
size
 > 0) {

77 
p_vÆ
->
size
 += 1;

80 } i‡(
	`djb_°πohash
("°©e_up"Ë=
p_˝
->
h
) {

81 
p_vÆ
->
ue
.
ui_16
 = 
pi
->
°©e_up
;

83 } i‡(
	`djb_°πohash
("tŸÆ_˝us"Ë=
p_˝
->
h
) {

84 
p_vÆ
->
ue
.
ui_32
 = 
pi
->
tŸÆ_˝us
;

86 } i‡(
	`djb_°πohash
("tŸÆ_nodes"Ë=
p_˝
->
h
) {

87 
p_vÆ
->
ue
.
ui_32
 = 
pi
->
tŸÆ_nodes
;

90 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_attr_part; unknownáttribute");

91  
NULL
;

93 
p_2˝
 = 
	`dup_˝
(
p_˝
);

94 
p_2˝
->
vÆ
 = *
p_vÆ
;

96  
p_2˝
;

97 
	}
}

100 
∑øm_sour˚_t


101 
	$cﬁÀ˘¶urm_∑πôi⁄s
(
c⁄fig_∑øm_t
 *
p_˝
) {

102 
time_t
 
t
 = 0;

104 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

105 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_partitions: !derefable(p_cp)");

106  
PSRC_NONE
;

108 i‡(!
p_˝
->
≥r_§c
.
¶urm
.
pim
) {

109 i‡(
	`¶urm_lﬂd_∑πôi⁄s
(
t
, &
p_˝
->
≥r_§c
.
¶urm
.
pim
, 
SHOW_ALL
|
SHOW_DETAIL
) != 0) {

110 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_partitions:ÇoÖartitions?");

111  
PSRC_NONE
;

114 
t
 = 
p_˝
->
≥r_§c
.
¶urm
.
pim
->
œ°_upd©e
;

115 
	`£t_∫∑øm_time
(
	`off£tof
(
∫_∑øm_t
, 
œ°_upd©e
), 
t
);

116  
PSRC_SLURM
;

117 
	}
}

	@lib/collect/collect_slurm_step.c

3 
	~"rmfs.h
"

14 
c⁄fig_∑øm_t
 
	g°ïöfodesc_èb
[] = {

15 {.
nm
="job_id", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_°ï_öfo_t
, 
job_id
), .
	gtyp
=
PTYP_NUMERIC
,

16 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_STEP
 },

17 {.
	gnm
="«me", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_°ï_öfo_t
, 
«me
), .
	gtyp
=
PTYP_ALPHANUM
,

18 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_STEP
},

19 {.
	gnm
="nodes", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_°ï_öfo_t
, 
nodes
), .
	gtyp
=
PTYP_ALPHANUM
,

20 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_STEP
},

21 {.
	gnm
="∑πôi⁄", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_°ï_öfo_t
, 
∑πôi⁄
), .
	gtyp
=
PTYP_ALPHANUM
,

22 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_STEP
},

23 {.
	gnm
="run_time", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_°ï_öfo_t
, 
run_time
), .
	gtyp
=
PTYP_NUMTIME
,

24 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_STEP
},

25 {.
	gnm
="°¨t_time", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_°ï_öfo_t
, 
°¨t_time
), .
	gtyp
=
PTYP_NUMTIME
,

26 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_STEP
},

27 {.
	gnm
="°ï_id", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_°ï_öfo_t
, 
°ï_id
), .
	gtyp
=
PTYP_NUMERIC
,

28 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_STEP
},

29 {.
	gnm
="u£r_id", .
	g≥r_§c
.
	g¶urm
.
	goff
=
off£tof
(
job_°ï_öfo_t
, 
u£r_id
), .
	gtyp
=
PTYP_NUMERIC
,

30 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
=
TRUE
, .≥r_§c.¶urm.
	g∑ª¡_ty≥
=
PTYP_STEP
},

31 {.
	gnm
=
NULL
 }

35 
c⁄fig_∑øm_t
 *

36 
	$cﬁÀ˘¶urm_©å_°ï
(
c⁄fig_∑øm_t
 *
p_˝
, 
rmfs_∑øm_t
 *
p_vÆ
, 
job_°ï_öfo_t
 *
j°i
) {

37 
c⁄fig_∑øm_t
 *
p_2˝
;

39 i‡(!
p_˝
) {

40 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_step: !p_cp");

41  
NULL
;

43 i‡(!
p_vÆ
) {

44 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_step: !p_val");

45  
NULL
;

47 i‡(!
j°i
) {

48 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_step: !p_jsti");

49  
NULL
;

52 i‡(!
p_˝
->
≥r_§c
.
¶urm
.
dy«mic
) {

53 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_step: !slurm.dynamic");

55 i‡(
p_˝
->
≥r_§c
.
rmfs
.
loˇl
) {

56 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_step:Ñmfs.local");

59 i‡(!
	`IS_VALID_HASH
(
p_˝
->
h
)) {

60 
	`öô_hash_˝
(
p_˝
);

61 
	`EºExô
(
EºExô_WARN
, "collectslurm_attr_step: invalid hash");

62 i‡(!
	`IS_VALID_HASH
(
p_˝
->
h
)) {

63 
	`EºExô
(
EºExô_INTERNAL
, "collectslurm_attr_step: invalid hash");

67 i‡(
	`djb_°πohash
("job_id"Ë=
p_˝
->
h
) {

68 
p_vÆ
->
ue
.
ui_32
 = 
j°i
->
job_id
;

70 } i‡(
	`djb_°πohash
("«me"Ë=
p_˝
->
h
) {

71 
p_vÆ
->
ue
.
°r
 = 
j°i
->
«me
;

72 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
j°i
->
«me
);

73 i‡(
p_vÆ
->
size
 > 0) {

74 
p_vÆ
->
size
 += 1;

77 } i‡(
	`djb_°πohash
("nodes"Ë=
p_˝
->
h
) {

78 
p_vÆ
->
ue
.
°r
 = 
j°i
->
nodes
;

79 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
j°i
->
nodes
);

80 i‡(
p_vÆ
->
size
 > 0) {

81 
p_vÆ
->
size
 += 1;

84 } i‡(
	`djb_°πohash
("∑πôi⁄"Ë=
p_˝
->
h
) {

85 
p_vÆ
->
ue
.
°r
 = 
j°i
->
∑πôi⁄
;

86 
p_vÆ
->
size
 = 
	`öã∫Æ_°æí
(
j°i
->
∑πôi⁄
);

87 i‡(
p_vÆ
->
size
 > 0) {

88 
p_vÆ
->
size
 += 1;

91 } i‡(
	`djb_°πohash
("run_time"Ë=
p_˝
->
h
) {

92 
p_vÆ
->
ue
.
time
 = 
j°i
->
run_time
;

94 } i‡(
	`djb_°πohash
("°¨t_time"Ë=
p_˝
->
h
) {

95 
p_vÆ
->
ue
.
time
 = 
j°i
->
°¨t_time
;

97 } i‡(
	`djb_°πohash
("°ï_id"Ë=
p_˝
->
h
) {

98 
p_vÆ
->
ue
.
ui_32
 = 
j°i
->
°ï_id
;

100 } i‡(
	`djb_°πohash
("u£r_id"Ë=
p_˝
->
h
) {

101 
p_vÆ
->
ue
.
ui_32
 = 
j°i
->
°ï_id
;

104 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_attr_step; unknownáttribute");

105  
NULL
;

107 
p_2˝
 = 
	`dup_˝
(
p_˝
);

108 
p_2˝
->
vÆ
 = *
p_vÆ
;

110  
p_2˝
;

111 
	}
}

113 
∑øm_sour˚_t


114 
	$cﬁÀ˘¶urm_job°ïs
(
c⁄fig_∑øm_t
 *
p_˝
) {

115 
time_t
 
t
 = 0;

116 
rc
;

118 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

119  
PSRC_NONE
;

122 i‡(!
p_˝
->
≥r_§c
.
¶urm
.
°im
) {

123 
rc
 = 
	`¶urm_gë_job_°ïs
(
t
,

124 
NO_VAL
, NO_VAL,

125 &
p_˝
->
≥r_§c
.
¶urm
.
°im
,

126 
SHOW_ALL
|
SHOW_DETAIL
);

127 i‡(
rc
 < 0) {

128 
	`EºExô
(
EºExô_ASSERT
, "collectslurm_jobsteps:Ço steps?");

129  
PSRC_NONE
;

132 
t
 = 
p_˝
->
≥r_§c
.
¶urm
.
°im
->
œ°_upd©e
;

133 
	`£t_∫∑øm_time
(
	`off£tof
(
∫_∑øm_t
, 
œ°_upd©e
), 
t
);

134  
PSRC_SLURM
;

135 
	}
}

	@lib/collect/typ_slurm.c

2 
	~"rmfs.h
"

4 
±yp_t
 
	g¶urm2ba£typ
[] = {

5 
PTYP_ALPHANUM
,

6 
PTYP_HOSTNAME
,

7 
PTYP_ALPHANUM
,

8 
PTYP_HOSTNAME
,

9 
PTYP_NUMERICHAR
,

10 
PTYP_NUMERICHAR
,

11 
PTYP_FILE
,

12 
PTYP_OPAQUE
,

13 
PTYP_NUMERIC
,

14 
PTYP_UID
,

15 
PTYP_NUMTIM_SECS
,

16 
PTYP_ALPHANUM
,

17 
PTYP_NUMERIC
,

18 
PTYP_NONE


	@lib/conf/cp/cp_Debug.c

2 
	~"rmfs.h
"

5 
åi_t


6 
	$Debug
() {

7 
c⁄fig_∑øm_t
 *
p_Debug_˝
;

9 
p_Debug_˝
 = 
	`gëc⁄fig_‰omnm
("Debug");

11 i‡(!
	`dîeÁbÀ_˝
(
p_Debug_˝
)) {

12  
FALSE
;

15  (
åi_t
Ë
p_Debug_˝
->
vÆ
.
ue
.
båuth
;

16 
	}
}

18 
åi_t


19 
	$isCér
() {

20 
c⁄fig_∑øm_t
 *
p_isC⁄åﬁÀr_˝
;

22 
p_isC⁄åﬁÀr_˝
 = 
	`gëc⁄fig_‰omnm
("isController");

24 i‡(!
p_isC⁄åﬁÀr_˝
) {

25 
	`EºExô
(
EºExô_ASSERT
, "isCtlr: !p_isController_cp");

26  
FALSE
;

29  
p_isC⁄åﬁÀr_˝
->
åuth
;

30 
	}
}

	@lib/conf/cp/cp_effluviate.c

1 
	~"rmfs.h
"

4 
	$efÊuvüã_⁄e_˝
(
c⁄fig_∑øm_t
 *
p_˝
) {

6 i‡(!
p_˝
) {

9 
	`Ârötf
(
°dîr
, "\n\tp_cp:Ötyp:\"%s\" (%d)Çm:\"%s\"\n",

10 
±yp2≤ame_èb
[
p_˝
->
typ
],

11 
p_˝
->
typ
,Ö_˝->
nm
?Ö_cp->nm: "<null>");

13 i‡(
	`IS_ALPHA_TYPE
(
p_˝
->
typ
)) {

14 
	`Ârötf
(
°dîr
, "\tp_cp: val.str=\"%s\" size=%ld\n",

15 
p_˝
->
vÆ
.
ue
.
°r
?Ö_cp->val.ue.str: "<null>",

16 
p_˝
->
vÆ
.
size
);

18 } i‡(
	`IS_NUMERIC_TYPE
(
p_˝
->
typ
)) {

19 
	`Ârötf
(
°dîr
, "\tp_cp: val.ue.l:%ld val.ue.ul:%ld val.size:%ld\n",

20 
p_˝
->
vÆ
.
ue
.
l
,

21 
p_˝
->
vÆ
.
ue
.
ul
,

22 
p_˝
->
vÆ
.
size
);

24 } i‡(
	`IS_SLURM_TYPE
(
p_˝
->
typ
)) {

25 
	`Ârötf
(
°dîr
, "\tp_cp: isá slurmÅype: %ld, size: %ld\n",

26 
p_˝
->
vÆ
.
ue
.
ul
,Ö_˝->vÆ.
size
);

29 
	`Ârötf
(
°dîr
, "\tsrc.actual: %s (%d)\n\tsrc.allowed: %s (%d)\n\tsrc.debug: %s (%d)\n",

30 
	`PSRCNAME
(
p_˝
->
§c
.
a˘uÆ
),Ö_cp->src.actual,

31 
	`PSRCNAME
(
p_˝
->
§c
.
Ælowed
),Ö_cp->src.allowed,

32 
	`PSRCNAME
(
p_˝
->
§c
.
debug
),Ö_cp->src.debug

35 
	}
}

38 
	$efÊuvüã_c⁄fig
() {

39 
c⁄fig_∑øm_t
 *
p_˝
;

40 
i
;

42 
	`Ârötf
(
°dîr
, "\nslurmfs_config:\n");

43 
i
 = 0, 
p_˝
 = 
¶urmfs_c⁄fig
;Ö_˝->
nm
; i++,Ö_cp++) {

44 
	`efÊuvüã_⁄e_˝
(
p_˝
);

46 
	`Ârötf
(
°dîr
, "¶urmfs_c⁄fig:Üí=%d\n", 
i
-1);

47 
	}
}

	@lib/conf/cp/cp_get.c

2 
	~"rmfs.h
"

4 
c⁄fig_∑øm_t
 *

5 
	$gëc⁄fig_‰omnm
(*
nm
) {

6 
c⁄fig_∑øm_t
 *
p_˝
 = 
NULL
;

7 
h
;

9 i‡(!
nm
) {

10 
	`EºExô
(
EºExô_ASSERT
, "getconfig_fromnm: !nm ");

11  
NULL
;

13 
h
 = 
	`djb_°πohash
(
nm
);

15 i‡(
	`IS_VALID_HASH
(
h
)) {

16 
p_˝
 = 
	`gëc⁄fig_‰omhash
(
h
);

18 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

19 
p_˝
 = 
	`gëc⁄fig_‰omnm_nohash
(
nm
);

21  
	`dîeÁbÀ_˝
(
p_˝
)?Ö_˝: 
NULL
;

22 
	}
}

28 
c⁄fig_∑øm_t
 *

29 
	$gëc⁄fig_‰omnm_nohash
(*
nm
) {

30 
c⁄fig_∑øm_t
 *
p_˝
;

32 i‡(!
nm
) {

33 
	`EºExô
(
EºExô_ASSERT
, "getconfig_fromnm_nohash: !nm");

34  
NULL
;

37 
p_˝
 = 
¶urmfs_c⁄fig
;Ö_˝->
nm
;Ö_cp++) {

38 i‡(
	`°rcmp
(
p_˝
->
nm
,Çm) == 0) {

39 
	`öô_hash_˝
(
p_˝
);

40  
p_˝
;

43  
NULL
;

44 
	}
}

46 
c⁄fig_∑øm_t
 *

47 
	$gëc⁄fig_‰omhash
(
h
) {

48 
c⁄fig_∑øm_t
 *
p_˝
;

50 i‡(
	`IS_INVALID_HASH
(
h
)) {

51 
	`EºExô
(
EºExô_ASSERT
, "getconfig_fromhash: invalid hash");

52  
NULL
;

56 
p_˝
 = 
¶urmfs_c⁄fig
;Ö_˝->
nm
;Ö_cp++) {

57 i‡(
h
 =
p_˝
->h) {

58  
p_˝
;

61  
NULL
;

62 
	}
}

	@lib/conf/cp/cp_subr.c

2 
	~"rmfs.h
"

9 
	$öô_hash_˝
 (
c⁄fig_∑øm_t
 *
p_˝
) {

11 i‡(
	`IS_VALID_HASH
(
p_˝
->
h
)) {

15 
p_˝
->
h
 = 
	`djb_°πohash
’_˝->
nm
);

17 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

18 
	`EºExô
(
EºExô_INTERNAL
, "init_hash_cp: !derefable_cp");

22 
	}
}

28 
boﬁ_t


29 
	$dîeÁbÀ_˝
(c⁄° 
c⁄fig_∑øm_t
 *
p_˝
) {

30 i‡(
p_˝
 =
CONFPARAM_REQUIRED
) {

31  
FALSE
;

34 i‡(
p_˝
 =
CONFPARAM_MISSINGOK
) {

35  
FALSE
;

37  
TRUE
;

38 
	}
}

40 
c⁄fig_∑øm_t
 *

41 
	$dup_˝
(
c⁄fig_∑øm_t
 *
p_‰om_˝
) {

42 
c⁄fig_∑øm_t
 *
p_to_˝
 = 
NULL
;

44 i‡(!
	`dîeÁbÀ_˝
(
p_‰om_˝
)) {

45  
NULL
;

53 i‡(!
p_‰om_˝
) {

54 
	`EºExô
(
EºExô_ASSERT
, "dup_cp: NULLÖ_from_cp");

55  
NULL
;

58 i‡(!(
p_to_˝
 = 
	`ˇŒoc
(1, (
c⁄fig_∑øm_t
)))) {

59 
	`EºExô
(
EºExô_ASSERT
, "dup_cp: !calloc(p_cp)");

60  
NULL
;

67 i‡(
	`mem˝y
(
p_to_˝
, 
p_‰om_˝
, (
c⁄fig_∑øm_t
)) !=Ö_to_cp) {

68 
	`EºExô
(
EºExô_ASSERT
, "dup_cp: !memcpy()");

69 
	`‰ì
(
p_to_˝
);

70  
NULL
;

72  
p_to_˝
;

73 
	}
}

75 
c⁄fig_∑øm_t
 *

76 
	$öô_dïídícy_˝
(
c⁄fig_∑øm_t
 *
p_˝
) {

77 
c⁄fig_∑øm_t
 *
p_˝_dïíds_⁄
;

79 i‡(!
p_˝
) {

80 
	`EºExô
(
EºExô_INTERNAL
, "init_dependency_cp: !p_cp");

81  
NULL
;

83 
	`öô_hash_˝
(
p_˝
);

85 i‡(!
p_˝
->
dïíds_⁄
.
nm
) {

86  
p_˝
;

88 i‡(
	`dîeÁbÀ_˝
(
p_˝
->
dïíds_⁄
.p_cp)) {

89  
p_˝
->
dïíds_⁄
.p_cp;

92 
p_˝_dïíds_⁄
 = 
	`gëc⁄fig_‰omnm_nohash
(
p_˝
->
dïíds_⁄
.
nm
);

93 i‡(!
p_˝_dïíds_⁄
) {

94 
	`EºExô
(
EºExô_INTERNAL
, "collect_dependency_nm: !p_cp_depends_on");

97 i‡(
p_˝
->
dïíds_⁄
.p_cp) {

98 i‡(
p_˝
->
dïíds_⁄
.p_˝ !
p_˝_dïíds_⁄
) {

99 
	`EºExô
(
EºExô_INTERNAL
, "init_dependency_nm:Ö_cp_depends_on mismatch");

102 
p_˝
->
dïíds_⁄
.p_˝ = 
p_˝_dïíds_⁄
;

104 i‡(!
	`dîeÁbÀ_˝
(
p_˝_dïíds_⁄
)) {

105 
	`öô_hash_˝
(
p_˝_dïíds_⁄
);

107  
p_˝_dïíds_⁄
;

108 
	}
}

	@lib/conf/cp/cp_tab.c

2 
	~"rmfs.h
"

28 
∑øm_sour˚_t
 
cﬁÀ˘¶urm_c⁄Â¨am
(
c⁄fig_∑øm_t
 *);

29 
∑øm_sour˚_t
 
cﬁÀ˘mac_c⁄ãxt
(
c⁄fig_∑øm_t
 *);

30 
∑øm_sour˚_t
 
ˇlcul_isC⁄åﬁÀr
(
c⁄fig_∑øm_t
 *);

31 
∑øm_sour˚_t
 
ªc‹d_mou¡poöt
(
c⁄fig_∑øm_t
 *);

32 
∑øm_sour˚_t
 
cﬁÀ˘¶urm_nodes
(
c⁄fig_∑øm_t
 *);

33 
∑øm_sour˚_t
 
cﬁÀ˘¶urm_∑πôi⁄s
(
c⁄fig_∑øm_t
 *);

34 
∑øm_sour˚_t
 
cﬁÀ˘¶urm_jobs
(
c⁄fig_∑øm_t
 *);

35 
∑øm_sour˚_t
 
cﬁÀ˘¶urm_job°ïs
(
c⁄fig_∑øm_t
 *);

36 
∑øm_sour˚_t
 
ˇlcul_∫odïoﬁ
(
c⁄fig_∑øm_t
 *);

37 
∑øm_sour˚_t
 
cﬁÀ˘os_pidfûe
(
c⁄fig_∑øm_t
 *);

38 
∑øm_sour˚_t
 
cﬁÀ˘os_pid
(
c⁄fig_∑øm_t
 *);

39 
∑øm_sour˚_t
 
cﬁÀ˘os_ho°«me
(
c⁄fig_∑øm_t
 *);

40 
∑øm_sour˚_t
 
ˇlcul_unmou¡waô
(
c⁄fig_∑øm_t
 *);

41 
∑øm_sour˚_t
 
cﬁÀ˘¶urm_≠i_vîsi⁄
(
c⁄fig_∑øm_t
 *);

42 *
cﬁÀ˘¶urm_©å
(
∫_ty≥_t
, 
c⁄fig_∑øm_t
 *, *);

52 
c⁄fig_∑øm_t
 
	g¶urmfs_c⁄fig
[] =

54 { .
nm
="BackögSt‹e", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_MAC
)|BIT(
PSRC_DEFAULT
), .§c.
	gdebug
=BIT(PSRC_MAC)|BIT(
PSRC_MNT
)|BIT(PSRC_DEFAULT),

55 .
	gtyp
=
PTYP_PATH
, .
	gdeÁu…_vÆ
.
	gue
.
	g∑thnm
="/dev/shm/slurmfs" },

57 { .
	gnm
="Clu°îName", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_SLURM
), .§c.
	gdebug
=BIT(PSRC_SLURM), .
	gtyp
=
PTYP_CLUSTER
, .
	gcﬁÀ˘‹
=
cﬁÀ˘¶urm_c⁄Â¨am
,

58 .
	gdïíds_⁄
.
	gnm
="¶urm_≠i_vîsi⁄", .
	g≥r_§c
.
	g¶urm
.
	goff
=(
off£tof
(
¶urm_˘l_c⁄f_t
, 
˛u°î_«me
)) },

60 { .
	gnm
="c⁄ãxt", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_MAC
)|BIT(
PSRC_DEFAULT
), .§c.
	gdebug
=BIT(PSRC_MAC)|BIT(
PSRC_MNT
)|BIT(PSRC_DEFAULT), .
	gtyp
=
PTYP_CONTEXT
, .
	gcﬁÀ˘‹
=
cﬁÀ˘mac_c⁄ãxt
,

61 .
	gdeÁu…_vÆ
.
	gue
.
	g°r
=
˘x_DEFAULT
 },

63 { .
	gnm
="C⁄åﬁMachöe", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_SLURM
), .§c.
	gdebug
=BIT(PSRC_SLURM)|BIT(
PSRC_MNT
), .
	gtyp
=
PTYP_CNTRLMACH
, .
	gcﬁÀ˘‹
=
cﬁÀ˘¶urm_c⁄Â¨am
,

64 .
	gdïíds_⁄
.
	gnm
="¶urm_≠i_vîsi⁄", .
	g≥r_§c
.
	g¶urm
.
	goff
=(
off£tof
(
¶urm_˘l_c⁄f_t
, 
c⁄åﬁ_machöe
)) },

66 { .
	gnm
="Debug", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_MAC
)|BIT(
PSRC_DEFAULT
), .§c.
	gdebug
=BIT(PSRC_MAC)|BIT(
PSRC_MNT
)|BIT(PSRC_DEFAULT),

67 .
	gtyp
=
PTYP_TRILENE
, .
	gdeÁu…_vÆ
.
	gue
.
	gåuth
=
TRUE
 },

69 { .
	gnm
="DefC⁄ãxt", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_MAC
)|BIT(
PSRC_DEFAULT
), .§c.
	gdebug
=BIT(PSRC_MAC)|BIT(
PSRC_MNT
)|BIT(PSRC_DEFAULT), .
	gtyp
=
PTYP_CONTEXT
, .
	gcﬁÀ˘‹
=
cﬁÀ˘mac_c⁄ãxt
,

70 .
	gdeÁu…_vÆ
.
	gue
.
	g°r
=
˘x_DEFAULT
 },

72 { .
	gnm
="Enf‹˚MAC", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_MAC
)|BIT(
PSRC_DEFAULT
), .§c.
	gdebug
=BIT(PSRC_MAC)|BIT(PSRC_DEFAULT), .
	gtyp
=
PTYP_TRILENE
, .
	gdeÁu…_vÆ
.
	gue
.
	gåuth
=
FALSE
 },

74 { .
	gnm
="fsid", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_DEFAULT
), .§c.
	gdebug
=BIT(PSRC_DEFAULT), .
	gtyp
=
PTYP_ALPHA
, .
	gdeÁu…_vÆ
.
	gue
.
	g°r
="¶u_rmfs", .deÁu…_vÆ.
	gsize
=9 },

76 { .
	gnm
="gªs_∂ugös", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_SLURM
), .§c.
	gdebug
=BIT(PSRC_SLURM), .
	gtyp
=
PTYP_GRES_PLUGIN
, .
	gcﬁÀ˘‹
=
cﬁÀ˘¶urm_c⁄Â¨am
, .
	gdïíds_⁄
.nm="slurm_api_version",

77 .
	g≥r_§c
.
	g¶urm
.
	goff
=(
off£tof
(
¶urm_˘l_c⁄f_t
, 
gªs_∂ugös
)) },

79 { .
	gnm
="Ho°«me", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_DERIVED
), .§c.
	gdebug
=BIT(PSRC_DERIVED), .
	gtyp
=
PTYP_HOSTNAME
, .
	gdeÁu…_vÆ
.
	gue
.
	gho°«me
="localhost",

80 .
	gcﬁÀ˘‹
=
cﬁÀ˘os_ho°«me
 },

82 { .
	gnm
="isC⁄åﬁÀr", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_DERIVED
), .§c.
	gdebug
=BIT(PSRC_DERIVED)|BIT(
PSRC_DEFAULT
), .
	gtyp
=
PTYP_TRILENE
, .
	gdeÁu…_vÆ
.
	gue
.
	gåuth
=
FALSE
,

83 .
	gcﬁÀ˘‹
=
ˇlcul_isC⁄åﬁÀr
, .
	gdïíds_⁄
.
	gnm
="ControlMachine" },

85 { .
	gnm
="jobs", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_SLURM
), .§c.
	gdebug
=BIT(PSRC_SLURM), .
	gtyp
=
PTYP_JOB
, .
	gcﬁÀ˘‹
=
cﬁÀ˘¶urm_jobs
, .
	gdïíds_⁄
.nm="slurm_api_version",

86 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
 = 
TRUE
 },

88 { .
	gnm
="job_submô_∂ugös", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_SLURM
), .§c.
	gdebug
=BIT(PSRC_SLURM), .
	gtyp
=
PTYP_JSUB_PLUGIN
, .
	gcﬁÀ˘‹
=
cﬁÀ˘¶urm_c⁄Â¨am
, .
	gdïíds_⁄
.nm="slurm_api_version",

89 .
	g≥r_§c
.
	g¶urm
.
	goff
=(
off£tof
(
¶urm_˘l_c⁄f_t
, 
job_submô_∂ugös
)) },

91 { .
	gnm
="Mou¡Poöt", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_MNT_NONOPT
)|BIT(
PSRC_DEFAULT
), .§c.
	gdebug
=BIT(PSRC_MNT_NONOPT)|BIT(PSRC_DEFAULT), .
	gtyp
=
PTYP_DIREXIST
,

92 .
	gdeÁu…_vÆ
.
	gue
.
	g°r
="fs", .
	gdïíds_⁄
.
	gnm
="SLURM_DIR" },

94 { .
	gnm
="mou¡poötfûe", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_DERIVED
)|BIT(
PSRC_DEFAULT
), .§c.
	gdebug
=BIT(PSRC_DERIVED)|BIT(PSRC_DEFAULT), .
	gtyp
=
PTYP_PATH
, .
	gdeÁu…_vÆ
.
	gue
.
	g°r
="mp",

95 .
	gcﬁÀ˘‹
=
ªc‹d_mou¡poöt
, .
	gdïíds_⁄
.
	gnm
="varrun" },

97 { .
	gnm
="nodes", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_SLURM
), .§c.
	gdebug
=BIT(PSRC_SLURM), .
	gtyp
=
PTYP_NODE
, .
	gcﬁÀ˘‹
=
cﬁÀ˘¶urm_nodes
, .
	gdïíds_⁄
.nm="slurm_api_version",

98 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
 = 
TRUE
 },

100 { .
	gnm
="∑πôi⁄s", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_SLURM
), .§c.
	gdebug
=BIT(PSRC_SLURM), .
	gtyp
=
PTYP_PARTITION
, .
	gcﬁÀ˘‹
=
cﬁÀ˘¶urm_∑πôi⁄s
, .
	gdïíds_⁄
.nm="slurm_api_version",

101 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
 = 
TRUE
 },

103 { .
	gnm
="∫odïoﬁ", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_DERIVED
), .§c.
	gdebug
=BIT(PSRC_DERIVED), .
	gtyp
=
PTYP_NUMERIC
, .
	gcﬁÀ˘‹
=
ˇlcul_∫odïoﬁ
, .
	gdïíds_⁄
.nm="partitions" },

105 { .
	gnm
="¶urm_≠i_vîsi⁄", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_DERIVED
)|BIT(
PSRC_SLURM
), .§c.
	gdebug
=BIT(PSRC_DERIVED)|BIT(PSRC_SLURM), .
	gtyp
=
PTYP_SLURMVERSION
, .
	gcﬁÀ˘‹
=
cﬁÀ˘¶urm_≠i_vîsi⁄
 },

108 { .
	gnm
="SLURM_MAC_CONF", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_ENV
)|BIT(
PSRC_DEFAULT
), .§c.
	gdebug
=BIT(PSRC_ENV)|BIT(PSRC_DEFAULT),

109 #i‚de‡
XXXDEBUG


110 .
	gtyp
=
PTYP_FILE
,

112 .
	gtyp
=
PTYP_FILEXIST
,

114 .
	gdeÁu…_vÆ
.
	gue
.
	g°r
="mac.c⁄f", .
	gdïíds_⁄
.
	gnm
="SLURM_DIR" },

116 { .
	gnm
="SLURM_DIR", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_ENV
)|BIT(
PSRC_DEFAULT
), .§c.
	gdebug
=BIT(PSRC_ENV)|BIT(PSRC_DEFAULT), .
	gtyp
=
PTYP_DIR
, .
	gdeÁu…_vÆ
.
	gue
.
	g∑thnm
="/etc/slurm" },

118 { .
	gnm
="Slurm˘ldTimeout", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_SLURM
), .§c.
	gdebug
=BIT(PSRC_SLURM), .
	gtyp
=
PTYP_SLURMTMOUT
, .
	gcﬁÀ˘‹
=
cﬁÀ˘¶urm_c⁄Â¨am
,

119 .
	g≥r_§c
.
	g¶urm
.
	goff
=(
off£tof
(
¶urm_˘l_c⁄f_t
, 
¶urm˘ld_timeout
)), .
	gdïíds_⁄
.
	gnm
="slurm_api_version" },

121 { .
	gnm
="SlurmU£r", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_SLURM
), .§c.
	gdebug
=BIT(PSRC_SLURM), .
	gtyp
=
PTYP_SLURMUID
, .
	gcﬁÀ˘‹
=
cﬁÀ˘¶urm_c⁄Â¨am
,

122 .
	g≥r_§c
.
	g¶urm
.
	goff
=(
off£tof
(
¶urm_˘l_c⁄f_t
, 
¶urm_u£r_id
)), .
	gdïíds_⁄
.
	gnm
="slurm_api_version", },

124 { .
	gnm
="SlurmdU£r", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_SLURM
), .§c.
	gdebug
=BIT(PSRC_SLURM), .
	gtyp
=
PTYP_SLURMUID
, .
	gcﬁÀ˘‹
=
cﬁÀ˘¶urm_c⁄Â¨am
,

125 .
	g≥r_§c
.
	g¶urm
.
	goff
=(
off£tof
(
¶urm_˘l_c⁄f_t
, 
¶urmd_u£r_id
)), .
	gdïíds_⁄
.
	gnm
="slurm_api_version" },

127 { .
	gnm
="SlurmdTimeout", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_SLURM
), .§c.
	gdebug
=BIT(PSRC_SLURM), .
	gtyp
=
PTYP_SLURMTMOUT
, .
	gcﬁÀ˘‹
=
cﬁÀ˘¶urm_c⁄Â¨am
,

128 .
	g≥r_§c
.
	g¶urm
.
	goff
=(
off£tof
(
¶urm_˘l_c⁄f_t
, 
¶urmd_timeout
)), .
	gdïíds_⁄
.
	gnm
="slurm_api_version" },

130 { .
	gnm
="job°ïs", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_SLURM
), .§c.
	gdebug
=BIT(PSRC_SLURM), .
	gtyp
=
PTYP_STEP
, .
	gcﬁÀ˘‹
=
cﬁÀ˘¶urm_job°ïs
, .
	gdïíds_⁄
.nm="slurm_api_version",

131 .
	g≥r_§c
.
	g¶urm
.
	gdy«mic
 = 
TRUE
 },

133 { .
	gnm
="¶urm_u£r_«me", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_SLURM
), .§c.
	gdebug
=BIT(PSRC_SLURM), .
	gtyp
=
PTYP_SLURMUNAME
, .
	gcﬁÀ˘‹
=
cﬁÀ˘¶urm_c⁄Â¨am
, .
	gdïíds_⁄
.nm="slurm_api_version",

134 .
	g≥r_§c
.
	g¶urm
.
	goff
=(
off£tof
(
¶urm_˘l_c⁄f_t
, 
¶urm_u£r_«me
)) },

135 { .
	gnm
="¶urmd_u£r_«me", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_SLURM
), .§c.
	gdebug
=BIT(PSRC_SLURM), .
	gtyp
=
PTYP_SLURMDUNAME
, .
	gcﬁÀ˘‹
=
cﬁÀ˘¶urm_c⁄Â¨am
, .
	gdïíds_⁄
.nm="slurm_api_version",

136 .
	g≥r_§c
.
	g¶urm
.
	goff
=(
off£tof
(
¶urm_˘l_c⁄f_t
, 
¶urmd_u£r_«me
)) },

138 { .
	gnm
="pidfûe", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_MAC
)|BIT(
PSRC_DEFAULT
), .§c.
	gdebug
=BIT(PSRC_MAC)|BIT(
PSRC_MNT
)|BIT(PSRC_DEFAULT), .
	gtyp
=
PTYP_PATH
,

139 .
	gdeÁu…_vÆ
.
	gue
.
	g°r
="pid", .
	gcﬁÀ˘‹
=
cﬁÀ˘os_pidfûe
, .
	gdïíds_⁄
.
	gnm
="varrun" },

140 { .
	gnm
="pid", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_DERIVED
), .§c.
	gdebug
=BIT(PSRC_DERIVED), .
	gtyp
=
PTYP_PID
, .
	gcﬁÀ˘‹
=
cﬁÀ˘os_pid
 },

142 { .
	gnm
="unmou¡waô", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_DERIVED
)|BIT(
PSRC_DEFAULT
), .§c.
	gdebug
=BIT(PSRC_DERIVED)|BIT(PSRC_DEFAULT), .
	gtyp
=
PTYP_NUMTIM_SECS
,

143 .
	gdeÁu…_vÆ
.
	gue
.
	gl
=61, .
	gcﬁÀ˘‹
=
ˇlcul_unmou¡waô
, .
	gdïíds_⁄
.
	gnm
="SlurmdTimeout" },

144 { .
	gnm
="v¨run", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_DERIVED
)|BIT(
PSRC_DEFAULT
), .§c.
	gdebug
=BIT(PSRC_DERIVED)|BIT(PSRC_DEFAULT), .
	gtyp
=
PTYP_DIR
, .
	gdeÁu…_vÆ
.
	gue
.
	g∑thnm
="/var/run/slurmfs",

145 .
	gdïíds_⁄
.
	gnm
="pid" },

147 { .
	gnm
="vîsi⁄", .
	g§c
.
	gÆlowed
=
BIT
(
PSRC_DEFAULT
), .§c.
	gdebug
=BIT(PSRC_DEFAULT), .
	gtyp
=
PTYP_NUMERIC
, .
	gdeÁu…_vÆ
.
	gue
.
	gul
=

148 #ifde‡
__COMPILE_DATE_TIME__


149 ()(
__COMPILE_DATE_TIME__
) },

152 #w¨nög >>> 
Usög
  
vîsi⁄
: 
__COMPILE_DATE_TIME__
 <<<

154 { .
	gnm
=
NULL
, .
	g§c
.
	gÆlowed
=
PSRC_NOBITS
, .
	gtyp
=
PTYP_NONE
 }

159 
	g±yp2≤ame_èb
[] = {

205 
NULL


223 
¶urm_fu£_›t_desc_t
 
	g¶urm_f›ts
[] =

225 { .
_s
=
NULL
, .
	g_l⁄g
="",

226 .
	gnm
="MountPoint",

227 .
	ghñp
="mountÖoint ofÅhe slurm file system ",

228 .
	goÊg
=(
OPT_MANDATORY
|
OPT_NONOPT
)

231 { .
	g_s
="-b %s", .
	g_l⁄g
="--backingstore=%s",

232 .
	gnm
="BackingStore",

233 .
	ghñp
 = "localÉxtended-attributedÉnabled file system",

234 .
	goÊg
=
OPT_MANDATORY


237 { .
	g_s
="-¯%s", .
	g_l⁄g
="--context=%s",

238 .
	gnm
="Context",

239 .
	ghñp
="SELinux context",

240 .
	goÊg
=
OPT_SELECT_ONE


243 { .
	g_s
="-d %s", .
	g_l⁄g
="--defcontext=%s" ,

244 .
	gnm
="DefContext",

245 .
	ghñp
="default SELinux context",

246 .
	goÊg
=
OPT_SELECT_ONE


249 { .
	g_s
="-e", .
	g_l⁄g
="--enforce",

250 .
	gnm
="EnforceMAC",

251 .
	ghñp
="enforce Mandatory Access ControlÜimits",

252 .
	goÊg
=
OPT_NONE


261 { .
	g_s
="-w", .
	g_l⁄g
="--wait %d",

262 .
	gnm
="unmountwait",

263 .
	ghñp
="maximum secondsÅo wait forÖrevious mountÅo unmount",

264 .
	goÊg
=
OPT_NONE


268 { .
	g_s
="-C %s", .
	g_l⁄g
="--cluster=%s",

269 .
	gnm
="ClusterName",

270 .
	ghñp
="explicitly set slurmfs' clustername [Debug only]",

271 .
	goÊg
=
OPT_VALID_IF_DEBUG


274 { .
	g_s
="-D", .
	g_l⁄g
="--DEBUG",

275 .
	gnm
="Debug",

276 .
	ghñp
="enable debug-specificálgorithmsánd options",

277 .
	goÊg
=
OPT_NONE


280 { .
	g_s
="-H %s", .
	g_l⁄g
="--hostname=%s",

281 .
	gnm
="Hostname",

282 .
	ghñp
="explicitly set slurmfs' hostname [Debug only]",

283 .
	goÊg
=
OPT_VALID_IF_DEBUG


286 { .
	g_s
="-M %s", .
	g_l⁄g
="--MACconf=%s",

287 .
	gnm
="SLURM_MAC_CONF",

288 .
	ghñp
="explicitly set Mandatory Access Control configuration file [Debug only]",

289 .
	goÊg
=
OPT_VALID_IF_DEBUG


292 { .
	gnm
=
NULL
 }

298 
fu£_›t
 *
	gp_fu£›ts_tbl
 = 
NULL
;

299 
	gfu£›ts_Àn
 = 0;

301 
	gfo_max_Àn
 = 1 + 
N_SLURM_FOPTS
 + 
N_SLURMFS_CONFIG
;

308 *
	gp§c2§˙ame_èb
[] = {

319 
NULL


323 
	$gë_fo_max_Àn
() {

324  
fo_max_Àn
;

325 
	}
}

328 
	$decode_p§c
(
∑øm_sour˚_t
 
p§c
) {

329 
∑øm_sour˚_t
 
s
;

330 
™y
;

331 *
pbuf
;

333 
pbuf
 = 
	`ˇŒoc
(255, ());

334 
™y
 = 0;

335 
s
 = 
PSRC_MOST_TRUSTED
;

336 
	`PSRC_TEST
(
s
, 
PSRC_LEAST_TRUSTED
);

337 
s
 = 
	`PSRC_NXT
(s)) {

339 i‡(
	`ISSET
(
p§c
, 
s
)) {

340 
	`¢¥ötf
(
pbuf
, 254, "%s%s", 
™y
?Öbuf: "", 
p§c2§˙ame_èb
[
s
]);

341 
™y
++;

345  
pbuf
;

346 
	}
}

	@lib/conf/misc/.djb_strtohash.c

2 
	~<limôs.h
>

3 
	~<°rög.h
>

23 
	$djb_°πohash
(*
°r
)

25 *
p
, *
p_ãrm
;

26 
hash
, 
i
, 
Àn
;

28 
p_ãrm
 = 
	`°rchr
(
°r
, '\0');

29 
Àn
 = 
p_ãrm
 - 
°r
;

30 
p
 = 
°r
;

31 
hash
 = 0;

33 i‡(
Àn
 <0 ||Üí > 
_POSIX_PATH_MAX
) {

37 
i
 = 0; i < 
Àn
; i++) {

38 
hash
 = 33 * hash ^ 
p
[
i
];

40  
hash
;

41 
	}
}

44 
	$djb_accumuœã
(
¥ev_hash
, 
key
) {

45 
hash
 = 
¥ev_hash
;

47 i‡(
key
 == 0) {

51 
hash
 = 33 * hash ^ 
key
;

52  
hash
;

53 
	}
}

	@lib/conf/misc/djb_hash.c

2 
	~<limôs.h
>

3 
	~<°rög.h
>

23 
	$djb_°πohash
(*
°r
)

25 *
p
, *
p_ãrm
;

26 
hash
, 
i
, 
Àn
;

28 
p_ãrm
 = 
	`°rchr
(
°r
, '\0');

29 
Àn
 = 
p_ãrm
 - 
°r
;

30 
p
 = 
°r
;

31 
hash
 = 0;

33 i‡(
Àn
 <0 ||Üí > 
_POSIX_PATH_MAX
) {

37 
i
 = 0; i < 
Àn
; i++) {

38 
hash
 = 33 * hash ^ 
p
[
i
];

40  
hash
;

41 
	}
}

44 
	$djb_accumuœã
(
¥ev_hash
, 
key
) {

45 
hash
 = 
¥ev_hash
;

47 i‡(
key
 == 0) {

51 
hash
 = 33 * hash ^ 
key
;

52  
hash
;

53 
	}
}

	@lib/conf/misc/misc_subr.c

2 
	~"rmfs.h
"

11 
	$p§c_msb
(
t°
) {

12 
_r
 = 0;

13 
_v
;

15 
_v
 = 
t°
;

16 
_v
 >>= 1) {

17 
_r
++;

19  
_r
;

20 
	}
}

23 
	$öã∫Æ_°æí
(c⁄° *
p_°r
) {

24 *
p_ãrm
;

25 
Àn
;

27 i‡(!
p_°r
) {

30 
p_ãrm
 = 
	`°rch∫ul
(
p_°r
, '\0');

31 
Àn
 = (Ë(
p_ãrm
 - 
p_°r
);

33  
Àn
;

34 
	}
}

	@lib/conf/setval/set_val_bool.c

2 
	~"rmfs.h
"

5 
	$£t_vÆ_boﬁ
(
c⁄fig_∑øm_t
 *
p_˝
, 
boﬁ_t
 
v
) {

6 
v
) {

7 
TRUE
:

8 
	`£t_vÆ_åuth
(
p_˝
, 
TRUE
);

10 
FALSE
:

11 
	`£t_vÆ_åuth
(
p_˝
, 
FALSE
);

14 
	}
}

	@lib/conf/setval/set_val_charptr.c

2 
	~"rmfs.h
"

8 
	$£t_vÆ_ch¨±r
(
c⁄fig_∑øm_t
 *
p_˝
, *
p_°r
) {

9 
rmfs_∑øm_t
 
√w_vÆ
;

10 
åi_t
 
tc
 = 
UNSET
;

11 
Àn
;

13 i‡(!
p_˝
) {

14 
	`EºExô
(
EºExô_CONFIG
, "set_val_charptr:ÇullÖ_cp");

17 i‡(!
p_°r
) {

18 
	`EºExô
(
EºExô_CONFIG
, "set_val_charptr:ÇullÖ_str");

21 i‡((
Àn
 = 
	`öã∫Æ_°æí
(
p_°r
)) < 0) {

22 
	`EºExô
(
EºExô_CONFIG
, "set_val_charptr: strlen < 0");

24 
√w_vÆ
.
ue
.
°r
 = 
p_°r
;

25 
√w_vÆ
.
size
 = 
Àn
 + 1;

27 
tc
 = 
	`typ_check
(
p_˝
->
typ
, &
√w_vÆ
);

28 i‡(
tc
 !
TRUE
) {

29 
	`EºExô
(
EºExô_CONFIG
, "set_val_charptr:Åyp_check failed");

32 
p_˝
->
vÆ
.
ue
.
°r
 = 
√w_vÆ
.ue.str;

33 
p_˝
->
h
 = 
	`djb_°πohash
(
p_°r
);

34 
p_˝
->
vÆ
.
size
 = 
Àn
+1;

37 
	}
}

	@lib/conf/setval/set_val_l.c

2 
	~"rmfs.h
"

5 
	$£t_vÆ_l
(
c⁄fig_∑øm_t
 *
p_˝
, 
v
) {

6 
rmfs_∑øm_t
 
√w_vÆ
;

7 
åi_t
 
tc
 = 
UNSET
;

9 
√w_vÆ
.
ue
.
l
 = 
v
;

11 
tc
 = 
	`typ_check
(
p_˝
->
typ
, &
√w_vÆ
);

12 i‡(
tc
 !
TRUE
) {

13 
	`EºExô
(
EºExô_CONFIG
, "set_val_l:Åyp_check failed");

17 
p_˝
->
vÆ
.
ue
.
l
 = 
v
;

18 
p_˝
->
vÆ
.
size
 = ();

22 
	}
}

	@lib/conf/setval/set_val_pid.c

2 
	~"rmfs.h
"

5 
	$£t_vÆ_pid
(
c⁄fig_∑øm_t
 *
p_˝
, 
pid_t
 
pid
) {

9 
p_˝
->
vÆ
.
ue
.
pid
 =Öid;

10 
p_˝
->
vÆ
.
size
 = (
pid_t
);

12 
	}
}

	@lib/conf/setval/set_val_ptr.c

2 
	~"rmfs.h
"

8 
	$£t_vÆ_±r
(
c⁄fig_∑øm_t
 *
p_˝
, *
p_void
) {

9 
åi_t
 
tc
 = 
UNSET
;

11 i‡(!
p_˝
) {

12 
	`EºExô
(
EºExô_INTERNAL
, "set_val_ptr:ÇullÖ_cp");

14 i‡(!
p_void
) {

15 
	`EºExô
(
EºExô_INTERNAL
, "set_val_ptr:ÇullÖ_void");

17 
tc
 = 
	`typ_check
(
p_˝
->
typ
, 
p_void
);

18 i‡(
TRUE
 =
tc
) {

19 
p_˝
->
vÆ
.
ue
.
±r
 = 
p_void
;

20 
p_˝
->
vÆ
.
size
 = 
CP_UNK_SIZE
;

22 } i‡(
UNSET
 =
tc
) {

23 
	`EºExô
(
EºExô_INTERNAL
, "set_val_ptr: unknownÅypecheck failure");

29 
	}
}

	@lib/conf/setval/set_val_truth.c

2 
	~"rmfs.h
"

5 
	$£t_vÆ_åuth
(
c⁄fig_∑øm_t
 *
p_˝
, 
åi_t
 
v
) {

6 
rmfs_∑øm_t
 
√w_vÆ
;

7 
åi_t
 
tc
 = 
UNSET
;

8 *
åi2°r
[];

10 
√w_vÆ
.
ue
.
åuth
 = 
v
;

11 
tc
 = 
	`typ_check
(
p_˝
->
typ
, &
√w_vÆ
);

12 i‡(
tc
 !
TRUE
) {

13 
	`EºExô
(
EºExô_CONFIG
, "set_val_truth:Åyp_check failed");

18 
p_˝
->
vÆ
.
ue
.
åuth
 = 
v
;

21 
v
) {

22 
UNSET
:

23 
p_˝
->
vÆ
.
size
 = 
	`öã∫Æ_°æí
(
åi2°r
[0]);

25 
FALSE
:

26 
p_˝
->
vÆ
.
size
 = 
	`öã∫Æ_°æí
(
åi2°r
[1]);

28 
TRUE
:

29 
p_˝
->
vÆ
.
size
 = 
	`öã∫Æ_°æí
(
åi2°r
[2]);

32 
p_˝
->
vÆ
.
size
 = 0;

38 
	}
}

	@lib/conf/setval/set_val_ui.c

2 
	~"rmfs.h
"

5 
	$£t_vÆ_ui
(
c⁄fig_∑øm_t
 *
p_˝
, 
uiv
) {

6 
rmfs_∑øm_t
 
√w_vÆ
;

7 
åi_t
 
tc
 = 
UNSET
;

9 
√w_vÆ
.
ue
.
ui
 = 
uiv
;

11 
tc
 = 
	`typ_check
(
p_˝
->
typ
, &
√w_vÆ
);

12 i‡(
tc
 !
TRUE
) {

13 
	`EºExô
(
EºExô_CONFIG
, "set_val_ul:Åyp_check failed");

18 
p_˝
->
vÆ
.
ue
.
ul
 = 
uiv
;

19 
p_˝
->
vÆ
.
size
 = ();

23 
	}
}

	@lib/conf/setval/set_val_uid.c

2 
	~"rmfs.h
"

5 
	$£t_vÆ_uid
(
c⁄fig_∑øm_t
 *
p_˝
, 
uid_t
 
uid
) {

9 
p_˝
->
vÆ
.
ue
.
uid
 = uid;

10 
p_˝
->
vÆ
.
size
 = (
uid_t
);

12 
	}
}

	@lib/conf/setval/set_val_ul.c

2 
	~"rmfs.h
"

5 
	$£t_vÆ_ul
(
c⁄fig_∑øm_t
 *
p_˝
, 
v
) {

6 
rmfs_∑øm_t
 
√w_vÆ
;

7 
åi_t
 
tc
 = 
UNSET
;

9 
√w_vÆ
.
ue
.
ul
 = 
v
;

11 
tc
 = 
	`typ_check
(
p_˝
->
typ
, &
√w_vÆ
);

12 i‡(
tc
 !
TRUE
) {

13 
	`EºExô
(
EºExô_CONFIG
, "set_val_ul:Åyp_check failed");

18 
p_˝
->
vÆ
.
ue
.
ul
 = 
v
;

19 
p_˝
->
vÆ
.
size
 = ();

23 
	}
}

	@lib/conf/typ/typ_alpha.c

2 
	~"rmfs.h
"

4 
åi_t


5 
	$typ_ißÕha
(
rmfs_∑øm_t
 *
p_vÆ
) {

6 *
s
;

7 
l
, 
i
;

9 i‡(
p_vÆ
->
size
 =
CP_UNK_SIZE
) {

10 
	`Ußge
(
EºExô_CONFIG
, "typecheck(ALPHANUM) has unknown size");

12 
l
 = 
p_vÆ
->
size
;

13 
i
 = 0, 
s
 = 
p_vÆ
->
ue
.
°r
; i < 
l
 && s && *s; i++, s++) {

14 i‡(!
	`ißÕha
(*
s
) && *s != '_') {

15  
FALSE
;

18  
TRUE
;

19 
	}
}

	@lib/conf/typ/typ_alphanum.c

2 
	~"rmfs.h
"

5 
åi_t


6 
	$typ_ißÕh™um
(
rmfs_∑øm_t
 *
p_vÆ
) {

7 *
s
;

8 
l
, 
i
;

10 i‡(
p_vÆ
->
size
 =
CP_UNK_SIZE
) {

11 
	`Ußge
(
EºExô_CONFIG
, "typecheck(ALPHANUM) has unknown size");

14 
l
 = 
p_vÆ
->
size
;

15 
i
 = 0, 
s
 = 
p_vÆ
->
ue
.
°r
; i < 
l
 && s && *s; i++, s++) {

16 i‡(!
	`iß um
(*
s
) && *s != '_') {

17  
FALSE
;

20  
TRUE
;

21 
	}
}

25 
åi_t


26 
	$typ_ißÕh™um_‹nul
(
rmfs_∑øm_t
 *
p_vÆ
) {

27 *
s
;

28 
l
, 
i
;

30 i‡(
CP_UNK_SIZE
 =
p_vÆ
->
size
) {

31  
TRUE
;

33 i‡(0 =
p_vÆ
->
size
) {

34  
TRUE
;

36 i‡(!
p_vÆ
->
ue
.
°r
) {

37  
TRUE
;

40 
l
 = 
p_vÆ
->
size
;

41 
i
 = 0, 
s
 = 
p_vÆ
->
ue
.
°r
; i < 
l
 && s && *s; i++, s++) {

42 i‡(!
	`iß um
(*
s
) && *s != '_') {

43  
FALSE
;

46  
TRUE
;

47 
	}
}

	@lib/conf/typ/typ_always_fails.c

2 
	~"rmfs.h
"

5 
åi_t


6 
	$typ_Æways_Áûs
(
rmfs_∑øm_t
 *
p_vÆ
) {

7  
FALSE
;

8 
	}
}

	@lib/conf/typ/typ_check.c

2 
	~"rmfs.h
"

6 
åi_t


7 
	$typ_check
(
±yp_t
 
±yp
, 
rmfs_∑øm_t
 *
p_vÆ
) {

8 
åi_t
 
tc
;

10 
åi_t
 
	`typ_ho°
(
rmfs_∑øm_t
 *);

11 
åi_t
 
	`typ_ißÕh™um
(
rmfs_∑øm_t
 *);

12 
åi_t
 
	`typ_numîic
(
rmfs_∑øm_t
 *);

13 
åi_t
 
	`typ_Æways_Áûs
(
rmfs_∑øm_t
 *);

14 
	`åi_t
 (*
∑øm_ty≥check_fun˘ab
[])(
rmfs_∑øm_t
 *);

16 
tc
 = 
UNSET
;

18 i‡(!
p_vÆ
) {

19 
	`EºExô
(
EºExô_INTERNAL
, "typ_check:ÇullÖ_val");

21 i‡(!
p_vÆ
) {

22 
	`EºExô
(
EºExô_INTERNAL
, "typ_check:ÇullÖ_val");

24 i‡(!
	`IS_VALID_TYPE
(
±yp
)) {

25 
	`EºExô
(
EºExô_INTERNAL
, "typ_check: invalidÖtype");

27 i‡(!
∑øm_ty≥check_fun˘ab
[
±yp
]) {

28 
	`EºExô
(
EºExô_ASSERT
, "typ_check:ÇullÅypecheck function");

29  
	`typ_Æways_Áûs
(
p_vÆ
);

31 
tc
 = (*
∑øm_ty≥check_fun˘ab
[
±yp
])(
p_vÆ
);

32  
tc
;

33 
	}
}

	@lib/conf/typ/typ_context.c

2 
	~"rmfs.h
"

13 
åi_t


14 
	$typ_c⁄ãxt
(
rmfs_∑øm_t
 *
p_vÆ
) {

15 
pid_t
 
u_pid
;

16 
fu£_c⁄ãxt
 *
p_f˙txt
;

17 
£curôy_c⁄ãxt_t
 
£c⁄txt
 = 
NULL
;

18 *
p_c
;

20 
	`gëpidc⁄
(
pid_t
, 
£curôy_c⁄ãxt_t
 *);

21 
	`£curôy_check_c⁄ãxt
(
£curôy_c⁄ãxt_t
);

23 i‡(!
p_vÆ
) {

24 
	`EºExô
(
EºExô_ASSERT
, "typ_context: !p_val");

25 
ch¨check
;

28 
p_f˙txt
 = 
	`fu£_gë_c⁄ãxt
();

29 i‡(!
p_f˙txt
) {

30 
	`EºExô
(
EºExô_WARN
, "typ_context:Ço fuse context (yet?), fall backÅo xattr-only check");

31 
ch¨check
;

34 
u_pid
 = 
p_f˙txt
->
pid
;

35 i‡(0 =
u_pid
 || 1 == u_pid || -1 == u_pid) {

36 
	`EºExô
(
EºExô_WARN
, "typ_context: implausibleÖid (0, 1, -1)");

37 
ch¨check
;

39 i‡(
	`kûl
(
u_pid
, 0) < 0) {

40 
ch¨check
;

43 i‡(!
	`is_£löux_íabÀd
()) {

44 
	`EºExô
(
EºExô_WARN
, "typ_context: !is_selinux_enabled(), skipping context checks");

46 i‡(
	`gëpidc⁄
(
u_pid
, &
£c⁄txt
) < 0) {

47 
	`EºExô
(
EºExô_ASSERT
, "typ_context: !getpidcon()");

48 
ch¨check
;

50 i‡(
	`£curôy_check_c⁄ãxt
(
£c⁄txt
) < 0) {

51  
FALSE
;

53 #ifde‡
XXXSEPOLICY_JOBID_CTX_DEFINED


54 i‡(
	`£löux_fûe_c⁄ãxt_cmp
(
£c⁄txt
, 
p_vÆ
->
ue
.
°r
) < 0) {

55  
FALSE
;

60 
ch¨check
:

61 i‡(!
p_vÆ
->
ue
.
°r
) {

62  
FALSE
;

65 
p_c
 = 
p_vÆ
->
ue
.
°r
;Ö_c && *p_c;Ö_c++) {

66 i‡('\n' =*
p_c
 && *(p_c+1) == '\0') {

69 i‡(!
	`i•röt
(*
p_c
)) {

70  
FALSE
;

73  
TRUE
;

74 
	}
}

	@lib/conf/typ/typ_dir.c

2 
	~"rmfs.h
"

4 
åi_t


5 
	$typ_dú
(
rmfs_∑øm_t
 *
p_vÆ
) {

6 
åi_t
 
rc
;

7 
°©
 
°
;

8 
e
;

9 
åi_t
 
	`typ_fûe
(
rmfs_∑øm_t
 *);

11 
e
 = 0;

12 
rc
 = 
	`typ_fûe
(
p_vÆ
);

15 i‡(-1 =
	`°©
(
p_vÆ
->
ue
.
∑thnm
, &
°
)) {

16 
e
 = 
î∫o
;

17 i‡(
ENOENT
 !
e
) {

18 
rc
 = 
FALSE
;

22 
rc
 = !
	`S_ISDIR
(
°
.
°_mode
)? 
FALSE
: 
TRUE
;

24  
rc
;

25 
	}
}

27 
åi_t


28 
	$typ_dúexi°
(
rmfs_∑øm_t
 *
p_vÆ
) {

29 
åi_t
 
rc
;

30 
°©
 
°
;

31 
åi_t
 
	`typ_fûe
(
rmfs_∑øm_t
 *);

33 
rc
 = 
	`typ_fûe
(
p_vÆ
);

34 i‡(
rc
 =
FALSE
 || -1 =
	`°©
(
p_vÆ
->
ue
.
∑thnm
, &
°
)) {

35  
rc
;

37 i‡(!
	`S_ISDIR
(
°
.
°_mode
)) {

38  
FALSE
;

40  
rc
;

41 
	}
}

	@lib/conf/typ/typ_file.c

2 
	~"rmfs.h
"

4 
åi_t


5 
	$typ_fûe
(
rmfs_∑øm_t
 *
p_vÆ
) {

6 
åi_t
 
rc
;

7 
°©
 
°
;

8 
åi_t
 
	`typ_∑th
(
rmfs_∑øm_t
 *);

10 
rc
 = 
	`typ_∑th
(
p_vÆ
);

11 i‡(
rc
 !
TRUE
) {

12 
out
;

15 i‡(-1 =
	`°©
(
p_vÆ
->
ue
.
∑thnm
, &
°
)) {

16 i‡(
ENOENT
 =
î∫o
) {

17 
out
;

19 i‡(!
	`S_ISREG
(
°
.
°_mode
)) {

20 
out
;

24 
out
:

25  
rc
;

26 
	}
}

28 
åi_t


29 
	$typ_fûexi°
(
rmfs_∑øm_t
 *
p_vÆ
) {

30 
åi_t
 
rc
;

31 
°©
 
°
;

33 
rc
 = 
	`typ_fûe
(
p_vÆ
);

34 i‡(
rc
 =
TRUE
) {

36 i‡(-1 =
	`°©
(
p_vÆ
->
ue
.
∑thnm
, &
°
)) {

37  
rc
;

39 i‡(!
	`S_ISREG
(
°
.
°_mode
)) {

40  
FALSE
;

43  
rc
;

44 
	}
}

	@lib/conf/typ/typ_host.c

2 
	~"rmfs.h
"

4 
åi_t


5 
	$typ_ho°
(
rmfs_∑øm_t
 *
p_vÆ
) {

6 
l
;

7 *
p_ãrm
, *
p_°¨t
;

9 i‡(!
p_vÆ
) {

10 
	`Ußge
(
EºExô_INTERNAL
, "typ_host: !p_val");

12 i‡(!
p_vÆ
->
ue
.
ho°«me
) {

13 
	`Ußge
(
EºExô_INTERNAL
, "typ_host: !p_val->ue.hostname");

16 
p_°¨t
 = 
p_vÆ
->
ue
.
ho°«me
;

17 
p_ãrm
 = 
	`°rch∫ul
(
p_°¨t
, '\0');

18 
l
 = 
p_ãrm
 - 
p_°¨t
;

20 i‡(
l
 <= 0) {

21 
	`EºExô
(
EºExô_CONFIG
, "typ_host: illegal hostname:Çegative or zero-length");

23 i‡(
l
 > 
HOST_NAME_MAX
) {

24 
	`EºExô
(
EºExô_CONFIG
, "typ_host: illegal hostname:Üength > HOST_NAME_MAX");

26 i‡(*
p_°¨t
 ='-' || *(
p_ãrm
-1) == '-') {

27 
	`EºExô
(
EºExô_CONFIG
, "typ_host: illegal hostname: starts orÉnds withá '-'");

31 
p_vÆ
->
size
 = 
l
+1;

32  
TRUE
;

33 
	}
}

	@lib/conf/typ/typ_inout.c

2 
	~"rmfs.h
"

9 
	$typ_c›yout
(
c⁄fig_∑øm_t
 *
p_˝
, *
out
, 
size_t
 
size
) {

10 
l
;

11 
±yp_t
 
±yp
;

12 
tm
 *
p_tm
 = 
NULL
;

14 i‡(!
p_˝
) {

15  -
EIO
;

17 i‡(!
out
) {

18  -
ENOMEM
;

20 i‡(
p_˝
->
vÆ
.
size
 > size) {

21  -
ERANGE
;

24 
l
 = 
size
;

25 i‡(
p_˝
->
vÆ
.
size
 > 0) {

26 
l
 = 
	`mö
(
size
, 
p_˝
->
vÆ
.size);

28 
±yp
 = 
p_˝
->
typ
;

30 i‡(
	`mem£t
(
out
, 0, 
l
) < 0) {

31  -
EIO
;

35 i‡(
	`IS_SLURM_TYPE
(
±yp
)) {

36 
±yp
) {

37 
PTYP_NODESTATE
:

38 
PTYP_ALLOCJOB
:

39 
±yp
 = 
PTYP_OPAQUE
;

41 
PTYP_SLURMVERSION
:

42 
PTYP_SLURMUID
:

43 
PTYP_SLURMTMOUT
:

44 
±yp
 = 
PTYP_NUMERIC
;

47 
±yp
 = 
PTYP_ALPHANUM
;

52 i‡(
	`IS_OPAQUE_TYPE
(
±yp
)) {

53 
	`¢¥ötf
(
out
, 
size
, "0x%x\n", 
OPAQUE_EMIT
);

54 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

56 } i‡(
	`IS_CONTEXT_TYPE
(
±yp
)) {

57 i‡(
p_˝
->
vÆ
.
ue
.
°r
 && 
l
 > 0) {

58 i‡(
	`mem˝y
(
out
, 
p_˝
->
vÆ
.
ue
.
°r
, 
l
) != out) {

59  -
EIO
;

62 } i‡(
	`IS_FSVIS_TYPE
(
±yp
)) {

63 i‡(!
p_˝
->
vÆ
.
ue
.
∑thnm
) {

64  -
EFAULT
;

66 i‡(
	`mem˝y
(
out
, 
p_˝
->
vÆ
.
ue
.
∑thnm
, 
l
) != out) {

67  -
EIO
;

69 } i‡(
	`IS_ALPHA_TYPE
(
±yp
)) {

70 i‡(!
p_˝
->
vÆ
.
ue
.
°r
) {

73 i‡(
	`mem˝y
(
out
, 
p_˝
->
vÆ
.
ue
.
°r
, 
l
) != out) {

74  -
EIO
;

76 } i‡(
	`IS_LOGICAL_TYPE
(
±yp
)) {

77 *
‰om
;

79 i‡(
	`IS_BOOLEAN_TYPE
(
±yp
)) {

80 
‰om
 = 
	`b2boﬁ°r
(
p_˝
->
vÆ
.
ue
.
båuth
);

82 } i‡(
	`IS_TRILENE_TYPE
(
±yp
)) {

83 
‰om
 = 
	`t2åi°r
(
p_˝
->
vÆ
.
ue
.
åuth
);

85 
l
 = 
	`öã∫Æ_°æí
(
‰om
);

86 i‡(
l
 <0 || 
	`mem˝y
(
out
, 
‰om
,Ü+1) != out) {

87  -
EIO
;

90 } i‡(
	`IS_NUMERIC_TYPE
(
±yp
)) {

92 i‡(
PTYP_UID
 =
±yp
) {

93 
	`¢¥ötf
(
out
, 
size
, "%d\n", 
p_˝
->
vÆ
.
ue
.
uid
);

94 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

96 } i‡(
PTYP_PID
 =
±yp
) {

97 
	`¢¥ötf
(
out
, 
size
, "%d\n", 
p_˝
->
vÆ
.
ue
.
pid
);

98 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

100 } i‡(
PTYP_NUMTIME_SECS
 =
±yp
) {

102 
p_tm
 = 
	`loˇ…ime
(&
p_˝
->
vÆ
.
ue
.
time
);

103 i‡(!
p_tm
) {

104 
	`¢¥ötf
(
out
, 
size
, "%ld\n", 
p_˝
->
vÆ
.
ue
.
time
);

105 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

107 
l
 = 
	`°r·ime
(
out
, 
size
, "%s\n", 
p_tm
);

108 
p_˝
->
vÆ
.
size
 = 
l
;

111 } i‡(
PTYP_NUMERICTIME
 =
±yp
) {

113 
p_tm
 = 
	`loˇ…ime
(&
p_˝
->
vÆ
.
ue
.
time
);

114 i‡(!
p_tm
) {

115 
	`¢¥ötf
(
out
, 
size
, "%ld\n", 
p_˝
->
vÆ
.
ue
.
time
);

116 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

118 
l
 = 
	`°r·ime
(
out
, 
size
, "%F %T\n", 
p_tm
);

119 
p_˝
->
vÆ
.
size
 = 
l
;

122 } i‡(
PTYP_NUMSIGNED
 =
±yp
) {

123 
	`¢¥ötf
(
out
, 
size
, "%ld\n", 
p_˝
->
vÆ
.
ue
.
l
);

124 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

126 } i‡(
PTYP_NUMERIC
 =
±yp
) {

127 
	`¢¥ötf
(
out
, 
size
, "%ld\n", (Ë
p_˝
->
vÆ
.
ue
.
ul
);

128 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

130 } i‡(
PTYP_UNSIGNED_INT16
 =
±yp
) {

131 
	`¢¥ötf
(
out
, 
size
, "%u\n", 
p_˝
->
vÆ
.
ue
.
ui_16
);

132 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

134 } i‡(
PTYP_UNSIGNED_INT32
 =
±yp
) {

135 
	`¢¥ötf
(
out
, 
size
, "%u\n", 
p_˝
->
vÆ
.
ue
.
ui_32
);

136 
l
 = 
	`öã∫Æ_°æí
(
out
)+1;

139 (*(*Ë
out
Ë
p_˝
->
vÆ
.
ue
.
ul
;

140 
l
 = ();

143  -
EINVAL
;

146  
l
;

147 
	}
}

153 
	$typ_c›yö
(
c⁄fig_∑øm_t
 *
p_˝
, *
ö
, 
size_t
 
size
) {

154 
±yp_t
 
±yp
;

155 
rmfs_∑øm_t
 
√w_vÆ
;

157 
±yp
 = 
p_˝
->
typ
;

159 i‡(
	`IS_OPAQUE_TYPE
(
±yp
)) {

161 
î∫o
 = -
EFAULT
;

164 
√w_vÆ
.
ue
.
±r
 = 
ö
;

165 i‡(!
ö
) {

166 
î∫o
 = -
ENXIO
;

169 i‡(!
	`typ_check
(
±yp
, &
√w_vÆ
)) {

170 
î∫o
 = -
EINVAL
;

174 i‡(
	`IS_CONTEXT_TYPE
(
±yp
)) {

175 
	`£t_vÆ_ch¨±r
(
p_˝
, 
ö
);

177 } i‡(
	`IS_NUMERIC_TYPE
(
±yp
)) {

178 
	`£t_vÆ_ul
(
p_˝
, 
	`°πﬁ
(
ö
, 
NULL
, 10));

180 } i‡(
	`IS_NUMSIGNED_TYPE
(
±yp
)) {

181 
	`£t_vÆ_l
(
p_˝
, 
	`°πﬁ
(
ö
, 
NULL
, 10));

183 } i‡(
	`IS_ALPHA_TYPE
(
±yp
)) {

184 
	`£t_vÆ_ch¨±r
(
p_˝
, 
ö
);

187 
	`£t_vÆ_±r
(
p_˝
, (*Ë
ö
);

190 
	}
}

	@lib/conf/typ/typ_numeric.c

2 
	~"rmfs.h
"

4 
åi_t


5 
	$typ_numîic
(
rmfs_∑øm_t
 *
p_vÆ
) {

6 
l
;

8 i‡(!
p_vÆ
) {

9 
	`EºExô
(
EºExô_ASSERT
, "typ_numeric(): !p_val");

10  
FALSE
;

12 
l
 = (Ë
p_vÆ
->
ue
.
ul
;

13 i‡(
l
 < 
LONG_MIN
 ||Ü > 
LONG_MAX
) {

14  
FALSE
;

16  
TRUE
;

17 
	}
}

24 
åi_t


25 
	$typ_numsig√d
(
rmfs_∑øm_t
 *
p_vÆ
) {

26 
l
;

28 i‡(!
p_vÆ
) {

29 
	`EºExô
(
EºExô_ASSERT
, "typ_numsigned(): !p_val");

30  
FALSE
;

32 
l
 = (Ë
p_vÆ
->
ue
.l;

33 i‡(
l
 < 
LONG_MIN
 ||Ü > 
LONG_MAX
) {

34  
FALSE
;

36  
TRUE
;

37 
	}
}

39 
åi_t


40 
	$typ_unsig√d_öt
(
rmfs_∑øm_t
 *
p_vÆ
) {

41 
ul
;

43 i‡(!
p_vÆ
) {

44 
	`EºExô
(
EºExô_ASSERT
, "typ_unsigned_int: !p_val");

45  
FALSE
;

47 
ul
 = (Ë
p_vÆ
->
ue
.
ui
;

48 i‡(
ul
 > 
UINT_MAX
) {

49  
FALSE
;

51  
TRUE
;

53 
	}
}

55 
åi_t


56 
	$typ_unsig√d_öt16
(
rmfs_∑øm_t
 *
p_vÆ
) {

57 
uöt16_t
 
ui_16
;

59 i‡(!
p_vÆ
) {

60 
	`EºExô
(
EºExô_ASSERT
, "typ_unsigned_int16: !p_val");

61  
FALSE
;

63 
ui_16
 = 
p_vÆ
->
ue
.ui_16;

64 i‡(
ui_16
 > 
UINT_MAX
) {

65  
FALSE
;

67  
TRUE
;

69 
	}
}

71 
åi_t


72 
	$typ_unsig√d_öt32
(
rmfs_∑øm_t
 *
p_vÆ
) {

73 
uöt32_t
 
ui_32
;

75 i‡(!
p_vÆ
) {

76 
	`EºExô
(
EºExô_ASSERT
, "typ_unsigned_int32: !p_val");

77  
FALSE
;

79 
ui_32
 = 
p_vÆ
->
ue
.ui_32;

80 i‡(
ui_32
 > 
UINT_MAX
) {

81  
FALSE
;

83  
TRUE
;

85 
	}
}

87 
åi_t


88 
	$typ_numîi˘ime
(
rmfs_∑øm_t
 *
p_vÆ
) {

89 
åi_t
 
num
 = 
	`typ_numîic
(
p_vÆ
);

92  (
num
 =
TRUE
 && 
p_vÆ
->
ue
.
time
 >= 0);

93 
	}
}

95 
åi_t


96 
	$typ_numtim£cs
(
rmfs_∑øm_t
 *
p_vÆ
) {

98 i‡(!
p_vÆ
) {

99 
	`EºExô
(
EºExô_ASSERT
, "typ_numtimsecs: !p_val");

100  
FALSE
;

104  
	`typ_numîi˘ime
(
p_vÆ
);

105 
	}
}

	@lib/conf/typ/typ_numericchar.c

2 
	~"rmfs.h
"

4 
åi_t


5 
	$typ_numîicch¨
(
rmfs_∑øm_t
 *
p_vÆ
) {

6 *
s
;

7 
l
, 
i
;

9 i‡(
p_vÆ
->
size
 =
CP_UNK_SIZE
) {

10 
	`Ußge
(
EºExô_CONFIG
, "typecheck(ALPHANUM) has unknown size");

12 
l
 = 
p_vÆ
->
size
;

14 
i
 = 0, 
s
 = 
p_vÆ
->
ue
.
°r
; i < 
l
 && s && *s; i++, s++) {

15 i‡(!
	`isdigô
(*
s
)) {

16  
FALSE
;

19  
TRUE
;

20 
	}
}

	@lib/conf/typ/typ_opaque.c

2 
	~"rmfs.h
"

5 
åi_t


6 
	$typ_›aque
(
rmfs_∑øm_t
 *
p_vÆ
) {

7  
TRUE
;

8 
	}
}

	@lib/conf/typ/typ_path.c

2 
	~"rmfs.h
"

4 
åi_t


5 
	$typ_∑th
(
rmfs_∑øm_t
 *
p_vÆ
) {

6 *
∑thnm
;

7 
î∫o
;

9 i‡(!
p_vÆ
->
ue
.
∑thnm
) {

10 
	`EºExô
(
EºExô_ASSERT
, "typ_path()");

11  
FALSE
;

13 
∑thnm
 = 
p_vÆ
->
ue
.pathnm;

14 i‡(-1 =
	`ac˚ss
(
∑thnm
, 
F_OK
)) {

15 i‡(
ENOENT
 =
î∫o
) {

16  
TRUE
;

18  
FALSE
;

20  
TRUE
;

21 
	}
}

	@lib/conf/typ/typ_slurm.c

2 
	~"rmfs.h
"

17 
åi_t
 
typ_ißÕh™um
(
rmfs_∑øm_t
 *);

18 
åi_t
 
typ_numîic
(
rmfs_∑øm_t
 *);

19 
åi_t
 
typ_ho°
(
rmfs_∑øm_t
 *);

21 
åi_t


22 
	$typ_¶urm_˛u°î
(
rmfs_∑øm_t
 *
p_vÆ
) {

25  
	`typ_ho°
(
p_vÆ
);

26 
	}
}

28 
åi_t


29 
	$typ_¶urm_c⁄åﬁmach
(
rmfs_∑øm_t
 *
p_vÆ
) {

32  
	`typ_ho°
(
p_vÆ
);

33 
	}
}

35 
åi_t


36 
	$typ_¶urm_∑πôi⁄
(
rmfs_∑øm_t
 *
p_vÆ
) {

39  
	`typ_ißÕh™um
(
p_vÆ
);

40 
	}
}

42 
åi_t


43 
	$typ_¶urm_node
(
rmfs_∑øm_t
 *
p_vÆ
) {

46  
	`typ_ho°
(
p_vÆ
);

47 
	}
}

49 
åi_t


50 
	$typ_¶urm_job
(
rmfs_∑øm_t
 *
p_vÆ
) {

53  
	`typ_numîic
(
p_vÆ
);

54 
	}
}

56 
åi_t


57 
	$typ_¶urm_°ï
(
rmfs_∑øm_t
 *
p_vÆ
) {

60  
	`typ_numîic
(
p_vÆ
);

61 
	}
}

63 
åi_t


64 
	$typ_¶urm_Ælocjob
(
rmfs_∑øm_t
 *
p_vÆ
) {

67  
TRUE
;

68 
	}
}

70 
åi_t


71 
	$typ_¶urm_node°©e
(
rmfs_∑øm_t
 *
p_vÆ
) {

74  
TRUE
;

75 
	}
}

	@lib/conf/typ/typ_table.c

2 
	~"rmfs.h
"

11 
åi_t
 
typ_Æways_Áûs
(
rmfs_∑øm_t
 *);

12 
åi_t
 
typ_›aque
(
rmfs_∑øm_t
 *);

13 
åi_t
 
typ_ißÕh™um
(
rmfs_∑øm_t
 *);

14 
åi_t
 
typ_ißÕh™um_‹nul
(
rmfs_∑øm_t
 *);

15 
åi_t
 
typ_ißÕha
(
rmfs_∑øm_t
 *);

16 
åi_t
 
typ_numîicch¨
(
rmfs_∑øm_t
 *);

17 
åi_t
 
typ_x©å
(
rmfs_∑øm_t
 *);

18 
åi_t
 
typ_∑th
(
rmfs_∑øm_t
 *);

19 
åi_t
 
typ_fûe
(
rmfs_∑øm_t
 *);

20 
åi_t
 
typ_fûexi°
(
rmfs_∑øm_t
 *);

21 
åi_t
 
typ_dúexi°
(
rmfs_∑øm_t
 *);

22 
åi_t
 
typ_dú
(
rmfs_∑øm_t
 *);

23 
åi_t
 
typ_ho°
(
rmfs_∑øm_t
 *);

24 
åi_t
 
typ_numîic
(
rmfs_∑øm_t
 *);

25 
åi_t
 
typ_numîi˘ime
(
rmfs_∑øm_t
 *);

26 
åi_t
 
typ_numtim£cs
(
rmfs_∑øm_t
 *);

27 
åi_t
 
typ_numsig√d
(
rmfs_∑øm_t
 *);

28 
åi_t
 
typ_unsig√d_öt
(
rmfs_∑øm_t
 *);

29 
åi_t
 
typ_unsig√d_öt16
(
rmfs_∑øm_t
 *);

30 
åi_t
 
typ_unsig√d_öt32
(
rmfs_∑øm_t
 *);

31 
åi_t
 
typ_åûíe
(
rmfs_∑øm_t
 *);

32 
åi_t
 
typ_boﬁón
(
rmfs_∑øm_t
 *);

33 
åi_t
 
typ_c⁄ãxt
(
rmfs_∑øm_t
 *);

35 
åi_t
 
typ_¶urm_˛u°î
(
rmfs_∑øm_t
 *);

36 
åi_t
 
typ_¶urm_c⁄åﬁmach
(
rmfs_∑øm_t
 *);

37 
åi_t
 
typ_¶urm_∑πôi⁄
(
rmfs_∑øm_t
 *);

38 
åi_t
 
typ_¶urm_node
(
rmfs_∑øm_t
 *);

39 
åi_t
 
typ_¶urm_job
(
rmfs_∑øm_t
 *);

40 
åi_t
 
typ_¶urm_°ï
(
rmfs_∑øm_t
 *);

41 
åi_t
 
typ_¶urm_Ælocjob
(
rmfs_∑øm_t
 *);

42 
åi_t
 
typ_¶urm_node°©e
(
rmfs_∑øm_t
 *);

49 
	$åi_t
 (*
∑øm_ty≥check_fun˘ab
[])(
rmfs_∑øm_t
 *) = {

50 
typ_Æways_Áûs
,

51 
typ_›aque
,

52 
typ_ißÕh™um
,

53 
typ_ißÕha
,

54 
typ_numîicch¨
,

55 
typ_Æways_Áûs
,

56 
typ_x©å
,

57 
typ_∑th
,

58 
typ_fûe
,

59 
typ_fûexi°
,

60 
typ_Æways_Áûs
,

61 
typ_dúexi°
,

62 
typ_dú
,

63 
typ_ho°
,

64 
typ_numîic
,

65 
typ_numîi˘ime
,

66 
typ_numtim£cs
,

67 
typ_numsig√d
,

68 
typ_unsig√d_öt
,

69 
typ_unsig√d_öt16
,

70 
typ_unsig√d_öt32
,

71 
typ_›aque
,

72 
typ_›aque
,

73 
typ_åûíe
,

74 
typ_boﬁón
,

75 
typ_Æways_Áûs
,

76 
typ_c⁄ãxt
,

77 
typ_¶urm_˛u°î
,

78 
typ_¶urm_c⁄åﬁmach
,

79 
typ_¶urm_∑πôi⁄
,

80 
typ_¶urm_node
,

81 
typ_¶urm_job
,

82 
typ_¶urm_°ï
,

83 
typ_¶urm_Ælocjob
,

84 
typ_¶urm_node°©e
,

85 
typ_numîic
,

86 
typ_numîic
,

87 
typ_numîic
,

88 
typ_Æways_Áûs
,

89 
typ_numîic
,

90 
typ_ißÕh™um_‹nul
,

91 
typ_ißÕh™um_‹nul
,

92 
typ_ißÕh™um
,

93 
typ_ißÕh™um
,

94 
NULL
,

95 
	}
};

	@lib/conf/typ/typ_truth.c

2 
	~"rmfs.h
"

4 
åi_t


5 
	$typ_åûíe
(
rmfs_∑øm_t
 *
p_vÆ
) {

7 i‡(!
p_vÆ
) {

8 
	`EºExô
(
EºExô_ASSERT
, "typ_trilene: !p_val");

9  
FALSE
;

12 i‡(
UNSET
 =
p_vÆ
->
ue
.
åuth
 ||

13 
FALSE
 =
p_vÆ
->
ue
.
åuth
 ||

14 
TRUE
 =
p_vÆ
->
ue
.
åuth
) {

15  
TRUE
;

17  
FALSE
;

18 
	}
}

20 
	såuth_hash
 {

21 *
	m°r
;

22 
åi_t
 
	måuth
;

23 
	mh
;

24 } 
	gåuth_hash_èb
[] =

26 { .
°r
 = "T", .
	gåuth
 = 
TRUE
, .
	gh
 = 0 },

27 { .
	g°r
 = "TRUE", .
	gåuth
 = 
TRUE
, .
	gh
 = 0 },

28 { .
	g°r
 = "t", .
	gåuth
 = 
TRUE
, .
	gh
 = 0 },

29 { .
	g°r
 = "åuth", .
	gåuth
 = 
TRUE
, .
	gh
 = 0 },

30 { .
	g°r
 = "1", .
	gåuth
 = 
TRUE
, .
	gh
 = 0 },

31 { .
	g°r
 = "£t", .
	gåuth
 = 
TRUE
, .
	gh
 = 0 },

32 { .
	g°r
 = "⁄", .
	gåuth
 = 
TRUE
, .
	gh
 = 0 },

34 { .
	g°r
 = "F", .
	gåuth
 = 
FALSE
, .
	gh
 = 0 },

35 { .
	g°r
 = "FALSE", .
	gåuth
 = 
FALSE
, .
	gh
 = 0 },

36 { .
	g°r
 = "f", .
	gåuth
 = 
FALSE
, .
	gh
 = 0 },

37 { .
	g°r
 = "Ál£", .
	gåuth
 = 
FALSE
, .
	gh
 = 0 },

38 { .
	g°r
 = "0", .
	gåuth
 = 
FALSE
, .
	gh
 = 0 },

39 { .
	g°r
 = "off", .
	gåuth
 = 
FALSE
, .
	gh
 = 0 },

40 { .
	g°r
 = "˛ór", .
	gåuth
 = 
FALSE
, .
	gh
 = 0 },

42 { .
	g°r
 = 
NULL
, .
	gåuth
 = 
UNSET
, .
	gh
 = ~0 }

45 
åi_t


46 
	$typ_boﬁón
(
rmfs_∑øm_t
 *
p_vÆ
) {

47 
åi_t
 
t
;

48 
h
;

49 
åuth_hash
 *
p_th
;

51 
t
 = 
UNSET
;

52 i‡(!
p_vÆ
) {

53 
	`EºExô
(
EºExô_ASSERT
, "typ_boolean: !p_val");

54  
t
;

56 
t
 = (
p_vÆ
->
ue
.
åuth
 =
FALSE
 ||Ö_vÆ->ue.åuth =
TRUE
);

57 i‡(
t
) {

58  
t
;

61 
p_th
 = &
åuth_hash_èb
[0];

62 
p_th
->
°r
 && 
t
 !
TRUE
 &&Å !
FALSE
;

63 
p_th
++) {

65 i‡(!
	`IS_VALID_HASH
(
p_th
->
h
)) {

66 
p_th
->
h
 = 
	`djb_°πohash
’_th->
°r
);

67 i‡(!
	`IS_VALID_HASH
(
p_th
->
h
)) {

68 
	`EºExô
(
EºExô_ASSERT
, "typ_boolean: djb_strtohash(truth_hash) !INVALID_HASH");

73 
h
 = 
	`djb_°πohash
(
p_vÆ
->
ue
.
°r
);

74 i‡(!
	`IS_VALID_HASH
(
h
)) {

75 
	`EºExô
(
EºExô_ASSERT
, "typ_boolean: INVALID_HASH(h)");

78 i‡(
p_th
->
h
 == h) {

79 
t
 = 
TRUE
;

80 
p_vÆ
->
ue
.
åuth
 = 
p_th
->truth;

83  
t
;

84 
	}
}

87 
	gåi2°r
[] = { "unset", "false", "true" };

89 
	gboﬁ2°r
[] = { "false", "true" };

92 
	$b2boﬁ°r
(
boﬁ_t
 
båuth
) {

93 
båuth
) {

94 
FALSE
:

95  
boﬁ2°r
[0];

97 
TRUE
:

98  
boﬁ2°r
[1];

101 
	`EºExô
(
EºExô_ASSERT
, "b2boolstr: booleanÜogic has > 2 states");

105 
	}
}

108 
	$t2åi°r
(
åi_t
 
åuth
) {

109 
åuth
) {

110 
UNSET
:

111  
åi2°r
[0];

113 
FALSE
:

114  
åi2°r
[1];

116 
TRUE
:

117  
åi2°r
[2];

120 
	`EºExô
(
EºExô_ASSERT
, "t2tristr:ÅrinaryÜogic has > 3 states");

124 
	}
}

	@lib/conf/typ/typ_xattr.c

2 
	~"rmfs.h
"

4 
åi_t


5 
	$typ_x©å
(
rmfs_∑øm_t
 *
p_vÆ
) {

6 *
p_c
;

7 
i
, 
l
;

9 i‡(!
p_vÆ
->
ue
.
°r
) {

10  
FALSE
;

12 
i
 = 0, 
l
 = 
p_vÆ
->
size
, 
p_c
 =Ö_vÆ->
ue
.
°r
; i <Ü &&Ö_c && *p_c; i++,Ö_c++) {

13 i‡(!
	`i•röt
(*
p_c
)) {

14  
FALSE
;

17  
TRUE
;

18 
	}
}

	@lib/fuseops/namer.c

2 
	~"rmfs.h
"

11 
∫ode_t
 *

12 
	$«mî
(c⁄° *
∑th
, 
∫ode_t
 *
p_lookup
, *
p_î∫o
) {

13 
∫ode_t
 *
p_m©ch
, *
p_f§oŸ
, *
p_chûd
;

14 *
n⁄_ãrmöÆ
, *
p_√xtc
, *
√ed‰ì
;

15 
h
, 
i
, 
¶ashes
;

16 
∫_∑øm_t
 
∫_∑ømèb
;

18 
n⁄_ãrmöÆ
 = 
NULL
;

19 
√ed‰ì
 = 
NULL
;

20 
p_m©ch
 = 
NULL
;

21 
p_√xtc
 = 
NULL
;

23 i‡(!
∑th
) {

24 
out
;

26 i‡(!
p_î∫o
) {

27 
out
;

29 *
p_î∫o
 = 0;

31 
p_f§oŸ
 = 
∫_∑ømèb
.p_fsroot;

32 i‡(!
p_f§oŸ
) {

33 *
p_î∫o
 = 
EFAULT
;

34 
out
;

36 i‡(!
p_lookup
) {

37 
p_lookup
 = 
p_f§oŸ
;

40 i‡(!(
p_√xtc
 = 
√ed‰ì
 = 
	`°rdup
(
∑th
))) {

41 *
p_î∫o
 = 
ENOMEM
;

42 
out
;

46 
¶ashes
 = 0; *
p_√xtc
 == '/';Ö_nextc++, slashes++) {

51 i‡(*
p_√xtc
 == '\0' || (*p_nextc == '.' && *(p_nextc+1) == '\0')) {

52 
p_m©ch
 = 
p_lookup
;

53 
out
;

55 i‡(*
p_√xtc
 == '.' && *(p_nextc+1) == '.' && *(p_nextc+2) == '\0') {

56 
p_m©ch
 = 
p_lookup
->
∑ª¡
;

57 
out
;

62 i‡(
NULL
 !(
n⁄_ãrmöÆ
 = 
	`°rchr
(
p_√xtc
, '/'))) {

63 
l
 = (
n⁄_ãrmöÆ
 - 
p_√xtc
);

64 
¶ashes
 +
l
;

65 *
n⁄_ãrmöÆ
 = '\0';

67 
h
 = 
	`djb_°πohash
(
p_√xtc
);

68 i‡(
h
 == 0 || h == ~0) {

69 *
p_î∫o
 = 
EFAULT
;

70 
out
;

73 i‡(!
p_lookup
->
is
.
dú
) {

74 i‡(
p_lookup
->
h
 == h) {

75 i‡(
n⁄_ãrmöÆ
) {

76 *
p_î∫o
 = 
ENOTDIR
;

77 
out
;

79 
p_m©ch
 = 
p_lookup
;

81 
out
;

85 i‡(
p_lookup
->
h
 == h) {

86 i‡(!
n⁄_ãrmöÆ
) {

87 
p_m©ch
 = 
p_lookup
;

88 
out
;

103 
p_m©ch
 = 
NULL
, 
p_chûd
 = 
p_lookup
->
chûdªn
, 
i
 = 0;

104 
i
 < 
p_lookup
->
n_chûdªn
;

105 
p_chûd
++, 
i
++) {

107 i‡(
p_m©ch
) {

110 i‡(*
p_î∫o
 != 0) {

113 i‡(!
p_chûd
) {

116 i‡(!
p_chûd
->
nm
) {

119 i‡(!
	`IS_VALID_HASH
(
p_chûd
->
h
)) {

122 i‡(!
	`IS_RTYPE_VALID
(
p_chûd
->
πy≥
)) {

125 i‡(
RN_GUARD
 =
p_chûd
->
πy≥
) {

129 i‡(
h
 =
p_chûd
->h) {

130 i‡(
p_chûd
->
is
.
dú
) {

135 
p_m©ch
 = 
	`«mî
((
∑th
 + 
¶ashes
), 
p_chûd
, 
p_î∫o
);

137 
p_m©ch
 = 
p_chûd
;

141 i‡(!
p_m©ch
) {

142 *
p_î∫o
 = 
ENOENT
;

145 
out
:

146 i‡(
√ed‰ì
) {

147 
	`‰ì
(
√ed‰ì
);

148 
√ed‰ì
 = 
NULL
;

150 i‡(
p_î∫o
 && *p_errno != 0) {

151  
NULL
;

154  
p_m©ch
;

155 
	}
}

	@lib/fuseops/rmfs_access.c

2 
	~"rmfs.h
"

12 
	$rmfs_ac˚ss
(c⁄° *
∑th
, 
mask
){

13 
∫ode_t
 *
p_∫
;

14 
î∫o
;

16 
∫ode_t
 *
	`«mî
(const *,Ñnode_t *, *);

17 
	`rmfs_mayac˚ss
(
∫ode_t
 *, *, 
fu£_fûe_öfo
 *);

19 i‡((
p_∫
 = 
	`«mî
(
∑th
, 
NULL
, &
î∫o
)) == NULL) {

20  
î∫o
 >0? -î∫o: -
ENOENT
;

23 i‡(
	`rmfs_mayac˚ss
(
p_∫
, &
î∫o
, 
NULL
) < 0) {

24  
î∫o
 >0? -î∫o: -
EPERM
;

28 
	}
}

	@lib/fuseops/rmfs_fuseops_tab.c

2 
	~"rmfs.h
"

8 
rmfs_ac˚ss
(const *, );

9 
rmfs_gë©å
(c⁄° *, 
°©
 *);

10 
rmfs_åunc
(c⁄° *, 
off_t
);

11 *
rmfs_öô
(
fu£_c⁄n_öfo
 *);

12 
rmfs_›í
(c⁄° *, 
fu£_fûe_öfo
 *);

13 
rmfs_ªad
(c⁄° *, *, 
size_t
, 
off_t
, 
fu£_fûe_öfo
 *);

14 
rmfs_ªaddú
(c⁄° *, *, 
fu£_fûl_dú_t
, 
off_t
, 
fu£_fûe_öfo
 *);

15 
rmfs_°©fs
(c⁄° *, 
°©vfs
 *);

16 
rmfs_wrôe
(c⁄° *, c⁄° *, 
size_t
, 
off_t
, 
fu£_fûe_öfo
 *);

17 
rmfs_gëx©å
(c⁄° *, c⁄° *, *, 
size_t
);

18 
rmfs_£tx©å
(c⁄° *, c⁄° *, c⁄° *, 
size_t
, );

19 
rmfs_li°x©å
(c⁄° *, *, 
size_t
);

20 
rmfs_pﬁl
(c⁄° *, 
fu£_fûe_öfo
 *, 
fu£_pﬁlh™dÀ
 *, *);

22 
fu£_›î©i⁄s
 
	grmfs_fûe_›s
 = {

23 .
ac˚ss
 = 
rmfs_ac˚ss
,

24 .
	ggë©å
 = 
rmfs_gë©å
,

25 .
	gåunˇã
 = 
rmfs_åunc
,

27 .
	göô
 = 
rmfs_öô
,

29 .
	g›í
 = 
rmfs_›í
,

30 .
	gªad
 = 
rmfs_ªad
,

31 .
	gªaddú
 = 
rmfs_ªaddú
,

33 .
	g°©fs
 = 
rmfs_°©fs
,

34 .
	gwrôe
 = 
rmfs_wrôe
,

36 .
	ggëx©å
 = 
rmfs_gëx©å
,

37 .
	g£tx©å
 = 
rmfs_£tx©å
,

38 .
	gli°x©å
 = 
rmfs_li°x©å
,

40 .
	gpﬁl
 = 
rmfs_pﬁl
,

	@lib/fuseops/rmfs_getattr.c

2 
	~"rmfs.h
"

5 
	$rmfs_gë©å
(c⁄° *
∑th
, 
°©
 *
°
){

6 
∫ode_t
 *
p_∫
;

7 
î∫o
;

8 
mode_t
 *
p_mode
;

9 
c⁄fig_∑øm_t
 *
p_˝
;

11 
∫ode_t
 *
	`«mî
(const *,Ñnode_t *, *);

12 
	`rmfs_mayac˚ss
(
∫ode_t
 *, *, 
fu£_fûe_öfo
 *);

14 
	`mem£t
(
°
, 0, (
°©
));

15 
î∫o
 = 0;

17 i‡((
p_∫
 = 
	`«mî
(
∑th
, 
NULL
, &
î∫o
)) == NULL) {

18  
î∫o
 >0? -î∫o: -
ENOENT
;

21 
°
->
°_dev
 = 
	`gë_∫∑øm_fsid
();

22 
°
->
°_öo
 = 
p_∫
->
röo
;

23 
°
->
°_uid
 = 
p_∫
->
uid
;

24 
°
->
°_gid
 = 
p_∫
->
uid
;

25 
°
->
°_∆ök
 = 1;

26 
°
->
°_rdev
 = 0;

27 
°
->
°_©ime
 = 
p_∫
->
˘ime
;

28 
°
->
°_˘ime
 = 
p_∫
->
˘ime
;

29 
°
->
°_mtime
 = 
p_∫
->
˘ime
;

30 
°
->
°_blksize
 = (
∫ode_t
);

31 
°
->
°_blocks
 = 1 + 
p_∫
->
n_chûdªn
;

32 
°
->
°_size
 = 0;

33 
p_˝
 = 
p_∫
->p_cp;

36 
p_mode
 = 
	`gë_∫∑øm_modï
();

37 i‡(
p_∫
->
is
.
dú
) {

38 
°
->
°_mode
 = 
S_IFDIR
 | 
p_mode
[
DEFMODE_DIR
];

39 
°
->
°_size
 = st->
°_∆ök
 * (
∫ode_t
);

40 
°
->
°_∆ök
 +1 + 
p_∫
->
n_chûdªn
;

46 i‡(
p_∫
->
maybe
.
c⁄åﬁœbÀ
) {

47 
°
->
°_mode
 |
S_ISVTX
;

50 } i‡(
p_∫
->
is
.
fûe
) {

51 
°
->
°_mode
 = 
S_IFREG
 | 
p_mode
[
DEFMODE_FILE
];

53 i‡(
p_˝
 &&Ö_˝->
vÆ
.
size
 > 0 &&Ö_˝->vÆ.sizê!
CP_UNK_SIZE
) {

54 
°
->
°_size
 = 
p_∫
->
p_˝
->
vÆ
.
size
;

57 i‡(
p_∫
->
maybe
.
wrôabÀ
) {

58 
°
->
°_mode
 |
S_IWUSR
;

66 i‡(
p_∫
->
maybe
.
c⁄åﬁœbÀ
) {

67 
°
->
°_mode
 |
S_IRUSR
 | 
S_IWUSR
 | 
S_IXUSR
;

69 } i‡(
p_∫
->
is
.
lök
) {

71 
°
->
°_size
 = 0;

72 i‡(
p_∫
->
p_˝
 &&Ö_∫->p_˝->
vÆ
.
ue
.
°r
) {

73 
°
->
°_size
 = 
	`öã∫Æ_°æí
(
p_∫
->
p_˝
->
vÆ
.
ue
.
°r
)+1;

75 
°
->
°_mode
 = 
S_IFLNK
 | 
S_IRUSR
;

79 
î∫o
 = 
EINVAL
;

81  -
î∫o
;

82 
	}
}

	@lib/fuseops/rmfs_init.c

2 
	~"rmfs.h
"

12 
	$rmfs_öô
(
fu£_c⁄n_öfo
 *
ign‹ed_fu£_c⁄n_öfo
){

13 
c⁄fig_∑øm_t
 *
p_fsid_˝
, *
p_vîsi⁄_˝
;

14 
∫_∑øm_t
 *
p_∫_∑ømèb
;

16 (Ë
ign‹ed_fu£_c⁄n_öfo
;

21 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

22 i‡(!
p_∫_∑ømèb
) {

23 
	`EºExô
(
EºExô_ASSERT
, "rmfs_init: !p_rn_paramtab");

24  
NULL
;

27 
p_fsid_˝
 = 
	`gëc⁄fig_‰omnm
("fsid");

28 i‡(!
p_fsid_˝
) {

29 
	`EºExô
(
EºExô_ASSERT
, "rmfs_init: !fsid");

30  
NULL
;

32 i‡(
p_∫_∑ømèb
->
fsid
) {

33 
	`EºExô
(
EºExô_ASSERT
, "rmfs_init: fsidálready set");

34  
NULL
;

36 i‡(!
	`IS_VALID_HASH
(
p_fsid_˝
->
h
)) {

37 
	`EºExô
(
EºExô_ASSERT
, "rmfs_init: invalid fsid hash");

38  
NULL
;

40 
p_∫_∑ømèb
->
fsid
 = 
p_fsid_˝
->
h
;

42 
p_vîsi⁄_˝
 = 
	`gëc⁄fig_‰omnm
("version");

43 i‡(!
p_vîsi⁄_˝
) {

44 
	`EºExô
(
EºExô_ASSERT
, "rmfs_init: !p_version_cp");

45  
NULL
;

47 i‡(
p_vîsi⁄_˝
->
vÆ
.
ue
.
ul
 == 0) {

48 
	`EºExô
(
EºExô_ASSERT
, "rmfs_init:Ö_version_cp->val.ue.ul = 0");

49  
NULL
;

51 i‡(0 =
p_∫_∑ømèb
->
vîsi⁄
) {

52 
p_∫_∑ømèb
->
vîsi⁄
 = 
p_vîsi⁄_˝
->
vÆ
.
ue
.
ul
;

54 
	`∫_∑ømèb_ªÀa£
();

56  
p_∫_∑ømèb
;

57 
	}
}

	@lib/fuseops/rmfs_mayaccess.c

2 
	~"rmfs.h
"

3 
∫ode_t
 *
«mî
(const *,Ñnode_t *, *);

10 
	$rmfs_mayac˚ss
(
∫ode_t
 *
p_∫
, *
p_î∫o
, 
fu£_fûe_öfo
 *
fi
) {

11 
uid_t
 
uid_di•©ch
;

12 
fu£_c⁄ãxt
 *
p_f˙txt
;

14 i‡(!
p_∫
) {

15 *
p_î∫o
 = 
EINVAL
;

19 i‡(!(
p_f˙txt
 = 
	`fu£_gë_c⁄ãxt
())) {

20 *
p_î∫o
 = 
ENXIO
;

24 
uid_di•©ch
 = 
∫_∑ømèb
.
rm_uid
[
RM_UID_DISPATCH
];

26 i‡(!
	`Debug
() &&

27 (
p_f˙txt
->
uid
 !
p_∫
->uid &&

28 
p_f˙txt
->
uid
 !
uid_di•©ch
 &&

29 
p_f˙txt
->
uid
 != 0

33 *
p_î∫o
 = 
EPERM
;

41 i‡(
fi
) {

42 
fi
->
Êags
 & 
O_ACCMODE
) {

43 
O_WRONLY
:

44 
O_RDWR
:

45 (
O_WRONLY
|
O_RDWR
):

46 i‡(!(
p_∫
->
maybe
.
wrôabÀ
 ||Ö_∫->maybe.
c⁄åﬁœbÀ
)) {

47 *
p_î∫o
 = 
EPERM
;

52 
O_RDONLY
:

53 i‡(!(
p_∫
->
maybe
.
ªadabÀ
)) {

54 *
p_î∫o
 = 
EPERM
;

61 
	}
}

	@lib/fuseops/rmfs_open.c

2 
	~"rmfs.h
"

5 
	$rmfs_›í
(c⁄° *
∑th
, 
fu£_fûe_öfo
 *
fi
) {

7 
∫ode_t
 *
p_∫
;

8 
î∫o
;

10 
∫ode_t
 *
	`«mî
(const *,Ñnode_t *, *);

11 
	`rmfs_mayac˚ss
(
∫ode_t
 *, *, 
fu£_fûe_öfo
 *);

13 
î∫o
 = 0;

15 i‡(!
∑th
) {

16  -
ENOENT
;

18 i‡(!
fi
) {

19  -
ENXIO
;

21 
fi
->
dúe˘_io
 = 
FALSE
;

22 
fi
->
kìp_ˇche
 = 
FALSE
;

23 
fi
->
n⁄£ekabÀ
 = 
TRUE
;

24 
fi
->
fh
 = -1;

25 
fi
->
lock_ow√r
 = -1;

27 i‡((
p_∫
 = 
	`«mî
(
∑th
, 
NULL
, &
î∫o
)) == NULL) {

28  
î∫o
 >0? -î∫o: -
ENOENT
;

31 i‡(
	`rmfs_mayac˚ss
(
p_∫
, &
î∫o
, 
fi
) < 0) {

32  
î∫o
 < 0?Érrno: -errno;

34  -
î∫o
;

35 
	}
}

	@lib/fuseops/rmfs_poll.c

2 
	~"rmfs.h
"

5 
	$rmfs_pﬁl
(c⁄° *
∑th
,

6 
fu£_fûe_öfo
 *
fi
,

7 
fu£_pﬁlh™dÀ
 *
ph
,

8 *
ªvít•
) {

10 
∫ode_t
 *
	`«mî
(const *,Ñnode_t *, *);

11 
	`rmfs_mayac˚ss
(
∫ode_t
 *, *, 
fu£_fûe_öfo
 *);

14 
	}
}

	@lib/fuseops/rmfs_read.c

2 
	~"rmfs.h
"

5 
	$rmfs_ªad
(c⁄° *
∑th
,

6 *
out
, 
size_t
 
size
, 
off_t
 
off£t
,

7 
fu£_fûe_öfo
 *
fi
) {

9 
î∫o
, 
l
;

10 
∫ode_t
 *
p_∫
;

12 
∫ode_t
 *
	`«mî
(const *,Ñnode_t *, *);

13 
	`rmfs_mayac˚ss
(
∫ode_t
 *, *, 
fu£_fûe_öfo
 *);

15 
l
 = 
î∫o
 = 0;

17 i‡(!
∑th
) {

18  -
ENOENT
;

21 i‡((
p_∫
 = 
	`«mî
(
∑th
, 
NULL
, &
î∫o
)) == NULL) {

22  
î∫o
 >0? -î∫o: -
ENOENT
;

25 i‡(!
p_∫
->
p_˝
) {

26  -
EFAULT
;

28 i‡(
p_∫
->
p_˝
->
vÆ
.
size
 =
CP_UNK_SIZE
) {

29  -
ERANGE
;

32 i‡(
	`rmfs_mayac˚ss
(
p_∫
, &
î∫o
, 
fi
) < 0) {

33  
î∫o
 < 0?Érrno: -errno;

39 i‡(
p_∫
->
p_˝
->
vÆ
.
size
 > size) {

40  
p_∫
->
p_˝
->
vÆ
.
size
+1;

42 
l
 = 
	`typ_c›yout
(
p_∫
->
p_˝
, 
out
, 
size
);

43  
l
;

44 
	}
}

	@lib/fuseops/rmfs_readdir.c

2 
	~"rmfs.h
"

4 
	#FILLSTAT_DEFAULT
 0

	)

5 
	#FILLSTAT_DOT
 1

	)

6 
	#FILLSTAT_DOTDOT
 2

	)

9 
	$rmfs_ªaddú_°©fûÀr
(
∫ode_t
 *
p_∫
, 
°©
 *
°
, 
Êag
) {

11 
mode_t
 *
p_mode
;

13 
	`mem£t
(
°
, 0, (
°©
));

14 
°
->
°_uid
 = 
p_∫
->
uid
;

15 
°
->
°_˘ime
 = 
p_∫
->
˘ime
;

16 
°
->
°_öo
 = 
p_∫
->
röo
;

17 
°
->
°_∆ök
 = 1;

18 
°
->
°_size
 = 0;

19 i‡(
p_∫
->
p_˝
 &&Ö_∫->p_˝->
vÆ
.
size
 !
CP_UNK_SIZE
) {

20 
°
->
°_size
 = 
p_∫
->
p_˝
->
vÆ
.
size
;

23 
p_mode
 = 
	`gë_∫∑øm_modï
();

24 i‡(
p_∫
->
is
.
dú
) {

25 
°
->
°_mode
 = 
S_IFDIR
 | 
p_mode
[
DEFMODE_DIR
];

27 } i‡(
p_∫
->
is
.
fûe
) {

28 
°
->
°_mode
 = 
S_IFREG
 | 
p_mode
[
DEFMODE_FILE
];

30 } i‡(
p_∫
->
is
.
lök
) {

31 
°
->
°_mode
 = 
S_IFLNK
 | 
p_mode
[
DEFMODE_FILE
];

37 i‡(
p_∫
->
maybe
.
wrôabÀ
) {

38 
°
->
°_mode
 |
S_IWUSR
;

40 i‡(
p_∫
->
maybe
.
c⁄åﬁœbÀ
) {

41 
°
->
°_mode
 |
S_IXUSR
 | 
S_IRUSR
;

44 i‡(
Êag
 =
FILLSTAT_DOT
) {

45 
°
->
°_∆ök
 +1 + 
p_∫
->
n_chûdªn
;

47 } i‡(
Êag
 =
FILLSTAT_DOTDOT
) {

48 i‡(!
p_∫
->
∑ª¡
) {

49 
	`EºExô
(
EºExô_WARN
, "rmfs_readdir_statfiller: FILLSTAT_DOTDOT: !p_rn->parent");

51 
°
->
°_∆ök
 +1 + 
p_∫
->
∑ª¡
->
n_chûdªn
;

55 
	}
}

58 
	$rmfs_ªaddú
(c⁄° *
∑th
,

59 *
buf
,

60 
fu£_fûl_dú_t
 
fûl‚
,

61 
off_t
 
ign‹ed_off
,

62 
fu£_fûe_öfo
 *
ign‹ed_fi
)

64 
∫ode_t
 *
p_∫
, *
p_chûd
;

65 
î∫o
;

66 
i
;

67 
°©
 
°
;

69 
∫ode_t
 *
	`«mî
(const *,Ñnode_t *, *);

70 
	`rmfs_mayac˚ss
(
∫ode_t
 *, *, 
fu£_fûe_öfo
 *);

72 
î∫o
 = 0;

73 (Ë
ign‹ed_off
;

74 (Ë
ign‹ed_fi
;

76 i‡((
p_∫
 = 
	`«mî
(
∑th
, 
NULL
, &
î∫o
)) == NULL) {

77  
î∫o
 >0? -î∫o: -
ENOENT
;

80 
	`rmfs_ªaddú_°©fûÀr
(
p_∫
, &
°
, 
FILLSTAT_DOT
);

81 i‡((
	`fûl‚
(
buf
, ".", &
°
, 0)) != 0) {

85 
	`rmfs_ªaddú_°©fûÀr
(
p_∫
, &
°
, 
FILLSTAT_DOTDOT
);

86 i‡((
	`fûl‚
(
buf
, "..", &
°
, 0)) != 0) {

90 
i
 = 0, 
p_chûd
 = 
p_∫
->
chûdªn
;

91 
i
 < 
p_∫
->
n_chûdªn
 && 
p_chûd
->
nm
;

92 
i
++, 
p_chûd
++) {

94 
	`rmfs_ªaddú_°©fûÀr
(
p_chûd
, &
°
, 
FILLSTAT_DEFAULT
);

95 i‡(
	`fûl‚
(
buf
, 
p_chûd
->
nm
, &
°
, 0) != 0) {

101 
	}
}

	@lib/fuseops/rmfs_statfs.c

2 
	~"rmfs.h
"

5 
	$rmfs_°©fs
(c⁄° *
∑th
, 
°©vfs
 *
°v
) {

7 
∫ode_t
 *
p_∫
;

8 
î∫o
;

9 *
p_maxÆloc
, *
p_ba£Æloc
, *
p_cuøŒoc
, *
p_fsid
;

10 
∫_∑øm_t
 *
p_∫_∑ømèb
;

12 
∫ode_t
 *
	`«mî
(const *,Ñnode_t *, *);

13 
	`rmfs_mayac˚ss
(
∫ode_t
 *, *, 
fu£_fûe_öfo
 *);

16 
	`mem£t
(
°v
, 0, (
°©vfs
));

17 
î∫o
 = 0;

19 i‡((
p_∫
 = 
	`«mî
(
∑th
, 
NULL
, &
î∫o
)) == NULL) {

20  
î∫o
 >0? -î∫o: -
ENOENT
;

23 
°v
->
f_bsize
 = (
∫ode_t
);

24 
°v
->
f_‰size
 = 0;

26 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

27 i‡(!
p_∫_∑ømèb
) {

28  
FALSE
;

30 
p_maxÆloc
 = &
p_∫_∑ømèb
->
∫_maxÆloc
;

31 
p_ba£Æloc
 = &
p_∫_∑ømèb
->
∫_ba£Æloc
;

32 
p_cuøŒoc
 = &
p_∫_∑ømèb
->
∫_cuøŒoc
;

33 
p_fsid
 = &
p_∫_∑ømèb
->
fsid
;

34 
	`∫_∑ømèb_ªÀa£
();

37 
°v
->
f_blocks
 = *
p_maxÆloc
;

38 
°v
->
f_b‰ì
 = *
p_maxÆloc
 - *
p_cuøŒoc
;

39 
°v
->
f_bavaû
 = *
p_maxÆloc
 - *
p_cuøŒoc
 - *
p_ba£Æloc
;

40 
°v
->
f_fûes
 = *
p_cuøŒoc
;

41 
°v
->
f_f‰ì
 = *
p_maxÆloc
 - *
p_cuøŒoc
;

42 
°v
->
f_Ávaû
 = *
p_maxÆloc
 - *
p_cuøŒoc
 - *
p_ba£Æloc
;

43 
°v
->
f_fsid
 = *
p_fsid
;

44 
°v
->
f_«memax
 = 
_POSIX_NAME_MAX
-1;

46  -
î∫o
;

47 
	}
}

	@lib/fuseops/rmfs_trunc.c

2 
	~"rmfs.h
"

5 
	$rmfs_åunc
(c⁄° *
∑th
, 
off_t
 
åunc_size
) {

6 
î∫o
;

7 
∫ode_t
 *
p_∫
;

8 
fu£_fûe_öfo
 
fi
;

10 
∫ode_t
 *
	`«mî
(const *,Ñnode_t *, *);

11 
	`rmfs_mayac˚ss
(
∫ode_t
 *, *, 
fu£_fûe_öfo
 *);

13 
î∫o
 = 0;

15 i‡(!
∑th
) {

16 
î∫o
 = -
ENOENT
;

17 
out
;

19 i‡(
åunc_size
 < 0) {

20 
î∫o
 = -
ENOMEM
;

21 
out
;

24 i‡((
p_∫
 = 
	`«mî
(
∑th
, 
NULL
, &
î∫o
)) == NULL) {

25 
î∫o
 =Éºnÿ>0? -î∫o: -
ENOENT
;

26 
out
;

29 i‡(
	`rmfs_mayac˚ss
(
p_∫
, &
î∫o
, &
fi
) < 0) {

30 
î∫o
 =Éºnÿ>0? -î∫o: -
EPERM
;

31 
out
;

46 
out
:

47  
î∫o
 !0?Éºno: 
åunc_size
;

48 
	}
}

	@lib/fuseops/rmfs_write.c

2 
	~"rmfs.h
"

5 
	$rmfs_wrôe
(c⁄° *
∑th
,

6 c⁄° *
ö
, 
size_t
 
size
, 
off_t
 
off£t
,

7 
fu£_fûe_öfo
 *
fi
) {

8 
î∫o
;

9 
	`boﬁ_t
 (*
p_˘l‚
)(
∫ode_t
 *, *);

10 
∫ode_t
 *
p_∫
;

11 
åi_t
 
tc
;

12 
c⁄fig_∑øm_t
 *
p_˝_backög°‹e
;

13 
c⁄fig_∑øm_t
 *
p_˝_v¨run
;

14 
c⁄fig_∑øm_t
 
˝_wrôe
;

16 
	`typ_c›yö
(
c⁄fig_∑øm_t
 *, *, 
size_t
);

17 
∫ode_t
 *
	`«mî
(const *,Ñnode_t *, *);

18 
	`rmfs_mayac˚ss
(
∫ode_t
 *, *, 
fu£_fûe_öfo
 *);

20 
î∫o
 = 0;

22 i‡(!
ö
) {

23 
î∫o
 = -
EIO
;

24 
out
;

27 i‡(!
∑th
) {

28 
î∫o
 = -
ENOENT
;

29 
out
;

31 i‡(
size
 <= 0) {

32 
î∫o
 = -
ENOMEM
;

33 
out
;

39 
p_˝_backög°‹e
 = 
	`gëc⁄fig_‰omnm
("BackingStore");

40 i‡(!
	`dîeÁbÀ_˝
(
p_˝_backög°‹e
)) {

41 
î∫o
 = -
EFAULT
;

42 
out
;

44 
p_˝_v¨run
 = 
	`gëc⁄fig_‰omnm
("varrun");

45 i‡(!
	`dîeÁbÀ_˝
(
p_˝_v¨run
)) {

46 
î∫o
 = -
EFAULT
;

47 
out
;

50 i‡((
p_∫
 = 
	`«mî
(
∑th
, 
NULL
, &
î∫o
)) == NULL) {

51 
î∫o
 =Éºnÿ>0? -î∫o: -
ENOENT
;

52 
out
;

55 i‡(
	`rmfs_mayac˚ss
(
p_∫
, &
î∫o
, 
fi
) < 0) {

56  
î∫o
 < 0?Érrno: -errno;

64 
tc
 = 
UNSET
;

66 
	`mem£t
(&
˝_wrôe
, 0, (
c⁄fig_∑øm_t
));

67 
˝_wrôe
.
vÆ
.
size
 = size;

68 
˝_wrôe
.
vÆ
.
ue
.
°r
 = (*Ë
ö
;

70 i‡(
RNF_KNOB
 =
p_∫
->
πy≥
) {

71 
p_˘l‚
 = (
	`boﬁ_t
 (*)(
∫ode_t
 *, *)Ë(
p_∫
->
p_dy¡yp
);

72 i‡(!
p_˘l‚
) {

73 
î∫o
 = -
ENXIO
;

74 
out
;

76 
tc
 = (*
p_˘l‚
)(
p_∫
, &
˝_wrôe
);

77 } i‡(
RNF_ATTRIBUTE
 =
p_∫
->
πy≥
 ||

78 
RNF_CONTEXT
 =
p_∫
->
πy≥


80 i‡(
	`typ_c›yö
(
p_∫
->
p_˝
, (*Ë
ö
, 
size
) < 0) {

81 
î∫o
 = -
EINVAL
;

82 
out
;

84 
	`∫_∑øm_adddúty
(
p_∫
);

86 i‡(
p_∫
->
maybe
.
wrôabÀ
) {

87 
	`EºExô
(
EºExô_ASSERT
, "rmfs_write: unhandled writableÇode");

88 
î∫o
 = -
EFAULT
;

89 
out
;

93 
out
:

94  
î∫o
 < 0?Éºno: 
size
;

95 
	}
}

	@lib/fuseops/rmfs_xattr.c

2 
	~"rmfs.h
"

5 
	$rmfs_gëx©å
(c⁄° *
∑th
,

6 c⁄° *
x©å_«me
,

7 *
x©å_out
,

8 
size_t
 
x©å_size
) {

10 
x©å_hash
;

11 
î∫o
, 
l
, 
i
;

12 
∫ode_t
 *
p_∫
;

13 
c⁄fig_∑øm_t
 *
p_˝_m©ch
, *
p_˝
;

15 
∫ode_t
 *
	`«mî
(const *,Ñnode_t *, *);

16 
	`rmfs_mayac˚ss
(
∫ode_t
 *, *, 
fu£_fûe_öfo
 *);

18 i‡(!
∑th
) {

19  -
ENOENT
;

21 i‡(!
x©å_«me
) {

22  -
ENOENT
;

25 i‡((
p_∫
 = 
	`«mî
(
∑th
, 
NULL
, &
î∫o
)) == NULL) {

26  
î∫o
 >0? -î∫o: -
ENOENT
;

29 i‡(
	`rmfs_mayac˚ss
(
p_∫
, &
î∫o
, 
NULL
) < 0) {

30  
î∫o
 < 0?Érrno: -errno;

33 
x©å_hash
 = 
	`djb_°πohash
((*Ë
x©å_«me
);

34 i‡(!
	`IS_VALID_HASH
(
x©å_hash
)) {

35  -
EINVAL
;

39 
i
 = 0, 
p_˝
 = 
p_∫
->
x©å
, 
p_˝_m©ch
 = 
NULL
;

40 
p_˝
 &&Ö_˝->
nm
 && !
p_˝_m©ch
 && 
i
 < 
p_∫
->
n_x©å
;

41 
i
++, 
p_˝
ı_˝->
p_nxt
) {

43 i‡(
	`°∫cmp
(
x©å_«me
, 
p_˝
->
nm
, 
	`öã∫Æ_°æí
(xattr_name)) == 0) {

44 
p_˝_m©ch
 = 
p_˝
;

47 i‡(!
p_˝_m©ch
) {

52 i‡(!
x©å_out
 || 
x©å_size
 < 
p_˝_m©ch
->
vÆ
.
size
) {

54 i‡(
p_˝_m©ch
->
vÆ
.
size
 <= 0) {

55  -
ENOMEM
;

57  
p_˝_m©ch
->
vÆ
.
size
;

60 
l
 = 
	`typ_c›yout
(
p_˝_m©ch
, 
x©å_out
, 
x©å_size
);

61  
l
;

62 
	}
}

65 
	$rmfs_£tx©å
(c⁄° *
∑th
,

66 c⁄° *
x©å_«me
,

67 c⁄° *
x©å_ö
,

68 
size_t
 
x©å_size
,

69 
Êags
) {

71 
∫ode_t
 *
p_∫
;

72 
î∫o
, 
l
;

73 
x©å_hash
, 
˘x_def_hash
;

74 
c⁄fig_∑øm_t
 *
p_˝
;

75 *
ö2
;

77 
∫ode_t
 *
	`«mî
(const *,Ñnode_t *, *);

78 
	`rmfs_mayac˚ss
(
∫ode_t
 *, *, 
fu£_fûe_öfo
 *);

80 i‡(!
∑th
) {

81  -
ENOENT
;

83 i‡(!
x©å_«me
) {

84  -
ENOENT
;

87 i‡((
p_∫
 = 
	`«mî
(
∑th
, 
NULL
, &
î∫o
)) == NULL) {

88  
î∫o
 >0? -î∫o: -
ENOENT
;

91 i‡(
	`rmfs_mayac˚ss
(
p_∫
, &
î∫o
, 
NULL
) < 0) {

92  
î∫o
 < 0?Érrno: -errno;

95 
x©å_hash
 = 
	`djb_°πohash
((*Ë
x©å_«me
);

96 i‡(!
	`IS_VALID_HASH
(
x©å_hash
)) {

97  -
EINVAL
;

100 
˘x_def_hash
 = 
	`djb_°πohash
(
CTX_XATTR_NM
);

101 i‡(!
	`IS_VALID_HASH
(
˘x_def_hash
)) {

102  -
EINVAL
;

106 i‡(
x©å_hash
 !
˘x_def_hash
) {

110 i‡(
	`IS_RTYPE_XATTRIBUTE
(
p_∫
->
πy≥
)) {

111 
p_˝
 = 
p_∫
->p_cp;

115 i‡(!
x©å_ö
 || 
x©å_size
 < 
p_˝
->
vÆ
.
size
) {

117 i‡(
p_˝
->
vÆ
.
size
 <= 0) {

118  -
ENOMEM
;

120  
p_˝
->
vÆ
.
size
;

122 
l
 = 
	`öã∫Æ_°æí
((*Ë
x©å_ö
);

123 i‡(
l
 > 0) {

124 
l
 += 1;

126 
ö2
 = 
	`°rdup
(
x©å_ö
);

127 i‡(!
ö2
) {

128  -
EFAULT
;

130 
p_˝
->
vÆ
.
ue
.
°r
 = 
ö2
;

131 
p_˝
->
vÆ
.
size
 = 
l
;

135  
l
;

136 
	}
}

139 
	$rmfs_li°x©å
(c⁄° *
∑th
,

140 *
li°
,

141 
size_t
 
size
) {

143 
∫ode_t
 *
p_∫
;

144 
c⁄fig_∑øm_t
 *
p_x©å
;

145 
size_t
 
size_ªqd
;

146 
byãs_c›õd
, 
i
, 
l
;

147 *
p_li°
;

149 
∫ode_t
 *
	`«mî
(const *,Ñnode_t *, *);

150 
	`rmfs_mayac˚ss
(
∫ode_t
 *, *, 
fu£_fûe_öfo
 *);

152 i‡(!
∑th
) {

153  -
ENOENT
;

156 i‡((
p_∫
 = 
	`«mî
(
∑th
, 
NULL
, &
î∫o
)) == NULL) {

157  
î∫o
 >0? -î∫o: -
ENOENT
;

160 i‡(
	`rmfs_mayac˚ss
(
p_∫
, &
î∫o
, 
NULL
) < 0) {

161  
î∫o
 < 0?Érrno: -errno;

164 i‡(!
p_∫
->
x©å
 || 0 =p_∫->
n_x©å
) {

168 
size_ªqd
 = 
i
 = 0, 
p_x©å
 = 
p_∫
->
x©å
;

169 
i
 < 
p_∫
->
n_x©å
;

170 
p_x©å
 =Ö_x©å->
p_nxt
, 
i
++) {

172 i‡(!
	`IS_XATTR_TYPE
(
p_x©å
->
typ
)) {

175 i‡(!
p_x©å
->
nm
) {

179 
l
 = 
	`öã∫Æ_°æí
(
p_x©å
->
nm
);

180 i‡(
l
 < 0) {

181  -
EFAULT
;

183 
size_ªqd
 +
l
 + 1;

186 i‡(
size_ªqd
 > 
size
) {

187  
size_ªqd
;

190 i‡(!
li°
) {

191  -
ENOMEM
;

193 
p_li°
 = 
li°
;

194 
byãs_c›õd
 = 0;

196 i‡(
	`mem£t
(
li°
, 0, 
size
) !=Üist) {

197  -
EFAULT
;

200 
i
 = 0, 
p_x©å
 = 
p_∫
->
x©å
;

201 
i
 < 
p_∫
->
n_x©å
;

202 
p_x©å
 =Ö_x©å->
p_nxt
, 
i
++) {

204 i‡(!
	`IS_XATTR_TYPE
(
p_x©å
->
typ
)) {

207 i‡(!
p_x©å
->
nm
) {

210 
l
 = 
	`öã∫Æ_°æí
(
p_x©å
->
nm
);

211 i‡(
l
 < 0) {

212  -
EFAULT
;

214 i‡(
	`mem˝y
(
p_li°
, 
p_x©å
->
nm
, 
l
+1) !=Ö_list) {

215  -
EFAULT
;

217 
p_li°
 +
l
 + 1;

219 
byãs_c›õd
 = 
p_li°
 - 
li°
;

221 i‡(
byãs_c›õd
 !
size_ªqd
) {

222 
	`EºExô
(
EºExô_ASSERT
, "rmfs_listxattr: bytes_copied != size_reqd");

225  
byãs_c›õd
;

226 
	}
}

	@lib/rnode/rmfs_param.c

2 
	~"rmfs.h
"

11 
	gthe_∫_∑ømèb_lock
 = 0;

12 
∫_∑øm_t
 
	g∫_∑ømèb
 = { 0 };

15 
	$∫_∑ømèb_lock
() {

17 
the_∫_∑ømèb_lock
 += 1;

19 
	}
}

22 
	$∫_∑ømèb_ªÀa£
() {

32 
the_∫_∑ømèb_lock
 -= 1;

34 
	}
}

40 
∫_∑øm_t
 *

41 
	$gë_∫_∑øms
(
√edlock
) {

43 i‡(
√edlock
) {

44 
	`∫_∑ømèb_lock
();

46  &
∫_∑ømèb
;

47 
	}
}

52 
∫ode_t
 *

53 
	$£t_∫∑øm_∫
(
off_t
 
off£t
, 
∫ode_t
 *
p_√w
) {

54 
∫_∑øm_t
 *
p_∫_∑ømèb
;

55 
∫ode_t
 **
µ_∫
;

57 i‡(!
p_√w
) {

58  
NULL
;

61 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

62 i‡(!
p_∫_∑ømèb
) {

63  
NULL
;

65 
µ_∫
 = (
∫ode_t
 **Ë
p_∫_∑ømèb
 + 
off£t
;

66 *
µ_∫
 = 
p_√w
;

67 
	`∫_∑ømèb_ªÀa£
();

69  
p_√w
;

70 
	}
}

73 
	$£t_∫∑øm_time
(
off_t
 
off£t
, 
time_t
 
t
) {

74 
∫_∑øm_t
 *
p_∫_∑ømèb
;

75 
time_t
 *
±_off
;

77 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

78 i‡(!
p_∫_∑ømèb
) {

81 
±_off
 = (
time_t
 *Ë
p_∫_∑ømèb
 + 
off£t
;

82 *
±_off
 = 
t
;

83 
	`∫_∑ømèb_ªÀa£
();

85 
	}
}

88 
	$£t_∫∑øm_ul
(
off_t
 
off£t
, 
√w_vÆ
) {

89 
∫_∑øm_t
 *
p_∫_∑ømèb
;

90 *
p_off
;

92 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

93 i‡(!
p_∫_∑ømèb
) {

94 
	`EºExô
(
EºExô_INTERNAL
, "cannot obtainÖtr->rn_paramtab");

97 
p_off
 = (*Ë
p_∫_∑ømèb
 + 
off£t
;

98 *
p_off
 = 
√w_vÆ
;

99 
	`∫_∑ømèb_ªÀa£
();

101 
	}
}

103 
∫ode_t
 *

104 
	$gë_∫∑øm_f§oŸ
() {

105 
∫_∑øm_t
 *
p_∫_∑ømèb
;

106 
∫ode_t
 *
p_∫
;

108 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

109 i‡(!
p_∫_∑ømèb
) {

110  
FALSE
;

112 
p_∫
 = (
∫ode_t
 *Ë
p_∫_∑ømèb
 + 
	`off£tof
(
∫ode_∑øms
, 
p_f§oŸ
);

114 
	`∫_∑ømèb_ªÀa£
();

116  
p_∫
;

117 
	}
}

120 
∫ode_t
 *

121 
	$gë_∫∑øm_∫
(
off_t
 
off£t
) {

122 
∫_∑øm_t
 *
p_∫_∑ømèb
;

123 
∫ode_t
 *
p_∫
;

125 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

126 i‡(!
p_∫_∑ømèb
) {

127  
FALSE
;

129 
p_∫
 = (
∫ode_t
 *Ë(
p_∫_∑ømèb
 + 
off£t
);

130 
	`∫_∑ømèb_ªÀa£
();

132  
p_∫
;

133 
	}
}

136 
	$gë_∫∑øm_uÕ
(
off_t
 
off£t
) {

137 
∫_∑øm_t
 *
p_∫_∑ømèb
;

138 *
p_ul
;

140 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

141 i‡(!
p_∫_∑ømèb
) {

142  
FALSE
;

144 
p_ul
 = (*Ë
p_∫_∑ømèb
 + 
off£t
;

145 
	`∫_∑ømèb_ªÀa£
();

147  
p_ul
;

148 
	}
}

151 
	$gë_∫∑øm_ul
(
off_t
 
off£t
) {

152 
∫_∑øm_t
 *
p_∫_∑ømèb
;

153 
ul
, *
p_ul
;

155 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

156 i‡(!
p_∫_∑ømèb
) {

157  
FALSE
;

159 
p_ul
 = (*Ë
p_∫_∑ømèb
 + 
off£t
;

160 
	`∫_∑ømèb_ªÀa£
();

161 
ul
 = *
p_ul
;

163  
ul
;

164 
	}
}

166 
uid_t
 *

167 
	$gë_∫∑øm_uidp
(
off_t
 
off£t
) {

168 
∫_∑øm_t
 *
p_∫_∑ømèb
;

169 
uid_t
 *
p_uid
;

171 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

172 i‡(!
p_∫_∑ømèb
) {

173  
FALSE
;

175 
p_uid
 = (
uid_t
 *Ë(
p_∫_∑ømèb
 + 
off£t
);

176 
	`∫_∑ømèb_ªÀa£
();

178  
p_uid
;

179 
	}
}

181 
mode_t
 *

182 
	$gë_∫∑øm_modï
()

184 
∫_∑øm_t
 *
p_∫_∑ømèb
;

185 
mode_t
 *
p_mode
;

187 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

188 i‡(!
p_∫_∑ømèb
) {

189  
FALSE
;

191 
p_mode
 = &
p_∫_∑ømèb
->
def_mode
[0];

192 
	`∫_∑ømèb_ªÀa£
();

194  
p_mode
;

195 
	}
}

198 
	$gë_∫∑øm_fsid
()

200 
∫_∑øm_t
 *
p_∫_∑ømèb
;

201 
fsid
;

203 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

204 i‡(!
p_∫_∑ømèb
) {

205  
FALSE
;

207 
fsid
 = 
p_∫_∑ømèb
->fsid;

208 
	`∫_∑ømèb_ªÀa£
();

210  
fsid
;

211 
	}
}

214 
	$gë_∫∑øm_vîsi⁄
()

216 
∫_∑øm_t
 *
p_∫_∑ømèb
;

217 
vîsi⁄
;

219 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

220 i‡(!
p_∫_∑ømèb
) {

221  
FALSE
;

223 
vîsi⁄
 = 
p_∫_∑ømèb
->version;

224 
	`∫_∑ømèb_ªÀa£
();

226  
vîsi⁄
;

227 
	}
}

229 
mode_t
 *

230 
	$gë_∫∑øm_modï_off£t
(
off_t
 
off£t
) {

231 
∫_∑øm_t
 *
p_∫_∑ømèb
;

232 
mode_t
 *
p_mode
;

234 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

235 i‡(!
p_∫_∑ømèb
) {

236  
FALSE
;

238 
p_mode
 = (
mode_t
 *Ë(
p_∫_∑ømèb
 + 
off£t
);

239 
	`∫_∑ømèb_ªÀa£
();

241  
p_mode
;

242 
	}
}

248 
boﬁ_t


249 
	$∫_∑øm_adddúty
(
∫ode_t
 *
p_∫
) {

250 
∫_∑øm_t
 *
p_∫_∑ømèb
;

251 
∫ode_t
 *
p_dúty
;

253 i‡(!
p_∫
) {

254  
FALSE
;

256 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

257 i‡(!
p_∫_∑ømèb
) {

258  
FALSE
;

262 
p_dúty
 = 
p_∫_∑ømèb
->p_dirty;

263 
p_∫_∑ømèb
->
p_dúty
 = 
p_∫
;

264 
p_∫
->
nxt_dúty
 = 
p_dúty
;

267 
	`∫_∑ømèb_ªÀa£
();

268  
TRUE
;

269 
	}
}

276 
	$£t_∫∑øm_f§oŸ
(
∫ode_t
 *
p_√w_f§oŸ
) {

277 
∫_∑øm_t
 *
p_∫_∑ømèb
;

279 i‡(!
p_√w_f§oŸ
) {

280 
	`EºExô
(
EºExô_INTERNAL
, "set_rnparam_fsroot: !p_new_fsroot");

282 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

283 i‡(!
p_∫_∑ømèb
) {

284 
	`EºExô
(
EºExô_INTERNAL
, "set_rnparam_fsroot: !p_rn_paramtab");

287 i‡(
p_∫_∑ømèb
->
p_f§oŸ
) {

288 
	`EºExô
(
EºExô_WARN
, "set_rnparam_fsroot:Ñesetting fsroot");

290 
p_∫_∑ømèb
->
p_f§oŸ
 = 
p_√w_f§oŸ
;

291 
	`∫_∑ømèb_ªÀa£
();

293 
	}
}

300 
	$£t_∫∑øm_˙ame
(
∫ode_t
 *
p_√w_˙ame
) {

301 
∫_∑øm_t
 *
p_∫_∑ømèb
;

303 i‡(!
p_√w_˙ame
) {

304 
	`EºExô
(
EºExô_INTERNAL
, "set_rnparam_cname: !p_new_cname");

306 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

307 i‡(!
p_∫_∑ømèb
) {

308 
	`EºExô
(
EºExô_INTERNAL
, "set_rnparam_cname: !p_rn_paramtab");

311 i‡(
p_∫_∑ømèb
->
p_˙ame
) {

312 
	`EºExô
(
EºExô_WARN
, "set_rnparam_cname:Ñesetting cname");

314 
p_∫_∑ømèb
->
p_f§oŸ
 = 
p_√w_˙ame
;

315 
	`∫_∑ømèb_ªÀa£
();

317 
	}
}

324 
	$£t_∫∑øm_jobd
(
∫ode_t
 *
p_√w_jobd
) {

325 
∫_∑øm_t
 *
p_∫_∑ømèb
;

327 i‡(!
p_√w_jobd
) {

328 
	`EºExô
(
EºExô_INTERNAL
, "set_rnparam_fsroot: !p_new_jobd");

330 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

331 i‡(!
p_∫_∑ømèb
) {

332 
	`EºExô
(
EºExô_INTERNAL
, "set_rnparam_jobd: !p_rn_paramtab");

335 i‡(
p_∫_∑ømèb
->
p_jobd
) {

336 
	`EºExô
(
EºExô_WARN
, "set_rnparam_jobd:Ñesetting jobd");

338 
p_∫_∑ømèb
->
p_jobd
 = 
p_√w_jobd
;

339 
	`∫_∑ømèb_ªÀa£
();

341 
	}
}

	@lib/rnode/rn_README.c

	@lib/rnode/rn_alloc.c

2 
	~"rmfs.h
"

10 
	$bßŒoc
(
n
, 
size_t
 
size
) {

11 
	}
}

14 
åi_t


15 
	$bßŒoc_öô
(
c⁄fig_∑øm_t
 *
p_backög°‹e_˝
) {

16 
	}
}

18 
åi_t


19 
	$backög°‹e_vÆid
(
c⁄fig_∑øm_t
 *
p_backög°‹e_˝
) {

20 ...
d€s
 
backög°‹e
 
∑th«me
 
c⁄èöög
 
dú
 
exi°
? 
NO
 => 
FALSE


21 ...
d€s
 
¥evious
 
backög°‹e
 
exi°
? 
NO
 => 
skù
 
sub£quít
 
ã°s


22 ...
d€s
 
ô
 
have
 
a
 
size
 
of
 
n⁄
-
zîo
? 
YES
 => 
ÁŒthrough


24 
If
 
d€s
 
nŸ
 
exi°
, 
‹
 
is
 
zîo
 
Àngth


25 
ªöôülize
 
backög°‹e
 =>  
TRUE


27 
If
 
ô
 
d€s
 
exi°
, 
™d
 
has
 
n⁄
-
zîo
 
Àngth


28 
examöe
 
hódî
, 
c⁄fúmög
 
fõlds


29 
wÆk
 
Æloˇãd
 
	`poﬁ
(
s
), 
vÆid©ög
 
by
 
ty≥


30 
ty≥
 = 
∫ode
, 
vÆid©e
 
known
Åy≥, 
¥obably
 
RN_GUARD


31 
known
 & 
Æloˇãd
 
	`ty≥
 (!
RN_GUARD
Ë- 
ˇŒ
 
∫ode
-
ty≥
-
•ecific
 
	`vÆid©‹
()

32 
≥r
-
∫ode
-
ty≥
 
vÆid©‹
 
	`Áûs
(Ë- 
m¨k
 
as
 
unußbÀ


35 
	}
}

47 
	$∫_poﬁöô
() {

48 
n
;

49 
∫ode_t
 *
p_∫
;

50 *
p_Ælocm≠
;

51 
∫_∑øm_t
 *
p_∫_∑ømèb
;

52 
c⁄fig_∑øm_t
 *
¶urmu£r_˝
, *
¶urmdu£r_˝
, *
∫poﬁ_˝
;

53 
c⁄fig_∑øm_t
 *
backög°‹e_˝
;

54 (*
Æloˇt‹
)(, 
size_t
);

56 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

57 
Æloˇt‹
 = &
	`ˇŒoc
();

59 i‡(!
p_∫_∑ømèb
) {

60 
	`EºExô
(
EºExô_ENOMEM
, "rn_poolinit: !rn_paramtab");

62 i‡(
p_∫_∑ømèb
->
∫_poﬁ
) {

63 
	`∫_∑ømèb_ªÀa£
();

64 
	`EºExô
(
EºExô_WARN
, "rn_poolinit():Ñecalled");

68 
¶urmu£r_˝
 = 
	`gëc⁄fig_‰omnm
("SlurmUser");

69 
¶urmdu£r_˝
 = 
	`gëc⁄fig_‰omnm
("SlurmdUser");

70 
backög°‹e_˝
 = 
	`gëc⁄fig_‰omnm
("BackingStore");

71 i‡(!
¶urmu£r_˝
 || !
¶urmdu£r_˝
 || !
backög°‹e_˝
) {

72 
	`EºExô
(
EºExô_INTERNAL
, "rn_poolinit: !slurmuser | !slurmduser | !backingstore_cp");

76 
n
 = 
p_∫_∑ømèb
->
∫_möpoﬁsize
;

77 i‡(
p_∫_∑ømèb
->
∫_möpoﬁsize
 <
RNODEPOOL_DEFAULT_MINSIZE
) {

78 
p_∫_∑ømèb
->
∫_möpoﬁsize
 = 
n
 = 
RNODEPOOL_DEFAULT_MINSIZE
;

79 i‡((
∫poﬁ_˝
 = 
	`gëc⁄fig_‰omnm
("rnodepool"))) {

80 
∫poﬁ_˝
->
vÆ
.
ue
.
l
 = 
n
 * (
∫ode_t
);

83 i‡(
	`backög°‹e_vÆid
(
backög°‹e_˝
)) {

84 
Æloˇt‹
 = &
	`bßŒoc
();

87 i‡(!(
p_∫
 = (*
Æloˇt‹
)(
n
, (
∫ode_t
) *Ç))) {

88 
	`EºExô
(
EºExô_ENOMEM
, "rn_poolinit: calloc (rnode_pool) failed");

97 
p_∫_∑ømèb
->
∫_ba£Æloc
 = 
RN_BASEALLOC
;

98 
p_∫_∑ømèb
->
∫_maxÆloc
 =

99 
p_∫_∑ømèb
->
∫_möpoﬁsize
 -Ö_∫_∑ømèb->
∫_ba£Æloc
;

100 
p_∫_∑ømèb
->
∫_cuøŒoc
 = 0;

102 
p_∫_∑ømèb
->
rm_uid
[
RM_UID_CTL
] = 
¶urmu£r_˝
->
vÆ
.
ue
.
uid
;

103 
p_∫_∑ømèb
->
rm_uid
[
RM_UID_DISPATCH
] = 
¶urmdu£r_˝
->
vÆ
.
ue
.
uid
;

105 
p_∫_∑ømèb
->
def_mode
[
DEFMODE_FILE
] = 
S_IRUSR
 | 
S_IRGRP
;

106 
p_∫_∑ømèb
->
def_mode
[
DEFMODE_DIR
] = 
S_IRUSR
 | 
S_IXUSR
 | 
S_IRGRP
 | 
S_IXGRP
;

108 
p_∫_∑ømèb
->
∫_poﬁ
 = 
p_∫
;

109 
p_∫_∑ømèb
->
∫_Ælocm≠
 = 
p_Ælocm≠
;

111 
p_∫_∑ømèb
->
p_nxt_avaû_∫
 =

112 
p_∫_∑ømèb
->
∫_poﬁ
 +Ö_∫_∑ømèb->
∫_ba£Æloc
;

113 
p_∫_∑ømèb
->
nxt_avaû
 =Ö_∫_∑ømèb->
∫_ba£Æloc
;

115 
	`∫_∑ømèb_ªÀa£
();

117 
	}
}

123 
∫ode_t
 *

124 
	$∫_Æloc
(
ªque°ed
) {

125 
n
, 
¥ev_nxt_avaû
;

126 
∫ode_t
 *
p_∫
;

127 
∫_∑øm_t
 *
p_∫_∑ømèb
;

129 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
FALSE
);

131 i‡(!
p_∫_∑ømèb
) {

132 
	`EºExô
(
EºExô_ENOMEM
, "rn_alloc: !rn_paramtab");

135 i‡(
ªque°ed
 <= 0) {

136  
NULL
;

138 i‡(!
p_∫_∑ømèb
->
∫_poﬁ
) {

139 
	`∫_poﬁöô
();

143 i‡(
p_∫_∑ømèb
->
∫_cuøŒoc
 + 
ªque°ed
 >Ö_∫_∑ømèb->
∫_maxÆloc
) {

144 
	`EºExô
(
EºExô_ENOMEM
, "rn_alloc(pool sizeÉxceeded)");

151 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

152 
p_∫
 = 
p_∫_∑ømèb
->
p_nxt_avaû_∫
;

153 
¥ev_nxt_avaû
 = 
p_∫_∑ømèb
->
nxt_avaû
;

155 i‡(
	`mem£t
(
p_∫
, 
RN_INVALID
, (
∫ode_t
Ë* 
ªque°ed
) !=Ö_rn) {

156 
	`EºExô
(
EºExô_NOMEM
, "rn_alloc: memset");

157 
p_∫
 = 
NULL
;

158 
out
;

160 
n
 = 0;Ç < 
ªque°ed
;Ç++) {

161 
a
 = 
¥ev_nxt_avaû
 + 
n
;

163 i‡(
p_∫_∑ømèb
->
∫_Ælocm≠
[
a
] != 0) {

164 
	`EºExô
(
EºExô_ENOMEM
, "rn_alloc: duplicateállocation");

166 
p_∫_∑ømèb
->
∫_Ælocm≠
[
a
] = 1;

174 
p_∫_∑ømèb
->
nxt_avaû
++;

175 
p_∫_∑ømèb
->
∫_cuøŒoc
++;

176 
p_∫_∑ømèb
->
p_nxt_avaû_∫
++;

179 
out
:

180 
	`∫_∑ømèb_ªÀa£
();

181  
p_∫
;

182 
	}
}

191 
∫ode_t
 *

192 
	$∫_øze
(
∫ode_t
 *
p_∫
,Ñnode_à*
ign‹ed
) {

193 
ign‹ed
 = ignored;

196 
	`EºExô
(
EºExô_ASSERT
, "rn_raze: NOTIMPL");

197  
NULL
;

198 
	}
}

	@lib/rnode/rn_cast.c

1 
	~"rmfs.h
"

8 
∫ode_t
 *

9 
	$∫_ˇ°
(
∫ode_t
 *
p_√w
, 
∫_ty≥_t
 
πy≥
,

10 
c⁄fig_∑øm_t
 *
p_˝
, *
p_dy¡yp
, *
nm
,

11 
∫ode_t
 *
p_∑ª¡
,Ñnode_à*
p_chûdªn
, 
n_chûdªn
,

12 
∫ode_t
 *
p_©å
,Ñnode_à*
p_subdú
) {

14 
∫ode_t
 *
p_buût
, *
p_buûdèb_∫
, *
p_chûd
;

15 
c⁄fig_∑øm_t
 *
p_2˝
;

16 
n_Êags
, 
h
;

17 
åi_t
 
someAs£mblyRequúed
, 
nŸ_f§oŸ
;

19 
c⁄fig_∑øm_t
 *
	`mk©å_x©å_˘x
(
∫ode_t
 *, *);

21 
someAs£mblyRequúed
 = 
p_√w
->
gí
 == 0;

22 
nŸ_f§oŸ
 = 
πy≥
 !
RND_ROOT
;

24 
p_buûdèb_∫
 = &
∫ode_buûdèb
[
πy≥
];

26 i‡(!
p_buûdèb_∫
->
buûd‚
) {

27 
	`EºExô
(
EºExô_ASSERT
, "rn_cast: !buildfn");

28  
NULL
;

30 
p_√w
->
gí
++;

32 i‡(
p_√w
->
πy≥
 !=Ñtype) {

33 i‡(
someAs£mblyRequúed
) {

34 i‡(
RN_GUARD
 =
p_√w
->
πy≥
) {

35 
p_√w
->
πy≥
 =Ñtype;

37 
	`EºExô
(
EºExô_ASSERT
, "rn_cast:Ö_new->rtype !=Ñtype &&Ö_new->rtyp != RN_GUARD)");

39 } i‡(
	`IS_RTYPE_ATTRIBUTE
(
πy≥
Ë&& 
	`IS_RTYPE_ATTR_SUBTYPE
(
p_√w
->rtype)) {

40 
p_√w
->
πy≥
 =Ñtype;

43 
	`EºExô
(
EºExô_ASSERT
, "rn_cast:Ö_new->rtype overwrite");

44  
NULL
;

48 i‡(
p_˝
) {

49 
p_√w
->
p_˝
 = 
	`dup_˝
(p_cp);

51 } i‡(
p_˝
 =
CONFPARAM_MISSINGOK
) {

52 
p_√w
->
p_˝
 = 
CONFPARAM_MISSINGOK
;

54 } i‡(
p_˝
 =
CONFPARAM_REQUIRED
) {

61 i‡(
	`dîeÁbÀ_˝
(
p_˝
)) {

62 
p_2˝
 = 
p_˝
;

64 } i‡(
nm
) {

65 
p_2˝
 = 
	`gëc⁄fig_‰omnm
(
nm
);

66 i‡(!
p_2˝
) {

67 
p_2˝
 = 
	`gëc⁄fig_‰omnm
(
p_buûdèb_∫
->
nm
);

70 i‡(!
p_2˝
) {

71 
	`EºExô
(
EºExô_ASSERT
, "rn_cast:Ö_2cp");

72  
NULL
;

74 
p_√w
->
p_˝
 = 
	`dup_˝
(
p_2˝
);

75 i‡(!
p_√w
->
p_˝
) {

76 
	`EºExô
(
EºExô_ASSERT
, "rn_cast(p_new->p_cp)");

77  
NULL
;

80 
nm
 =Çm?Çm: 
p_buûdèb_∫
->nm;

81 
h
 = 
	`djb_°πohash
(
nm
);

83 i‡(
p_∑ª¡
 &&Ö_∑ª¡ !
p_√w
 && 
someAs£mblyRequúed
) {

84 
p_chûd
 = 
p_∑ª¡
->
chûdªn
;

85 
p_chûd
 &&Ö_chûd->
nm
 && 
	`IS_VALID_HASH
’_chûd->
h
);

86 
p_chûd
++) {

87 i‡(
h
 =
p_chûd
->h) {

88 
	`EºExô
(
EºExô_ASSERT
, "rn_cast: !twin");

89  
NULL
;

94 
p_√w
->
nm
 =Çm;

95 
p_√w
->
h
 = h;

96 
p_√w
->
p_dy¡yp
 =Ö_dyntyp;

98 
p_√w
->
∑ª¡
 = 
p_∑ª¡
;

99 
p_√w
->
chûdªn
 = 
p_chûdªn
;

100 
p_√w
->
n_chûdªn
 =Ç_children;

101 
p_√w
->
©å
 = 
p_©å
;

102 
p_√w
->
subdú
 = 
p_subdú
;

103 
p_√w
->
buûd‚
 = 
p_buûdèb_∫
->buildfn;

107 
p_√w
->
x©å
 = 
NULL
;

108 
p_√w
->
n_x©å
 = 0;

109 
p_√w
->
nxt_dúty
 = 
NULL
;

111 
p_√w
->
maybe
.
dúty
 = 
FALSE
;

112 
p_√w
->
maybe
.
c⁄åﬁœbÀ
 = 
p_buûdèb_∫
->maybe.controllable;

113 
p_√w
->
maybe
.
ªadabÀ
 = 
p_buûdèb_∫
->maybe.readable;

114 
p_√w
->
maybe
.
wrôabÀ
 = 
p_buûdèb_∫
->maybe.writable;

115 
p_√w
->
maybe
.
exeˇbÀ
 = 
p_buûdèb_∫
->maybe.execable;

116 
p_√w
->
maybe
.
nŸify
 = 
NULL
;

118 
p_√w
->
is
.
dú
 = 
p_buûdèb_∫
->is.dir;

119 
p_√w
->
is
.
fûe
 = 
p_buûdèb_∫
->is.file;

120 
p_√w
->
is
.
lök
 = 
p_buûdèb_∫
->is.link;

122 
n_Êags
 = 0;

123 i‡(
p_√w
->
is
.
dú
) {

124 
n_Êags
++;

126 i‡(
p_√w
->
is
.
fûe
) {

127 
n_Êags
++;

129 i‡(
p_√w
->
is
.
lök
) {

130 
	`EºExô
(
EºExô_ASSERT
, "rn_cast: symlinksÇot fully implemented yet");

131  
NULL
;

132 
n_Êags
++;

134 i‡(
n_Êags
 != 1) {

135 i‡(
n_Êags
 == 0) {

136 
	`EºExô
(
EºExô_ASSERT
, "rn_cast: unknown fileÅypes");

138 
	`EºExô
(
EºExô_ASSERT
, "rn_cast: conflicting fileÅypes");

140  
NULL
;

143 i‡(
	`IS_RTYPE_CONTROL
(
p_buûdèb_∫
->
˘l
[0].
πy≥
)) {

144 
p_√w
->
maybe
.
c⁄åﬁœbÀ
 = 
TRUE
;

146 i‡(
	`mem˝y
 (
p_√w
->
˘l
, 
p_buûdèb_∫
->˘l, ((
∫_˘l_t
)*
MAX_RN_CMDS
)) !=Ö_new->ctl) {

147 
	`EºExô
(
EºExô_ASSERT
, "rn_cast: memcpy(ctl) failed");

148  
NULL
;

152 i‡(
	`mem£t
(
p_√w
->
˘l
, 0, ((
∫_˘l_t
)*
MAX_RN_CMDS
)) !=Ö_new->ctl) {

153 
	`EºExô
(
EºExô_ASSERT
, "rn_cast: memcpy(ctl) failed");

154  
NULL
;

158 
p_buût
 = 
p_√w
;

160 i‡(
someAs£mblyRequúed
) {

161 i‡(
nŸ_f§oŸ
) {

162 
p_buût
 = (*
p_√w
->
buûd‚
)(
p_∑ª¡
,Ö_new);

166 i‡(!
	`mk©å_x©å_˘x
(
p_√w
, 
πy≥
 !
RND_JOBID
? 
CTX_DEFAULT
: 
CTX_JOBID_DEFAULT
)) {

167 
	`EºExô
(
EºExô_ASSERT
, "rn_cast: !mkattr_xattr_ctx(CTX_DEFAULT)");

168  
NULL
;

171  
p_buût
;

172 
	}
}

178 
∫ode_t
 *

179 
	$∫_ˇ°_©å_typc⁄v
(
∫ode_t
 *
p_√w
, 
±yp_t
 
±yp
,

180 
c⁄fig_∑øm_t
 *
p_˝
, *
p_dy¡yp
, *
nm
,

181 
∫ode_t
 *
p_∑ª¡
,Ñnode_à*
p_chûdªn
, 
n_chûdªn
,

182 
∫ode_t
 *
p_©å
,Ñnode_à*
p_subdú
) {

184 
∫_ty≥_t
 
πyp
;

185 
i
;

186 
∫ode_t
 *
p_∫
;

189 i‡(
	`IS_SLURM_TYPE
(
±yp
)) {

190 
i
 = 
±yp
 - 
PTYP_SLURM_FIRST
;

191 i‡(
p2r_typ_rm_c⁄vèb
[
i
].
±yp
 !(ò+ 
PTYP_SLURM_FIRST
)) {

192 
	`EºExô
(
EºExô_INTERNAL
,

194  
NULL
;

199 i‡(
p2r_typ_c⁄vèb
[
±yp
].ptyp !=Ötyp) {

200 
	`EºExô
(
EºExô_ASSERT
, "rn_cast_attr_typconv:Ö2r_typ_convtab[ptyp].ptyp !=Ötyp");

201  
NULL
;

209 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

210 
	`EºExô
(
EºExô_ASSERT
, "WARNING:Ñn_cast_attr_typconv: !derefable_cp(p_cp)");

212 
p_˝
->
typ
 = 
±yp
;

220 i‡(
	`IS_SLURM_TYPE
(
±yp
)) {

221 
πyp
 = 
p2r_typ_rm_c⁄vèb
[(
±yp
-
PTYP_SLURM_FIRST
)].rtyp;

223 } i‡(
p2r_typ_c⁄vèb
[
±yp
].
πyp
 !
PTYP_NONE
) {

224 
πyp
 = 
p2r_typ_c⁄vèb
[
±yp
].rtyp;

227 
πyp
 = 
RNF_ATTRIBUTE
;

230 
p_∫
 = 
	`∫_ˇ°
(
p_√w
, 
πyp
, 
p_˝
, 
p_dy¡yp
, 
nm
,

231 
p_∑ª¡
, 
p_chûdªn
, 
n_chûdªn
,

232 
p_©å
, 
p_subdú
);

233  
p_∫
;

234 
	}
}

	@lib/rnode/rn_ctljobid.c

1 
	~"rmfs.h
"

8 
c⁄fig_∑øm_t


9 
	gjobid_sigdesc_èb
[] = {

10 { .
nm
="fsid", .
	g≥r_§c
.
	grmfs
 = { .
loˇl
=
TRUE
 }, },

11 { .
	gnm
="vîsi⁄", .
	g≥r_§c
.
	grmfs
 = { .
loˇl
=
TRUE
 }, },

12 { .
	gnm
="Clu°îName", .
	g≥r_§c
.
	grmfs
 = { .
loˇl
=
TRUE
 }, },

13 { .
	gnm
="job_id", .
	g≥r_§c
.
	grmfs
 = { .
fs
=
TRUE
, .
	g∑ª¡_ty≥
=
RND_JOBID
 }, },

14 { .
	gnm
="u£r_id", .
	g≥r_§c
.
	grmfs
 = { .
fs
=
TRUE
, .
	g∑ª¡_ty≥
=
RND_JOBID
 }, },

15 { .
	gnm
="submô_time", .
	g≥r_§c
.
	grmfs
 = { .
fs
=
TRUE
, .
	g∑ª¡_ty≥
=
RND_JOBID
 }, },

16 { .
	gnm
=
NULL
 }

19 
	$∫_gësig
(
∫ode_t
 *
p_∫
,Ñnode_à*
p_©åd
) {

20 
∫ode_t
 *
p_©åd
;

21 
c⁄fig_∑øm_t
 
sig_˝
, *
p_sig_˝
;

23 i‡(!
p_∫
) {

24 
	`EºExô
(
EºExô_ASSERT
, "rn_getsig: !p_rn");

25  
FALSE
;

27 i‡(!
p_©åd
) {

28 i‡(!
p_∫
->
©å
) {

29 
	`EºExô
(
EºExô_ASSERT
, "rn_getsig: !p_attrd && !p_rn->attr");

30  
FALSE
;

32 
p_©åd
 = 
p_∫
->
©å
;

35 
p_˝
 = 
jobid_sigdesc_èb
, 
√w_hash
 = 0;Ö_˝->
nm
;Ö_cp++) {

37 
p_˝_m©ch
 = 
NULL
;

38 i‡(
p_˝
->
≥r_§c
.
rmfs
.
loˇl
) {

39 
p_˝_m©ch
 = 
	`gëc⁄fig_‰omnm
(
p_˝
->
nm
);

41 } i‡(
p_˝
->
≥r_§c
.
rmfs
.
fs
) {

42 i‡(!
	`IS_RTYPE_VALID
(
p_˝
->
≥r_§c
.
rmfs
.
∑ª¡_ty≥
)) {

43 
	`EºExô
(
EºExô_ASSERT
, "rn_getsig: !invalid sig fieldÑnodeÅype");

44  
FALSE
;

46 i‡(
p_˝
->
≥r_§c
.
rmfs
.
∑ª¡_ty≥
 !
RND_JOBID
) {

47 
	`EºExô
(
EºExô_ASSERT
, "rn_getsig: !signatureÑnode field source");

48  
FALSE
;

50 
p_˝_m©ch
 = 
	`gëc⁄fig_‰om_my©ånm
(
p_©åd
, 
p_˝
->
nm
);

52 
√w_hash
 = 
	`djb_accumuœã
“ew_hash, 
p_˝_m©ch
->
vÆ
.
ue
.
i
);

54 
sig_˝
->
vÆ
.
ue
.
i
 = 
√w_hash
;

55 
	`öô_hash_˝
(&
sig_˝
);

57 
p_sig_˝
 = 
	`dup_˝
(&
sig_˝
);

58 i‡(!
p_sig_˝
) {

59 
	`EºExô
(
EºExô_ASSERT
, "rn_getsig: !dup_cp(sig_cp)");

60  
FALSE
;

62  
p_sig_˝
;

63 
	}
}

66 
åi_t


67 
	$∫_˘ljobid_sign
(
∫ode_t
 *
p_sig
, 
c⁄fig_∑øm_t
 *
p_sig_˝
) {

68 
c⁄fig_∑øm_t
 *
p_˝
, *
p_˝_m©ch
, *
p_sigx©å_˝
, *
p_sigtyp_˝
, *
p_2sigx©å_˝
, *
p_2sigtyp_˝
;

69 
∫ode_t
 *
p_©åd
, *
p_jobid
;

70 
√w_hash
;

71 
∫_∑øm_t
 *
p_∫_∑ømèb
;

72 
pbuf
[
_POSIX_PATH_MAX
];

74 
c⁄fig_∑øm_t
 *
	`gëc⁄fig_‰om_my©ånm
(
∫ode_t
 *, *);

76 
p_˝
 = 
p_˝_m©ch
 = 
p_sigtyp_˝
 = 
p_2sigx©å_˝
 = 
p_2sigtyp_˝
 = 
p_sigx©å_˝
 = 
NULL
;

78 i‡(!
p_sig
) {

79 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: !p_sig");

80  
FALSE
;

82 i‡(!
p_sig
->
∑ª¡
) {

83 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: !p_sig->parent");

84  
FALSE
;

86 i‡(!
	`IS_RTYPE_VALID
(
p_sig
->
∑ª¡
->
πy≥
)) {

87 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: !IS_RTYPE_VALID(p_sig->parent)");

88  
FALSE
;

90 
p_©åd
 = 
p_sig
->
∑ª¡
;

91 i‡(!
p_©åd
->
∑ª¡
) {

92 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: !p_attrd->parent");

93  
FALSE
;

95 i‡(!
	`IS_RTYPE_VALID
(
p_©åd
->
πy≥
)) {

96 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: !IS_RTYPE_VALID(p_attrd)");

97  
FALSE
;

99 
p_jobid
 = 
p_©åd
->
∑ª¡
;

100 i‡(!
	`IS_RTYPE_VALID
(
p_jobid
->
πy≥
)) {

101 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: !IS_RTYPE_VALID(p_jobid)");

102  
FALSE
;

104 i‡(
RND_JOBID
 !
p_jobid
->
πy≥
) {

105 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign:Ñtype !JOBID");

106  
FALSE
;

108 i‡(!
p_sig_˝
) {

109 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: !p_sig_cp");

110  
FALSE
;

113 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
FALSE
);

114 i‡(!
p_∫_∑ømèb
) {

115 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: !get_rn_params");

116  
FALSE
;

119 
p_˝
 = 
	`∫_gësig
(
p_jobid
, 
p_©åd
);

120 i‡(!
p_sig_˝
) {

121 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: !rn_getsig");

122  
FALSE
;

124 *
p_sig_˝
 = *
p_˝
;

127 
p_sigtyp_˝
 = 
	`dup_˝
(
p_sig_˝
);

128 i‡(!
p_sigtyp_˝
) {

129 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: dup_cp(\"p_cp\")");

130  
FALSE
;

133 
p_sigtyp_˝
->
nm
 = 
	`°rdup
(
XATTR_SIGTYP
);

134 i‡(!
p_sigtyp_˝
->
nm
) {

135 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: xattr sigtypÇm)");

136  
FALSE
;

139 i‡(
	`mem£t
(
pbuf
, 0, 
_POSIX_PATH_MAX
) !=Öbuf) {

140 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: !memset(\"xattr\" sigtype)");

141  
FALSE
;

143 i‡(
	`mem˝y
(
pbuf
, 
SIGTYP_DJBHASH
, 
	`öã∫Æ_°æí
(SIGTYP_DJBHASH)+1) !=Öbuf) {

144 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: !memcpy sigtyp DJBHASH");

145  
FALSE
;

148 
p_sigtyp_˝
->
typ
 = 
PTYP_XATTR
;

149 
	`£t_vÆ_ch¨±r
(
p_sigtyp_˝
, 
	`°rdup
(
pbuf
));

150 
	`öô_hash_˝
(
p_sigtyp_˝
);

153 
p_sigx©å_˝
 = 
	`dup_˝
(
p_sig_˝
);

154 
p_sigx©å_˝
->
nm
 = 
	`°rdup
(
XATTR_SIG
);

155 i‡(!
p_sigx©å_˝
->
nm
) {

156 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: strdup(\"XATTR_SIG\")");

157  
FALSE
;

160 i‡(
	`mem£t
(
pbuf
, 0, 
_POSIX_PATH_MAX
) !=Öbuf) {

161 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: !memset(\"xattr\" sig)");

162  
FALSE
;

164 i‡(
	`¢¥ötf
(
pbuf
, 
_POSIX_PATH_MAX
-1, "%0x", 
p_sig_˝
->
vÆ
.
ue
.
i
) < 0) {

165 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: !snprintf sig");

166  
FALSE
;

169 
p_sigx©å_˝
->
typ
 = 
PTYP_XATTR
;

170 
	`£t_vÆ_ch¨±r
(
p_sigx©å_˝
, 
	`°rdup
(
pbuf
));

171 
	`öô_hash_˝
(
p_sigx©å_˝
);

174 
p_2sigx©å_˝
 = 
	`dup_˝
(
p_sigx©å_˝
);

175 i‡(!
p_2sigx©å_˝
) {

176 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: dup_cp(\"p_sigxattr_cp\")");

177  
FALSE
;

180 
p_2sigtyp_˝
 = 
	`dup_˝
(
p_sigtyp_˝
);

181 i‡(!
p_2sigtyp_˝
) {

182 
	`EºExô
(
EºExô_ASSERT
, "ctljobid_sign: dup_cp(\"p_sigtyp_cp\")");

183  
FALSE
;

185 
	`öô_hash_˝
(
p_2sigx©å_˝
);

186 
	`öô_hash_˝
(
p_2sigtyp_˝
);

189 
	`lök_x©å2∫
(
p_jobid
, 
p_sigx©å_˝
);

190 
	`lök_x©å2∫
(
p_jobid
, 
p_sigtyp_˝
);

192 
	`lök_x©å2∫
(
p_sig
, 
p_2sigx©å_˝
);

193 
	`lök_x©å2∫
(
p_sig
, 
p_2sigtyp_˝
);

195  
TRUE
;

196 
	}
}

207 
åi_t


208 
	$∫_˘ljobid_ªad
(
∫ode_t
 *
p_∫
, 
c⁄fig_∑øm_t
 *
p_˝
) {

209  
FALSE
;

210 
	}
}

217 
åi_t


218 
	$∫_˘ljobid_wrôe
(
∫ode_t
 *
p_∫
, 
c⁄fig_∑øm_t
 *
p_˝
) {

219  
FALSE
;

220 
	}
}

231 
∫ode_t
 *

232 
	$∫_jobid_m©chloo£
(
uöt32_t
 
job_id
) {

233 
∫ode_t
 *
p_∫
, *
p_jobd
, *
p_m©ch
;

234 
i
;

235 
∫_∑øm_t
 *
p_∫_∑ømèb
;

245 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
FALSE
);

246 i‡(!
p_∫_∑ømèb
) {

247 
	`EºExô
(
EºExô_ASSERT
, "rn_jobid_addxattr: !get_rn_params");

248  
FALSE
;

250 
p_jobd
 = 
p_∫_∑ømèb
->p_jobd;

252 
p_∫
 = 
p_jobd
->
chûdªn
, 
i
 = 0, 
p_m©ch
 = 
NULL
;

253 !
p_m©ch
 &&

254 
i
 < 
p_jobd
->
n_chûdªn
 && 
p_∫
 && 
	`IS_RTYPE_VALID
’_∫->
πy≥
) &&

255 
p_∫
->
p_˝
 && 
	`IS_VALID_TYPE
’_∫->p_˝->
ty≥
);

256 
i
++, 
p_∫
++) {

258 i‡(
p_∫
->
p_˝
->
vÆ
.
ue
.
ui_32
 =
job_id
) {

259 
p_m©ch
 = 
p_∫
;

262  
p_m©ch
;

263 
	}
}

265 
åi_t


266 
	$∫_jobid_m©chsig
(
uöt32_t
 
job_id
, 
sig«tuª
) {

267 
∫ode_t
 *
p_∫
, *
p_©å
;

268 
s
;

270 i‡(!(
p_∫
 = 
	`∫_jobid_loo£m©ch
(
job_id
))) {

271  
FALSE
;

273 
s
 = 
	`∫_gësig
(
p_∫
,Ö_∫->
©å
);

277 i‡(!
	`IS_VALID_HASH
(
s
)) {

278 
	`EºExô
(
EºExô_ASSERT
, "rn_jobid_matchsig: !rn_getsig");

279  
FALSE
;

281 i‡(
s
 !
sig«tuª
) {

282  
FALSE
;

284  
TRUE
;

285 
	}
}

293 
åi_t


294 
	$∫_jobid_addx©å
(
uöt32_t
 
job_id
, *
x©å_nm
, *
x©å_vÆ
) {

295 
∫ode_t
 *
p_∫
, *
p_jobd
, *
p_m©ch
, 
p_˝_m©ch
;

296 
rmfs_∑øm_t
 
x©å
 = { 
NULL
 };

297 
∫_∑øm_t
 *
p_∫_∑ømèb
;

298 
i
;

300 i‡(
job_id
 == 0) {

301 
	`EºExô
(
EºExô_ASSERT
, "rn_jobid_addxattr(): implausible job_id");

302  
FALSE
;

304 i‡(!
x©å_nm
) {

305 
	`EºExô
(
EºExô_ASSERT
, "rn_jobid_addxattr(): !xattr_nm");

306  
FALSE
;

308 i‡(!
x©å_vÆ
) {

309 
	`EºExô
(
EºExô_ASSERT
, "rn_jobid_addxattr(): !xattr_val");

310  
FALSE
;

313 
x©å
.
±r
 = 
x©å_vÆ
;

314 i‡(!
	`typ_check
(
PTYP_XATTR
, &
x©å
)) {

315 
	`EºExô
(
EºExô_ASSERT
, "rn_jobid_addxattr(): !typ_check(xattr_val)");

316  
FALSE
;

319 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
FALSE
);

320 i‡(!
p_∫_∑ømèb
) {

321 
	`EºExô
(
EºExô_ASSERT
, "rn_jobid_addxattr: !get_rn_params");

322  
FALSE
;

324 
p_jobd
 = 
p_∫_∑ømèb
->p_jobd;

326 i‡(!(
p_m©ch
 = 
	`∫_jobid_m©chloo£
(
job_id
))) {

327 
	`EºExô
(
EºExô_ASSERT
, "rn_jobid_addxattr(): !rn_jobid_matchloose()");

328  
FALSE
;

331 
p_˝
 = 
p_˝_m©ch
 = 
NULL
; !p_˝_m©ch &&Ö_˝;Ö_˝ =Ö_˝->
nxt
) {

332 i‡(
	`°rcmp
(
p_˝
->
nm
, 
x©å_nm
) == 0) {

333 
p_˝_m©ch
 = 
p_˝
;

337 i‡(!
p_˝_m©ch
) {

338 
p_˝_√w
 = 
	`ˇŒoc
(1, (
c⁄fig_∑øm_t
));

339 i‡(!
p_˝_√w
) {

340 
	`EºExô
(
EºExô_ASSERT
, "rn_jobid_addxattr: calloc(!p_cp_new)");

341  
FALSE
;

343 
p_˝_√w
->
nm
 = 
	`°rdup
(
x©å_nm
);

344 i‡(!
p_˝_√w
->
nm
) {

345 
	`EºExô
(
EºExô_ASSERT
, "rn_jobid_addxattr: calloc(!p_cp_new->nm)");

346  
FALSE
;

348 
p_˝_√w
->
vÆ
.
ue
.
°r
 = 
	`°rdup
(
x©å_vÆ
);

349 i‡(!
p_˝_√w
->
vÆ
.
ue
.
°r
) {

350 
	`EºExô
(
EºExô_ASSERT
, "rn_jobid_addxattr: calloc(!p_cp_new->val.ue.str)");

351  
FALSE
;

353 
p_˝_√w
->
size
 = 
	`öã∫Æ_°æí
(
x©å_vÆ
);

355 
	`lök_x©å2∫
(
p_m©ch
, 
p_˝_√w
);

358 
p_˝_m©ch
->
vÆ
.
ue
.
°r
 = 
	`°rdup
(
x©å_vÆ
);

359 i‡(!
p_˝_m©ch
->
vÆ
.
ue
.
°r
) {

360 
	`EºExô
(
EºExô_ASSERT
, "rn_jobid_addxattr: calloc(!p_cp_match->val.ue.str)");

361  
FALSE
;

363 
p_˝_m©ch
->
size
 = 
	`öã∫Æ_°æí
(
x©å_vÆ
);

365  
TRUE
;

366 
	}
}

	@lib/rnode/rn_ctlroot.c

2 
	~"rmfs.h
"

10 
	$˛ónup_fûe
(
c⁄fig_∑øm_t
 *
p_˝
) {

12 i‡(!
p_˝
) {

16 i‡(
p_˝
->
vÆ
.
pd
.
f°r
) {

17 
	`fÊush
(
p_˝
->
vÆ
.
pd
.
f°r
);

18 
	`fsync
(
p_˝
->
vÆ
.
pd
.
fd
);

19 
	`f˛o£
(
p_˝
->
vÆ
.
pd
.
f°r
);

21 
p_˝
->
vÆ
.
pd
.
f°r
 = 
NULL
;

22 
p_˝
->
vÆ
.
pd
.
fd
 = -1;

25 i‡(
p_˝
->
vÆ
.
pd
.
fuŒ∑th
) {

26 
	`u∆ök
(
p_˝
->
vÆ
.
pd
.
fuŒ∑th
);

27 
	`‰ì
(
p_˝
->
vÆ
.
pd
.
fuŒ∑th
);

29 
p_˝
->
vÆ
.
pd
.
fuŒ∑th
 = 
NULL
;

32 
	}
}

35 
	$˛ónup
() {

36 
	`˛ónup_fûe
(
	`gëc⁄fig_‰omnm
("mountpointfile"));

37 
	`˛ónup_fûe
(
	`gëc⁄fig_‰omnm
("pidfile"));

39 
	}
}

41 
åi_t


42 
	$∫_˘ÃoŸ_umou¡
(
∫ode_t
 *
p_∫
, 
c⁄fig_∑øm_t
 *
p_˝
) {

44 i‡(!
p_∫
) {

45 
	`EºExô
(
EºExô_ASSERT
, "rn_ctlroot_umount: !p_rn");

46  
FALSE
;

50 
	`˛ónup
();

51  
TRUE
;

52 
	}
}

63 
	$efÊuvüã_⁄e_∫
(
∫ode_t
 *
p_∫
){

64 
∫ode_t
 *
p_chûd
;

65 
i
;

68 i‡(!
p_∫
) {

72 
	`Ârötf
(
°dîr
, "rnode: %ld\n\tgen:%d ctime:%ld uid:%d h:%ud\n",

73 
p_∫
->
röo
,

74 
p_∫
->
gí
,Ö_∫->
˘ime
,Ö_∫->
uid
,Ö_∫->
h
);

76 
	`Ârötf
(
°dîr
, "\tnm:\"%s\"Ñtyp:\"%s\" (%d)\tftype:\"%s\"\n",

77 
p_∫
->
nm
?Ö_rn->nm: "<?>",

78 
∫ode_buûdèb
[
p_∫
->
πy≥
].
nm
,Ö_rn->rtype,

79 
p_∫
->
is
.
dú
? "DIR":Ö_∫->is.
fûe
? "FILE": "<unset>");

81 
	`Ârötf
(
°dîr
, "\ä_chûdªn:%d", 
p_∫
->
n_chûdªn
);

82 i‡(
p_∫
->
n_chûdªn
 > 0) {

83 
	`Ârötf
(
°dîr
, "\n\tchildrenÑino:[");

84 
i
 = 0, 
p_chûd
 = 
p_∫
->
chûdªn
; i <Ö_∫->
n_chûdªn
; i++,Ö_child++) {

85 
	`Ârötf
(
°dîr
, "%ld%s", 
p_chûd
->
röo
, 
i
 < 
p_∫
->
n_chûdªn
-1? ",": "");

87 
	`Ârötf
(
°dîr
, "]\n\tchildren: ");

88 
i
=0, 
p_chûd
 = 
p_∫
->
chûdªn
; i <Ö_∫->
n_chûdªn
; i++,Ö_child++) {

89 
	`Ârötf
(
°dîr
, "%s%s", 
p_chûd
->
nm
?Ö_child->nm: "",

90 
i
 < 
p_∫
->
n_chûdªn
-1? ",": "");

93 
	`Ârötf
(
°dîr
, "\n");

95 i‡(!
	`dîeÁbÀ_˝
(
p_∫
->
p_˝
)) {

96 
	`Ârötf
(
°dîr
, "\ç_˝: uƒe„ªnˇbÀ: (%ld)\n", (Ë
p_∫
->
p_˝
);

98 
	`efÊuvüã_⁄e_˝
(
p_∫
->
p_˝
);

101 
	`Ârötf
(
°dîr
, "\ç¨ít->röo:%ld", 
p_∫
->
∑ª¡
?Ö_∫->∑ª¡->
röo
: ~0);

102 i‡(
p_∫
->
∑ª¡
) {

103 
	`Ârötf
(
°dîr
, " \"%s\"", 
p_∫
->
∑ª¡
->
nm
?Ö_rn->parent->nm: "<null>");

104 i‡(
p_∫
->
röo
 =p_∫->
∑ª¡
->rino) {

105 
	`Ârötf
(
°dîr
, " (self/fsroot)");

108 
	`Ârötf
(
°dîr
, "\n");

109 
	}
}

112 
	$efÊuvüã_∫ode
(
∫ode_t
 *
p_°¨t
, 
Àvñs_down
) {

113 
∫ode_t
 *
p_chûd
;

114 
i
;

116 i‡(!
p_°¨t
) {

119 
	`efÊuvüã_⁄e_∫
(
p_°¨t
);

120 i‡(
Àvñs_down
 < 0) {

123 
i
 = 0, 
p_chûd
 = 
p_°¨t
->
chûdªn
; i <Ö_°¨t->
n_chûdªn
; i++,Ö_child++) {

124 
	`efÊuvüã_⁄e_∫
(
p_chûd
);

126 
i
 = 0, 
p_chûd
 = 
p_°¨t
->
chûdªn
; i <Ö_°¨t->
n_chûdªn
; i++,Ö_child++) {

127 
	`efÊuvüã_∫ode
(
p_chûd
, 
Àvñs_down
-1);

130 
	}
}

134 
	$efÊuvüã_f°ªe
(
∫ode_t
 *
p_roŸ
, 
Àvñs_down
) {

135 
∫_∑øm_t
 *
p_∫_∑ømèb
;

137 i‡(!
p_roŸ
) {

138 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
FALSE
);

140 i‡(!
p_∫_∑ømèb
) {

141 
	`EºExô
(
EºExô_INTERNAL
, "effluviate_fstree: !rn_paramtab");

143 i‡(!
p_∫_∑ømèb
->
p_f§oŸ
) {

144 
	`EºExô
(
EºExô_INTERNAL
, "effluviate_fstree: !rn_paramtab->p_fsroot");

146 
	`∫_∑ømèb_ªÀa£
();

147 
p_roŸ
 = 
p_∫_∑ømèb
->
p_f§oŸ
;

149 
	`efÊuvüã_∫ode
(
p_roŸ
, 
Àvñs_down
);

150 
	`Ârötf
(
°dîr
, "---end of fstree.\n");

153 
	}
}

155 
åi_t


156 
	$∫_˘ÃoŸ_efÊuvüã
(
∫ode_t
 *
p_∫
, 
c⁄fig_∑øm_t
 *
p_˝
) {

158 i‡(!
p_∫
) {

159 
	`EºExô
(
EºExô_ASSERT
, "rn_ctlroot_effluviate: !p_rn");

160  
FALSE
;

162 
	`efÊuvüã_f°ªe
(
NULL
, 
INT_MAX
);

163  
TRUE
;

164 
	}
}

166 
åi_t


167 
	$∫_˘ÃoŸ_wrôe
(
∫ode_t
 *
p_∫
, 
c⁄fig_∑øm_t
 *
p_˝
) {

169 i‡(!
p_∫
) {

170 
	`EºExô
(
EºExô_ASSERT
, "rn_ctlroot_write: !p_rn");

171  
FALSE
;

174 i‡(!
	`isC¡æ
()) {

175  
FALSE
;

189 
	`wrôe_modifõd∫ode_toBackögSt‹e
();

190  
TRUE
;

191 
	}
}

195 
åi_t


196 
	$∫_˘ÃoŸ_check
(
∫ode_t
 *
p_∫
, 
c⁄fig_∑øm_t
 *
p_˝
) {

198 i‡(!
p_∫
) {

199 
	`EºExô
(
EºExô_ASSERT
, "rn_ctlroot_check: !p_rn");

200  
FALSE
;

205 
	`˛ónup
();

206  
TRUE
;

207 
	}
}

	@lib/rnode/rn_mkattr.c

1 
	~"rmfs.h
"

9 
∫ode_t
 *

10 
	$∫_mk©åd
(
∫ode_t
 *
p_∑ª¡
,Ñnode_à*
p_©åd
) {

11 
∫ode_t
 *
p_√w
, *
p_chûdªn
, *
p_∫
, *
p_©å
, *
p_∫èb
;

12 
∫ode_t
 
∫_¥o
;

13 
∫ode_t
 *(*
p_buûd‚
)(rnode_t *,Ñnode_t *);

14 
n_©å
, 
n_chûdªn
, 
i
;

15 
c⁄fig_∑øm_t
 *
p_èbÀ_˝
, *
p_˝
, *
p_2˝
;

16 
∫_ty≥_t
 
πy≥
;

17 *
nm
;

18 
c⁄fig_∑øm_t
 *
	`cﬁÀ˘¶urm_©å
(
∫_ty≥_t
, config_param_t *, *);

20 
∫ode_t
 *
	`∫_ˇ°
‘node_à*, 
∫_ty≥_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

21 
∫ode_t
 *
	`∫_ˇ°_©å_typc⁄v
‘node_à*, 
±yp_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

23 i‡(!
p_∑ª¡
) {

24 
	`EºExô
(
EºExô_ASSERT
, "rn_mkattrd: !p_parent");

25  
NULL
;

27 i‡(!
p_©åd
) {

28 
	`EºExô
(
EºExô_ASSERT
, "rn_mkattrd: !p_attrd");

29  
NULL
;

31 i‡(!
	`IS_RTYPE_VALID
(
p_∑ª¡
->
πy≥
)) {

32 
	`EºExô
(
EºExô_ASSERT
, "rn_mkattrd: !validÑtype");

33  
NULL
;

36 
πy≥
 = 
p_∑ª¡
->rtype;

37 
p_∫èb
 = &
∫ode_buûdèb
[
πy≥
];

38 i‡(!
p_∫èb
->
©å_desc
.
èbÀ
) {

39 
	`EºExô
(
EºExô_ASSERT
, "rn_mkattrd: !table forÑtype");

40  
NULL
;

43 
p_˝
 = 
p_∑ª¡
->p_cp;

44 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

45 
	`EºExô
(
EºExô_ASSERT
, "rn_mkattrd: !p_parent->p_cp");

46  
NULL
;

48 
p_èbÀ_˝
 = 
p_∫èb
->
©å_desc
.
èbÀ
;

49 
n_©å
 = 0, 
p_˝
 = 
p_èbÀ_˝
;

50 
p_˝
 &&Ö_˝->
nm
;

51 
p_˝
++) {

54 i‡(!
p_∫èb
->
©å_desc
.
is_möe
) {

55 
n_©å
++;

58 i‡((*
p_∫èb
->
©å_desc
.
is_möe
)(
p_˝
)) {

59 
n_©å
++;

63 
n_chûdªn
 = 
n_©å
;

65 i‡(
n_chûdªn
 <= 0) {

66 
	`EºExô
(
EºExô_WARN
, "rn_mkattrd:áttribute count = 0");

80 
p_buûd‚
 = 
∫ode_buûdèb
[
RN_PROVISION
].
buûd‚
;

81 
∫_¥o
.
n_chûdªn
 =Ç_children + 1;

82 i‡(!(
p_√w
 = (*
p_buûd‚
)(
p_∑ª¡
, &
∫_¥o
))) {

83 
	`EºExô
(
EºExô_ASSERT
, "rn_mknode: out of memory?Örovision failure");

84  
NULL
;

86 
p_chûdªn
 = 
p_©å
 = 
p_√w
;

95 
p_2˝
 = 
	`dup_˝
(
p_˝
);

96 
p_2˝
->
nm
 =Çm = 
	`°rdup
(
∫ode_buûdèb
[
RND_ATTRIBUTES
].nm);

97 
p_©åd
 = 
	`∫_ˇ°
’_©åd, 
RND_ATTRIBUTES
,

98 
p_2˝
, 
p_©åd
->
p_dy¡yp
, 
nm
,

99 
p_∑ª¡
, 
p_chûdªn
, 
n_chûdªn
,

100  
NULL
, NULL);

102 
i
 = 0, 
p_˝
 = 
p_èbÀ_˝
, 
p_∫
 = 
p_©å
;

103 
i
 < 
n_chûdªn
 && 
p_˝
 &&Ö_˝->
nm
;

104 
p_˝
++) {

107 i‡(
p_∫èb
->
©å_desc
.
is_möe
 && !(*p_∫èb->©å_desc.is_möe)(
p_˝
)) {

111 
p_2˝
 = 
	`dup_˝
(
p_˝
);

113 i‡(
p_˝
->
≥r_§c
.
¶urm
.
dy«mic
) {

114 i‡(!(
p_2˝
 = 
	`cﬁÀ˘¶urm_©å
(
πy≥
, 
p_˝
, 
p_©åd
->
p_dy¡yp
))) {

115 
	`EºExô
(
EºExô_ASSERT
, "rn_mkattrd: collectslurm_attr");

116  
NULL
;

120 
p_∫
 = 
	`∫_ˇ°_©å_typc⁄v
’_∫, 
p_2˝
->
typ
,

121 
p_2˝
, 
p_©åd
->
p_dy¡yp
,Ö_2˝->
nm
,

122 
p_©åd
, 
NULL
, 0,

123  
NULL
, NULL);

124 i‡(!
p_∫
) {

125 
	`EºExô
(
EºExô_ASSERT
, "mk_attrd:Ñn_cast_attr_typconv() = !p_rn");

126  
NULL
;

128 
p_∫
++; 
i
++;

130  
p_©åd
;

131 
	}
}

137 
∫ode_t
 *

138 
	$mk©å_knob
(
∫ode_t
 *
p_knob
) {

140 i‡(!
p_knob
) {

141  
NULL
;

143 i‡(!
p_knob
->
p_˝
) {

144  
NULL
;

146 
p_knob
->
p_˝
->
typ
 = 
PTYP_OPAQUE
;

147  
p_knob
;

148 
	}
}

157 
	gåi_t


158 (*
	$gë_∫_sign‚
(
∫ode_t
 *
p_w©ched
))‘node_à*, 
c⁄fig_∑øm_t
 *) {

159 
∫_˘l_t
 *
p_cmd
;

160 
	`åi_t
 (*
p_sign‚
)(
∫ode_t
 *, 
c⁄fig_∑øm_t
 *);

161 
i
, 
h
;

163 i‡(!
p_w©ched
) {

164 
	`EºExô
(
EºExô_ASSERT
, "get_rn_signfn: !p_watched");

165  
NULL
;

168 
h
 = 
	`djb_°πohash
("sign");

169 i‡(!
	`IS_VALID_HASH
(
h
)) {

170 
	`EºExô
(
EºExô_ASSERT
, "get_rn_signfn: !IS_VALID_HASH(\"sign\")");

171  
NULL
;

174 
p_sign‚
 = 
NULL
, 
p_cmd
 = 
p_w©ched
->
˘l
, 
i
 = 0;

175 !
p_sign‚
 && 
p_cmd
 &&Ö_cmd->
nm
 && 
i
 < 
MAX_RN_CMDS
;

176 
p_cmd
++, 
i
++) {

178 i‡(
p_cmd
->
πy≥
 !
RNF_SIGNATURE
) {

181 i‡(
	`djb_°πohash
(
p_cmd
->
nm
Ë!
h
) {

182 
	`EºExô
(
EºExô_ASSERT
, "get_rn_signfn: sig func hash mismatch");

183  
NULL
;

185 
p_sign‚
 = 
p_cmd
->
‚
;

188 i‡(!
p_sign‚
) {

189 
	`EºExô
(
EºExô_ASSERT
, "get_rn_signfn: !p_signfn found");

190  
NULL
;

192  
p_sign‚
;

193 
	}
}

195 
∫ode_t
 *

196 
	$mk©å_sig
(
∫ode_t
 *
p_sig
) {

197 
∫ode_t
 *
p_w©ched
;

198 
	`åi_t
 (*
p_sign_‚
)(
∫ode_t
 *, 
c⁄fig_∑øm_t
 *);

200 i‡(!
p_sig
) {

201 
	`EºExô
(
EºExô_ASSERT
, "mkattr_sig: !p_sig");

202  
NULL
;

214 i‡(!
p_sig
->
∑ª¡
 || !p_sig->parent->parent) {

215 
	`EºExô
(
EºExô_ASSERT
, "mkattr_sig: cannot findÖarentÅoÇotify");

216  
NULL
;

219 
p_w©ched
 = 
p_sig
->
∑ª¡
->parent;

220 
p_sign_‚
 = 
	`gë_∫_sign‚
(
p_w©ched
);

221 i‡(!
p_sign_‚
) {

222 
	`EºExô
(
EºExô_ASSERT
, "mkattr_sig:Ço sign control function");

223  
NULL
;

226 i‡(!
p_sig
->
p_˝
) {

227 
p_sig
->
p_˝
 = 
	`ˇŒoc
(1, (
c⁄fig_∑øm_t
));

228 i‡(!
p_sig
->
p_˝
) {

229 
	`EºExô
(
EºExô_ASSERT
, "mkattr_sig:Ö_cp_sigálloc failed");

230  
NULL
;

234 i‡(
TRUE
 !(*
p_sign_‚
)(
p_sig
,Ö_sig->
p_˝
)) {

235 
	`EºExô
(
EºExô_ASSERT
, "mkattr_sig: !p_sign_fn(p_sig,Ö_sig->p_cp)");

236  
NULL
;

239 
p_w©ched
->
sig«tuª
 = 
p_sig
;

240 
p_w©ched
->
maybe
.
dúty
 = 
TRUE
;

243 
p_sig
->
maybe
.
nŸify
 = 
p_w©ched
->maybe.notify;

244 
p_w©ched
->
maybe
.
nŸify
 = 
p_sig
;

246  
p_sig
;

247 
	}
}

254 
c⁄fig_∑øm_t
 *

255 
	$mk©å_x©å_˘x
(
∫ode_t
 *
p_∫
, *
˘x_°r
) {

256 
c⁄fig_∑øm_t
 *
p_˝_defc⁄ãxt
, *
p_˝_c⁄ãxt
, *
p_2˝
;

257 
l
, 
hash_jobid˘x
, 
hash_˘x
;

259 i‡(!
p_∫
) {

260 
	`EºExô
(
EºExô_ASSERT
, "mkattr_xattr_ctx: !p_rn");

261  
NULL
;

263 i‡(!
p_∫
->
∑ª¡
) {

264 
	`EºExô
(
EºExô_ASSERT
, "mkattr_xattr_ctx: !p_rn->parent");

265  
NULL
;

267 i‡(!
p_∫
->
∑ª¡
->parent) {

268 
	`EºExô
(
EºExô_ASSERT
, "mkattr_xattr_ctx: !p_rn->parent->parent");

269  
NULL
;

271 i‡(!
	`IS_RTYPE_VALID
(
p_∫
->
∑ª¡
->∑ª¡->
πy≥
)) {

272 
	`EºExô
(
EºExô_ASSERT
, "mkattr_xattr_ctx: !IS_VALID_RTYPE(p_rn->parent->parent)");

273  
NULL
;

287 
p_˝_defc⁄ãxt
 = 
	`gëc⁄fig_‰omnm
("DefContext");

288 
p_˝_c⁄ãxt
 = 
	`gëc⁄fig_‰omnm
("context");

290 i‡(!
p_˝_defc⁄ãxt
) {

291 
	`EºExô
(
EºExô_ASSERT
, "mkattr_xattr_ctx: RNF_CONTEXT !defcontext");

292  
NULL
;

295 i‡(
˘x_°r
) {

296 
p_2˝
 = 
	`dup_˝
(
p_˝_defc⁄ãxt
);

297 i‡(
p_2˝
) {

298 
p_2˝
->
nm
 = 
	`°rdup
(
CTX_XATTR_NM
);

299 
p_2˝
->
h
 = 0;

302 } i‡(
p_˝_c⁄ãxt
) {

303 
p_2˝
 = 
	`dup_˝
(
p_˝_c⁄ãxt
);

305 } i‡(
p_˝_defc⁄ãxt
) {

306 
p_2˝
 = 
	`dup_˝
(
p_˝_defc⁄ãxt
);

308 i‡(!
p_2˝
) {

309 
	`EºExô
(
EºExô_ASSERT
, "mkattr: !p_2cp");

310  
NULL
;

313 
	`öô_hash_˝
(
p_2˝
);

314 i‡(!
	`IS_VALID_HASH
(
p_2˝
->
h
)) {

315 
	`EºExô
(
EºExô_ASSERT
, "mkattr_xattr_ctx: !invalid hash(CTX_XATTR_NM)");

316  
NULL
;

319 
hash_jobid˘x
 = 
	`djb_°πohash
(
CTX_JOBID_DEFAULT
);

320 i‡(!
	`IS_VALID_HASH
(
hash_jobid˘x
)) {

321 
	`EºExô
(
EºExô_ASSERT
, "mkattr_xattr_ctx: !invalid hash(CTX_JOBID)");

322  
NULL
;

324 
hash_˘x
 = 
	`djb_°πohash
(
˘x_°r
);

325 i‡(!
	`IS_VALID_HASH
(
hash_˘x
)) {

326 
	`EºExô
(
EºExô_ASSERT
, "mkattr_xattr_ctx: !invalid hash(ctx_str)");

327  
NULL
;

330 i‡(
hash_˘x
 =
hash_jobid˘x
) {

331 i‡(
p_∫
->
πy≥
 =
RNF_ATTRIBUTE
 &&

332 (
p_∫
->
∑ª¡
->∑ª¡->
πy≥
 !
RND_JOBID
 &&Ö_∫->∑ª¡->∑ª¡->πy≥ !
RND_JOBSTEPID
)) {

333 
	`EºExô
(
EºExô_ASSERT
, "mkattr_xattr_ctx: jobid context but grandparent !RND_JOBID | RND_JOBSTEPID");

334  
NULL
;

338 
p_2˝
->
vÆ
.
ue
.
°r
 = 
	`°rdup
(
˘x_°r
);

339 i‡(!
p_2˝
->
vÆ
.
ue
.
°r
) {

340 
	`EºExô
(
EºExô_ASSERT
, "mkattr_xattr_ctx: !p_2cp->str");

341  
NULL
;

343 
l
 = 
	`öã∫Æ_°æí
(
p_2˝
->
vÆ
.
ue
.
°r
);

344 i‡(
l
 <= 0) {

345 
	`EºExô
(
EºExô_ASSERT
, "mkattr_xattr_ctx: !strlen(p_2cp->val.ue.str)");

346  
NULL
;

349 
p_2˝
->
vÆ
.
size
 = 
l
 + 1;

351 i‡(
p_∫
->
x©å
) {

352 
p_2˝
->
p_nxt
 = 
p_∫
->
x©å
;

354 
p_∫
->
x©å
 = 
p_2˝
;

355 
p_∫
->
n_x©å
 += 1;

358  
p_2˝
;

359 
	}
}

361 
∫ode_t
 *

362 
	$∫_mk©å
(
∫ode_t
 *
p_∑ª¡
,Ñnode_à*
p_©å
) {

363 
c⁄fig_∑øm_t
 *
p_˝
;

364 
∫ode_t
 *
p_∫
;

366 
∫ode_t
 *
	`∫_ˇ°
‘node_à*, 
∫_ty≥_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

367 
∫ode_t
 *
	`∫_ˇ°_©å_typc⁄v
‘node_à*, 
±yp_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

369 i‡(!
p_∑ª¡
) {

370 
	`EºExô
(
EºExô_ASSERT
, "rn_mkattr(NULLÖarent)");

371  
NULL
;

373 i‡(!
p_©å
) {

374 
	`EºExô
(
EºExô_ASSERT
, "rn_mkattr(NULLÖ_attr)");

375  
NULL
;

377 i‡(!
	`IS_RTYPE_ATTRIBUTE
(
p_©å
->
πy≥
)) {

378 
	`EºExô
(
EºExô_ASSERT
, "rn_mkattr:Ö_attr->rtype != IS_RTYPE_ATTRIBUTE");

379  
NULL
;

381 
p_˝
 = 
p_©å
->p_cp;

382 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

383 
	`EºExô
(
EºExô_ASSERT
, "mkattr: !p_cp");

384  
NULL
;

403 
p_∫
 = 
	`∫_ˇ°_©å_typc⁄v
(
p_©å
,Ö_©å->
p_˝
->
typ
,

404 
p_©å
->
p_˝
,Ö_©å->
p_dy¡yp
,Ö_©å->
nm
,

405 
p_∑ª¡
, 
p_©å
->
chûdªn
,Ö_©å->
n_chûdªn
,

406 
p_©å
->
©å
,Ö_©å->
subdú
);

407 i‡(!
p_∫
) {

408 
	`EºExô
(
EºExô_ASSERT
, "rn_mkattr:Ñn_cast_attr_typconv() = !p_rn");

409  
NULL
;

412 i‡(
RNF_KNOB
 =
p_©å
->
πy≥
) {

413 i‡(!
	`mk©å_knob
(
p_©å
)) {

414 
	`EºExô
(
EºExô_ASSERT
, "rn_mkattr: !mkattr_knob()");

415  
NULL
;

417 } i‡(
RNF_SIGNATURE
 =
p_©å
->
πy≥
) {

418 i‡(!
	`mk©å_sig
(
p_©å
)) {

419 
	`EºExô
(
EºExô_ASSERT
, "rn_mkattr: !mkattr_sig()");

420  
NULL
;

422 } i‡(
RNF_CONTEXT
 =
p_©å
->
πy≥
) {

423 *
p_˘x_°r
;

424 
c⁄fig_∑øm_t
 *
p_˝
;

429 
p_˘x_°r
 = (
RND_JOBID
 =
p_©å
->
∑ª¡
->∑ª¡->
πy≥
)? 
CTX_JOBID_DEFAULT
: 
CTX_DEFAULT
;

431 i‡(!(
p_˝
 = 
	`mk©å_x©å_˘x
(
p_©å
, 
p_˘x_°r
))) {

432 
	`EºExô
(
EºExô_ASSERT
, "rn_mkattr: !mkattr_xattr_ctx(RNF_CONTEXT)");

433  
NULL
;

435 
p_©å
->
p_˝
 =Ö_cp;

437 } i‡(
RNF_ATTRIBUTE
 =
p_©å
->
πy≥
) {

438 
h_jobid
 = 
	`djb_°πohash
("job_id");

440 i‡(!
	`IS_VALID_HASH
(
h_jobid
)) {

441 
	`EºExô
(
EºExô_ASSERT
, "rn_mkattr: RNF_ATTRIBUTE: job_id");

442  
NULL
;

444 i‡(
h_jobid
 =
p_©å
->
h
) {

445 i‡(!
	`mk©å_x©å_˘x
(
p_©å
, 
CTX_JOBID_DEFAULT
)) {

446 
	`EºExô
(
EºExô_ASSERT
, "rn_mkattr: !mkattr_xattr_ctx(RNF_ATTRIBUTE job_id)");

447  
NULL
;

454 
	`EºExô
(
EºExô_ASSERT
, "mkattr: unknownáttributeÅype");

455  
NULL
;

457  
p_©å
;

458 
	}
}

470 
c⁄fig_∑øm_t
 *

471 
	$gëc⁄fig_‰om_my©ånm
(
∫ode_t
 *
p_©åd
, *
©å_nm
) {

472 
©å_hash
, 
i
;

473 
∫ode_t
 *
p_∫
;

474 
c⁄fig_∑øm_t
 *
p_˝_m©ch
;

476 i‡(!
p_©åd
) {

477 
	`EºExô
(
EºExô_INTERNAL
, "getconfig_from_myattrnm: !p_attrd");

478  
NULL
;

480 i‡(!
©å_nm
) {

481 
	`EºExô
(
EºExô_INTERNAL
, "getconfig_from_myattrnm: !attr_nm");

482  
NULL
;

484 
©å_hash
 = 
	`djb_°πohash
(
©å_nm
);

485 i‡(!
	`IS_VALID_HASH
(
©å_hash
)) {

486 
	`EºExô
(
EºExô_INTERNAL
, "getconfig_from_myattrnm: !attr_hash");

487  
NULL
;

489 
p_˝_m©ch
 = 
NULL
;

490 
i
 = 0, 
p_∫
 = 
p_©åd
->
chûdªn
;

491 
i
 < 
p_©åd
->
n_chûdªn
 && !
p_˝_m©ch
;

492 
i
++, 
p_∫
++) {

494 i‡(!
	`IS_RTYPE_VALID
(
p_∫
->
πy≥
)) {

495 
	`EºExô
(
EºExô_ASSERT
, "getconfig_from_myattrnm:Ö_attrd contains malformedáttrÑn");

498 i‡(!
p_∫
->
p_˝
) {

499 
	`EºExô
(
EºExô_ASSERT
, "getconfig_from_myattrnm:Ö_attrdáttr with missingÖ_cp");

502 i‡(!(
	`IS_VALID_HASH
(
p_∫
->
p_˝
->
h
))) {

503 
	`EºExô
(
EºExô_ASSERT
, "getconfig_from_myattrnm:Ö_attrdáttr hash invalid");

506 i‡(
p_∫
->
p_˝
->
h
 =
©å_hash
) {

507 
p_˝_m©ch
 = 
p_∫
->
p_˝
;

510  
p_˝_m©ch
;

511 
	}
}

	@lib/rnode/rn_mkcname.c

1 
	~"rmfs.h
"

17 
åi_t


18 
	$is_˙ame_©å
(
c⁄fig_∑øm_t
 *
p_˝
) {

20 i‡(!
p_˝
) {

21  
FALSE
;

28 i‡(!
	`IS_SLURM_TYPE
(
p_˝
->
typ
)) {

29  
FALSE
;

31 i‡(
	`NOBITS
(
p_˝
->
§c
.
a˘uÆ
)) {

32  
FALSE
;

34 i‡(!
	`ISSET
(
p_˝
->
§c
.
a˘uÆ
, 
PSRC_SLURM
)) {

35  
FALSE
;

41 i‡(
p_˝
->
≥r_§c
.
¶urm
.
dy«mic
) {

42  
FALSE
;

44  
TRUE
;

45 
	}
}

47 
∫ode_t
 *

48 
	$∫_mk˙ame
(
∫ode_t
 *
p_f§oŸ
,Ñnode_à*
p_˛u°î
) {

49 
∫ode_t
 *
p_√w
, *
p_∑πôi⁄s
, *
p_jobs
, *
p_©å
;

50 
∫ode_t
 *
p_chûdªn
, *
p_©åd
, *
p_subdú
;

51 
∫ode_t
 *(*
p_buûd‚
)(rnode_t *,Ñnode_t *);

52 
∫ode_t
 
∫_¥o
;

53 
c⁄fig_∑øm_t
 *
p_˝
;

54 
n_chûdªn
, 
n_©å
;

55 
n_Æloc
;

57 
¶urm_˘l_c⁄f_t
 *
p_¶˙f
;

58 
	`©å_˙t_˝
(
∫_ty≥_t
);

59 
∫ode_t
 *
	`∫_ˇ°
‘node_à*, 
∫_ty≥_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

61 i‡(!
p_f§oŸ
) {

62 
	`EºExô
(
EºExô_ASSERT
, "rn_mkcname(NULLÖarentÖ_fsroot)");

63  
NULL
;

66 
n_chûdªn
 = 0;

67 
n_©å
 = 
	`©å_˙t_˝
(
RND_CLUSTER
);

68 i‡(
n_©å
 <= 0) {

69 
	`EºExô
(
EºExô_INTERNAL
, "rn_mkcname:áttribute count <= 0");

72 
n_chûdªn
 += 1;

73 
n_chûdªn
 += 1;

74 
n_chûdªn
 += 1;

75 
n_Æloc
 = 
n_chûdªn
;

77 i‡(!
p_˛u°î
) {

78 i‡(
p_f§oŸ
->
chûdªn
) {

79 
	`EºExô
(
EºExô_ASSERT
, "rn_mkcname: fsroot has childrenálready, but NULLÖ_cluster)");

80  
NULL
;

82 
	`EºExô
(
EºExô_ASSERT
, "rn_mkcname(NULLÖ_new)");

83  
NULL
;

95 
p_buûd‚
 = 
∫ode_buûdèb
[
RN_PROVISION
].
buûd‚
;

96 
∫_¥o
.
n_chûdªn
 = 
n_Æloc
 + 1;

97 i‡(!(
p_√w
 = (*
p_buûd‚
)(
p_f§oŸ
, &
∫_¥o
))) {

98 
	`EºExô
(
EºExô_ASSERT
, "rn_mkcname(provision failure)- out of memory?");

99  
NULL
;

101 
p_©åd
 = 
p_subdú
 = 
p_chûdªn
 = 
p_©å
 = 
p_√w
;

103 
p_˝
 = 
	`gëc⁄fig_‰omnm
(
∫ode_buûdèb
[
RND_CLUSTER
].
nm
);

107 
p_˛u°î
 = 
	`∫_ˇ°
’_˛u°î, 
RND_CLUSTER
,

108 
p_˝
, 
p_¶˙f
,Ö_˝->
vÆ
.
ue
.
°r
,

109 
p_f§oŸ
, 
p_chûdªn
, 
n_chûdªn
,

110 
p_©åd
, 
p_subdú
);

111 i‡(!
p_˛u°î
) {

112 
	`EºExô
(
EºExô_ASSERT
, "rn_mkcname: !p_cluster");

113  
NULL
;

135 
p_©åd
 = 
	`∫_ˇ°
’_©åd, 
RND_ATTRIBUTES
,

136 
CONFPARAM_MISSINGOK
, 
p_˛u°î
->
p_dy¡yp
,

137 
∫ode_buûdèb
[
RND_ATTRIBUTES
].
nm
,

138  
p_˛u°î
, 
NULL
, 0,

139  
NULL
, NULL);

140 i‡(!
p_©åd
) {

141 
	`EºExô
(
EºExô_ASSERT
, "rn_mkfsroot:Ñn_cast(attrd) NULL");

142  
NULL
;

145 
	`£t_∫∑øm_˙ame
(
p_˛u°î
);

151 
p_˝
 = 
	`gëc⁄fig_‰omnm
(
∫ode_buûdèb
[
RND_PARTITIONS
].
nm
);

152 i‡(!
p_˝
) {

153 
	`EºExô
(
EºExô_ASSERT
, "rn_mkcname: !p_cp RND_PARTITIONS");

154  
NULL
;

156 
p_∑πôi⁄s
 = 
	`∫_ˇ°
(
p_©åd
+1, 
RND_PARTITIONS
,

157 
p_˝
, 
NULL
,Ö_˝->
nm
,

158 
p_˛u°î
, 
NULL
, 0,

159  
NULL
, NULL);

160 i‡(!
p_∑πôi⁄s
) {

161 
	`EºExô
(
EºExô_ASSERT
, "rn_mkcname: !p_partitions");

162  
NULL
;

165 
p_˝
 = 
	`gëc⁄fig_‰omnm
(
∫ode_buûdèb
[
RND_JOBS
].
nm
);

166 i‡(!
p_˝
) {

167 
	`EºExô
(
EºExô_ASSERT
, "rn_mkcname: !p_cp RND_JOBS");

168  
NULL
;

170 
p_jobs
 = 
	`∫_ˇ°
(
p_∑πôi⁄s
+1, 
RND_JOBS
,

171 
p_˝
, 
NULL
,Ö_˝->
nm
,

172 
p_˛u°î
, 
NULL
, 0,

173  
NULL
, NULL);

174 i‡(!
p_jobs
) {

175 
	`EºExô
(
EºExô_ASSERT
, "rn_mkcname: !p_jobs");

176  
NULL
;

178  
p_˛u°î
;

179 
	}
}

	@lib/rnode/rn_mkctl.c

1 
	~"rmfs.h
"

17 
∫ode_t
 *

18 
	$∫_mk˘ld
(
∫ode_t
 *
p_∑ª¡
,Ñnode_à*
p_˘l
) {

19 
∫ode_t
 *
p_chûdªn
, *
p_cmdX
, *
p_√w
, *
p_©å
, *
p_∫
, *
p_subdú
;

20 
∫ode_t
 *(*
p_buûd‚
)(rnode_t *,Ñnode_t *);

21 
∫ode_t
 
∫_¥o
;

22 
∫_˘l_t
 *
p_˘l_cmd
;

23 
n_cmds
, 
i
;

24 
n_chûdªn
;

26 
∫ode_t
 *
	`∫_ˇ°
‘node_à*, 
∫_ty≥_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

28 i‡(!
p_∑ª¡
) {

29 
	`EºExô
(
EºExô_ASSERT
, "rn_mkctl(NULLÖarent)");

30  
NULL
;

33 
i
 = 0, 
n_cmds
 = 0; i < 
MAX_RN_CMDS
 && 
p_∑ª¡
->
˘l
[i].
nm
; i++) {

34 i‡(
p_∑ª¡
->
˘l
[
i
].
nm
) {

35 
n_cmds
++;

38 
n_chûdªn
 = 
n_cmds
;

48 
p_buûd‚
 = 
∫ode_buûdèb
[
RN_PROVISION
].
buûd‚
;

49 
∫_¥o
.
n_chûdªn
 =Ç_children + 1;

50 i‡(!(
p_√w
 = (*
p_buûd‚
)(
p_˘l
, &
∫_¥o
))) {

51 
	`EºExô
(
EºExô_ASSERT
, "rn_mkctl(provision failure)- out of memory?");

52  
NULL
;

54 
p_chûdªn
 = 
p_©å
 = 
p_subdú
 = 
p_√w
;

56 
p_˘l
 = 
	`∫_ˇ°
’_˘l, 
RND_CONTROL
,

57 
CONFPARAM_MISSINGOK
, 
NULL
,

58 
∫ode_buûdèb
[
RND_CONTROL
].
nm
,

59 
p_∑ª¡
, 
p_chûdªn
, 
n_chûdªn
,

60  
NULL
, 
p_subdú
);

74 
i
 = 0, 
p_∫
 = 
p_©å
, 
p_˘l_cmd
 = &
p_∑ª¡
->
˘l
[i];

75 
p_˘l_cmd
->
nm
;

76 
i
++, 
p_˘l_cmd
++

78 
c⁄fig_∑øm_t
 *
p_˝
;

80 i‡(!
p_˘l_cmd
->
nm
) {

81 
	`EºExô
(
EºExô_ASSERT
, "rn_mkctl: !p_ctl_cmd->nm");

82  
NULL
;

87 
p_˝
 = 
	`ˇŒoc
(1, (
c⁄fig_∑øm_t
));

88 i‡(!
p_˝
) {

89 
	`EºExô
(
EºExô_ENOMEM
, "rn_mkctl: !calloc(RNF_KNOB)");

90  
NULL
;

92 
p_˝
->
nm
 =Ö_˝->
vÆ
.
ue
.
°r
 = 
p_˘l_cmd
->nm;

93 
p_cmdX
 = 
	`∫_ˇ°
(
p_∫
, 
RNF_KNOB
,

94 
p_˝
, 
p_˘l_cmd
->
‚
,

95 
p_˘l_cmd
->
nm
,

96 
p_˘l
, 
NULL
, 0,

97  
NULL
, NULL);

99 i‡(!
p_cmdX
) {

100 
	`EºExô
(
EºExô_ASSERT
, "rn_mkctl: !p_rnÖostÑn_cast_attr_typconv() ");

101  
NULL
;

103 
p_∫
++;

105  
p_˘l
;

106 
	}
}

	@lib/rnode/rn_mkfsroot.c

1 
	~"rmfs.h
"

8 
åi_t


9 
	$is_f§oŸ_©å
(
c⁄fig_∑øm_t
 *
p_˝
) {

11 
roŸdú_hash
;

12 *
roŸdú_nm
;

14 i‡(!
p_˝
) {

15  
FALSE
;

18 
roŸdú_nm
 = 
∫ode_buûdèb
[
RND_ROOT
].
nm
;

19 
roŸdú_hash
 = 
	`djb_°πohash
(
roŸdú_nm
);

28 i‡(
roŸdú_hash
 =
p_˝
->
h
) {

29  
FALSE
;

31 i‡(
	`IS_SLURM_TYPE
(
p_˝
->
typ
)) {

32  
FALSE
;

34 i‡(
	`NOBITS
(
p_˝
->
§c
.
a˘uÆ
)) {

35  
FALSE
;

37 i‡(
	`ISSET
(
p_˝
->
§c
.
a˘uÆ
, 
PSRC_MNT
Ë|| ISSET’_˝->§c.a˘uÆ, 
PSRC_MNT_NONOPT
)) {

38  
FALSE
;

40  
TRUE
;

41 
	}
}

59 
∫ode_t
 *

60 
	$∫_mkf§oŸ
(
∫ode_t
 *
p_f§oŸ
,Ñnode_à*
ign‹ed
) {

61 
∫ode_t
 *
p_√w
, *
p_˛u°î
, *
p_©åd
, *
p_c⁄åﬁ
, *
p_chûdªn
;

62 
∫ode_t
 *(*
p_buûd‚
)(rnode_t *,Ñnode_t *);

63 
∫ode_t
 
∫_∂a˚¡a
;

64 
c⁄fig_∑øm_t
 *
p_˝
, *
p_2˝
;

65 
n_chûdªn
, 
n_©å
;

66 
n_Æloc
;

67 *
roŸdú_nm
;

68 
roŸdú_hash
;

69 *
˙ame_nm
;

71 
¶urm_˘l_c⁄f_t
 *
p_¶˙f
;

73 
	`©å_˙t_˝
(
∫_ty≥_t
);

74 
∫ode_t
 *
	`∫_ˇ°
‘node_à*, 
∫_ty≥_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

76 
ign‹ed
 = ignored;

78 
roŸdú_nm
 = 
∫ode_buûdèb
[
RND_ROOT
].
nm
;

79 
roŸdú_hash
 = 
	`djb_°πohash
(
roŸdú_nm
);

80 
˙ame_nm
 = 
∫ode_buûdèb
[
RND_CLUSTER
].
nm
;

82 
n_chûdªn
 = 
n_Æloc
 = 0;

83 
n_©å
 = 
	`©å_˙t_˝
(
RND_ROOT
);

85 i‡(
n_©å
 <= 0) {

86 
	`EºExô
(
EºExô_INTERNAL
, "rn_mkfsroot:áttribute count <= 0");

89 
n_Æloc
 += 1;

90 
n_Æloc
 += 1;

91 
n_Æloc
 += 1;

92 
n_Æloc
 += 1;

94 
n_chûdªn
 = 
n_Æloc
 - 1;

104 
p_buûd‚
 = 
∫ode_buûdèb
[
RN_PROVISION
].
buûd‚
;

105 i‡(
	`mem£t
(&
∫_∂a˚¡a
, 0, (
∫ode_t
)) != &rn_placenta) {

106 
	`EºExô
(
EºExô_NOMEM
, "rn_mkfsroot: memset: cannotállocateÖlacentalÑnode");

107  
NULL
;

109 
∫_∂a˚¡a
.
n_chûdªn
 = 
n_Æloc
 + 1;

110 
∫_∂a˚¡a
.
πy≥
 = 
RND_ROOT
;

111 i‡(!(
p_√w
 = (*
p_buûd‚
)(
NULL
, &
∫_∂a˚¡a
))) {

112 
	`EºExô
(
EºExô_ASSERT
, "rn_mkfsroot:Örovision failed: out of memory (buildfn)");

113  
NULL
;

116 
p_©åd
 = 
p_chûdªn
 = 
p_√w
 + 1;

117 
p_c⁄åﬁ
 = 
p_chûdªn
 + 1;

118 
p_˛u°î
 = 
p_chûdªn
 + 2;

120 i‡(
roŸdú_nm
) {

121 
p_˝
 = 
	`gëc⁄fig_‰omnm
(
roŸdú_nm
);

124 
p_f§oŸ
 = 
	`∫_ˇ°
(
p_√w
, 
RND_ROOT
,

125 
p_˝
, 
NULL
, 
roŸdú_nm
,

126  
p_√w
, 
p_chûdªn
, 
n_chûdªn
,

127  
p_chûdªn
+3,Ö_children);

128 i‡(!
p_f§oŸ
) {

129 
	`EºExô
(
EºExô_ASSERT
, "rn_mkfsroot:Ñn_cast(fsroot) NULL");

130  
NULL
;

161 
p_2˝
 = 
	`dup_˝
(
p_˝
);

162 i‡(!
p_2˝
) {

163 
	`EºExô
(
EºExô_ASSERT
, "rn_mkfsroot: !dup_cp:Ö_2cp RND_ATTRIBUTES");

164  
NULL
;

166 
p_2˝
->
nm
 = 
∫ode_buûdèb
[
RND_ATTRIBUTES
].nm;

167 
p_©åd
 = 
	`∫_ˇ°
’_©åd, 
RND_ATTRIBUTES
,

168 
p_2˝
, 
NULL
,Ö_2˝->
nm
,

169  
p_f§oŸ
, 
NULL
, 0,

170  
NULL
, NULL);

172 i‡(!
p_©åd
) {

173 
	`EºExô
(
EºExô_ASSERT
, "rn_mkfsroot:Ñn_cast(attr) NULL");

174  
NULL
;

177 
	`£t_∫∑øm_f§oŸ
(
p_f§oŸ
);

180 i‡(
˙ame_nm
) {

181 
p_˝
 = 
	`gëc⁄fig_‰omnm
(
˙ame_nm
);

183 
p_˛u°î
 = 
	`∫_ˇ°
’_˛u°î, 
RND_CLUSTER
,

184 
p_˝
, 
p_¶˙f
, 
˙ame_nm
,

185  
p_f§oŸ
, 
NULL
, 0,

186  
NULL
, NULL);

187 i‡(!
p_˛u°î
) {

188 
	`EºExô
(
EºExô_ASSERT
, "rn_mkfsroot:Ñn_cast(cluster) NULL");

189  
NULL
;

200 
p_c⁄åﬁ
 = 
	`∫_ˇ°
’_c⁄åﬁ, 
RND_CONTROL
,

201 
CONFPARAM_MISSINGOK
, 
NULL
,

202 
∫ode_buûdèb
[
RND_CONTROL
].
nm
,

203  
p_f§oŸ
, 
NULL
, 0,

204  
NULL
, NULL);

205 i‡(!
p_c⁄åﬁ
) {

206 
	`EºExô
(
EºExô_ASSERT
, "rn_mkfsroot:Ñn_cast(control) NULL");

207  
NULL
;

209  
p_f§oŸ
;

210 
	}
}

	@lib/rnode/rn_mkjob.c

1 
	~"rmfs.h
"

9 
∫ode_t
 *

10 
	$∫_mkjobd
(
∫ode_t
 *
p_˛u°î
,Ñnode_à*
p_jobd
) {

11 
∫ode_t
 *
p_√w
, *
p_chûdªn
, *
p_subdú
, *
p_∫
, *
p_jobidX
;

12 
∫ode_t
 *(*
p_buûd‚
)(rnode_t *,Ñnode_t *);

13 
∫ode_t
 
∫_¥o
;

14 
c⁄fig_∑øm_t
 *
p_˝
, *
p_2˝
;

15 
n_chûdªn
;

16 
i
;

18 
job_öfo_msg_t
 *
p_jim
;

19 
job_öfo_t
 *
p_job_¨øy
;

20 
job_öfo_t
 *
p_jai
;

22 
∫ode_t
 *
	`∫_ˇ°
‘node_à*, 
∫_ty≥_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

24 i‡(!
p_˛u°î
) {

25 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobd(NULLÖarent)");

26  
NULL
;

29 
p_˝
 = 
	`dup_˝
(
	`gëc⁄fig_‰omnm
(
∫ode_buûdèb
[
RND_JOBS
].
nm
));

30 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

31 
	`EºExô
(
EºExô_ASSERT
, "mkjobd: !p_cp");

32  
NULL
;

34 i‡(!
p_˝
->
≥r_§c
.
¶urm
.
jim
) {

35 
	`EºExô
(
EºExô_ASSERT
, "mkjobd:Ço slurm job information msgÖarameter");

36  
NULL
;

39 
p_jim
 = 
p_˝
->
≥r_§c
.
¶urm
.
jim
;

40 
p_job_¨øy
 = 
p_jim
->
job_¨øy
;

41 
p_˝
->
vÆ
.
ue
.
ba£_addr
 = (*Ë
p_job_¨øy
;

43 i‡(
p_jim
->
œ°_upd©e
 == 0) {

44 
	`EºExô
(
EºExô_ASSERT
, "mkjobd: j_pim->last_update == 0");

45  
NULL
;

47 i‡(!
p_job_¨øy
) {

48 
	`EºExô
(
EºExô_ASSERT
, "mkjobd:ÉmptyÖ_cp->per_src.slurm.jim->job_array");

49  
NULL
;

51 i‡(
p_jim
->
ªc‹d_cou¡
 == 0) {

52 
	`EºExô
(
EºExô_WARN
, "mkjobd:Ö_cp->per_src.slurm.jim->record_count == 0");

54 
n_chûdªn
 = 
p_jim
->
ªc‹d_cou¡
;

66 
p_buûd‚
 = 
∫ode_buûdèb
[
RN_PROVISION
].
buûd‚
;

67 
∫_¥o
.
n_chûdªn
 =Ç_children + 1;

68 i‡(!(
p_√w
 = (*
p_buûd‚
)(
p_jobd
, &
∫_¥o
))) {

69 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobd(provision failure)- out of memory?");

70  
NULL
;

72 
p_chûdªn
 = 
p_subdú
 = 
p_√w
;

73 
p_jobd
 = 
	`∫_ˇ°
’_jobd, 
RND_JOBS
,

74 
CONFPARAM_REQUIRED
, 
p_job_¨øy
, 
p_˝
->
nm
,

75 
p_˛u°î
, 
p_chûdªn
, 
n_chûdªn
,

76  
NULL
, 
p_subdú
);

78 i‡(!
	`dîeÁbÀ_˝
(
p_jobd
->
p_˝
)) {

79 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobd: NULLÖ_jobd->p_cp");

80  
NULL
;

90 
i
 = 0, 
p_∫
 = 
p_subdú
, 
p_jai
 = 
p_job_¨øy
;

91 
i
 < 
p_jim
->
ªc‹d_cou¡
;

92 
i
++, 
p_jai
++

94 *
nm
;

95 
sbuf
[
_POSIX_PATH_MAX
];

96 
l
;

102 
l
 = 
	`¢¥ötf
(
sbuf
, 
_POSIX_PATH_MAX
-1, "%d", 
p_jai
->
job_id
);

103 i‡(
l
 < 0) {

104 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobd(snprintf(p_jai->job_id)))");

105  
NULL
;

107 
nm
 = 
	`°∫dup
(
sbuf
, 
l
+1);

108 i‡(!
nm
) {

109 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobd: !nm");

110  
NULL
;

117 i‡(!(
p_2˝
 = 
	`dup_˝
(
p_jobd
->
p_˝
))) {

118 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobd: out of memory? !dup_cp(p_job->p_cp)");

119  
NULL
;

121 
p_˝
->
nm
 =Ö_˝->
vÆ
.
ue
.
°r
 =Çm;

122 
p_jobidX
 = 
	`∫_ˇ°
(
p_∫
, 
RND_JOBID
,

123 
p_˝
, 
p_jai
, 
nm
,

124 
p_jobd
, 
NULL
, 0,

125  
NULL
, NULL);

126 i‡(!
p_jobidX
) {

127 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobd: !p_jobidX");

128  
NULL
;

130 
p_∫
++;

132 
	`£t_∫∑øm_jobd
(
p_jobd
);

133  
p_jobd
;

134 
	}
}

144 
	$∫_ª£tugid
(
∫ode_t
 *
p_dú
, 
uid_t
 
uid
, 
gid_t
 
gid
) {

145 
∫ode_t
 *
p_∫
;

146 
i
;

148 
p_∫
 = 
NULL
;

149 i‡(!
p_dú
) {

150 
	`EºExô
(
EºExô_INTERNAL
, "resetattrid: !p_dir");

152 i‡(!
	`IS_RTYPE_VALID
(
p_dú
->
πy≥
)) {

153 
	`EºExô
(
EºExô_ASSERT
, "resetugid: !IS_VALID_RTYPE");

156 
p_dú
->
uid
 = uid;

157 
p_dú
->
gid
 = gid;

159 
i
 = 0, 
p_∫
 = 
p_dú
->
chûdªn
; i <Ö_dú->
n_chûdªn
; i++,Ö_rn++) {

161 i‡(
p_∫
->
chûdªn
) {

162 
	`∫_ª£tugid
(
p_∫
, 
uid
, 
gid
);

165 
p_∫
->
uid
 = uid;

166 
p_∫
->
gid
 = gid;

170 
	}
}

173 
∫ode_t
 *

174 
	$∫_mkjobid
(
∫ode_t
 *
p_jobd
,Ñnode_à*
p_jobid
) {

175 
∫ode_t
 *
p_√w
, *
p_job°ïs
, *
p_chûdªn
, *
p_subdú
, *
p_©åd
, *
p_©å
, *
p_c⁄åﬁ
;

176 
∫ode_t
 *(*
p_buûd‚
)(rnode_t *,Ñnode_t *);

177 
∫ode_t
 
∫_¥o
;

178 
c⁄fig_∑øm_t
 *
p_˝
, *
p_2˝
, *
p_˝_uid
, *
p_˝_gid
;

179 
n_chûdªn
;

180 
n_©å
;

182 
c⁄fig_∑øm_t
 *
	`gëc⁄fig_‰om_my©ånm
(
∫ode_t
 *, *);

183 
	`©å_˙t_˝
(
∫_ty≥_t
);

184 
∫ode_t
 *
	`∫_ˇ°
‘node_à*, 
∫_ty≥_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

186 
job_öfo_t
 *
p_ji
;

188 i‡(!
p_jobd
) {

189 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobid(NULLÖarent)Ö_jobd");

190  
NULL
;

192 
p_˝
 = 
p_jobid
->p_cp;

193 i‡(!
p_˝
) {

194 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobid: !p_cp");

195  
NULL
;

201 
p_ji
 = (
job_öfo_t
 *Ë
p_jobd
->
p_dy¡yp
;

202 i‡(!
p_ji
) {

203 
	`EºExô
(
EºExô_ASSERT
, "mkjobid: !job infoÖtr");

204  
NULL
;

206 
n_chûdªn
 = 2;

207 
n_©å
 = 
	`©å_˙t_˝
(
RND_JOBID
);

209 i‡(
n_©å
 > 0) {

210 
n_chûdªn
++;

222 
p_buûd‚
 = 
∫ode_buûdèb
[
RN_PROVISION
].
buûd‚
;

223 
∫_¥o
.
n_chûdªn
 =Ç_children + 1;

224 i‡(!(
p_√w
 = (*
p_buûd‚
)(
p_jobid
, &
∫_¥o
))) {

225 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobid(provision failure)- out of memory?");

226  
NULL
;

229 
p_subdú
 = 
p_chûdªn
 = 
p_√w
;

230 
p_©å
 = 
p_chûdªn
 + 1;

241 
p_jobid
 = 
	`∫_ˇ°
’_jobid, 
RND_JOBID
,

242 
p_˝
, 
p_ji
,Ö_˝->
nm
,

243 
p_jobd
, 
p_chûdªn
, 
n_chûdªn
,

244 
p_©å
, 
p_subdú
);

245 i‡(!
p_jobid
) {

246 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobid: !p_jobid");

247  
NULL
;

250 
p_˝
 = 
	`dup_˝
(
	`gëc⁄fig_‰omnm
(
∫ode_buûdèb
[
RND_JOBSTEPS
].
nm
));

251 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

252 
	`EºExô
(
EºExô_ASSERT
, "mkjobid: jobsteps, dup_cp fail - out of memory?");

253  
NULL
;

255 
p_job°ïs
 = 
	`∫_ˇ°
(
p_subdú
, 
RND_JOBSTEPS
,

256 
p_˝
, 
NULL
,Ö_˝->
nm
,

257 
p_jobid
, 
NULL
, 0,

258  
NULL
, NULL);

259 i‡(!
p_job°ïs
) {

260 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobid: !p_jobsteps");

261  
NULL
;

264 i‡(
n_©å
 <= 0) {

265 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobid:áttr count <= 0");

266  
NULL
;

269 
p_2˝
 = 
	`dup_˝
(
p_˝
);

270 i‡(!
	`dîeÁbÀ_˝
(
p_2˝
)) {

271 
	`EºExô
(
EºExô_ASSERT
, "mkjobid:áttributes, dup_cp fail - out of memory?");

272  
NULL
;

274 
p_2˝
->
nm
 = 
∫ode_buûdèb
[
RND_ATTRIBUTES
].nm;

275 
p_©åd
 = 
	`∫_ˇ°
(
p_job°ïs
+1, 
RND_ATTRIBUTES
,

276 
p_2˝
, 
p_ji
,Ö_2˝->
nm
,

277 
p_jobid
, 
NULL
, 0,

278  
NULL
, NULL);

280 i‡(!
p_©åd
) {

281 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobid:Ñn_cast_attr_typconv() = !p_attrd");

282  
NULL
;

285 
p_c⁄åﬁ
 = 
	`∫_ˇ°
(
p_©åd
+1, 
RND_CONTROL
,

286 
CONFPARAM_MISSINGOK
, 
NULL
,

287 
∫ode_buûdèb
[
RND_CONTROL
].
nm
,

288  
p_jobid
, 
NULL
, 0,

289  
NULL
, NULL);

290 i‡(!
p_c⁄åﬁ
) {

291 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobid:Ñn_cast(control) NULL");

292  
NULL
;

298 
p_˝_uid
 = 
	`gëc⁄fig_‰om_my©ånm
(
p_©åd
, "user_id");

299 
p_˝_gid
 = 
	`gëc⁄fig_‰om_my©ånm
(
p_©åd
, "group_id");

300 i‡(!
p_˝_uid
) {

301 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobid: !p_cp = getconfig_from_myattrnm(user_id)");

302  
NULL
;

304 i‡(!
p_˝_gid
) {

305 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobid: !p_cp = getconfig_from_myattrnm(group_id)");

306  
NULL
;

308 
	`∫_ª£tugid
(
p_jobid
, 
p_˝_uid
->
vÆ
.
ue
.
uid
, 
p_˝_gid
->vÆ.ue.
gid
);

310  
p_jobid
;

311 
	}
}

	@lib/rnode/rn_mknode.c

1 
	~"rmfs.h
"

8 
∫ode_t
 *

9 
	$∫_mknoded
(
∫ode_t
 *
p_∑πôi⁄
,Ñnode_à*
p_noded
) {

10 
∫ode_t
 *
p_√w
, *
p_chûdªn
, *
p_subdú
, *
p_∫
, *
p_nodeX
;

11 
∫ode_t
 *(*
p_buûd‚
)(rnode_t *,Ñnode_t *);

12 
∫ode_t
 
∫_¥o
;

13 
c⁄fig_∑øm_t
 *
p_˝
, *
p_2˝
;

14 
n_chûdªn
;

15 
i
;

17 
node_öfo_msg_t
 *
p_nim
;

18 
node_öfo_t
 *
p_node_¨øy
;

19 
node_öfo_t
 *
p_«i
;

20 
∫ode_t
 *
	`∫_ˇ°
‘node_à*, 
∫_ty≥_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

22 i‡(!
p_∑πôi⁄
) {

23 
	`EºExô
(
EºExô_ASSERT
, "rn_mknoded(NULLÖarent)");

24  
NULL
;

26 
p_˝
 = 
	`dup_˝
(
	`gëc⁄fig_‰omnm
(
∫ode_buûdèb
[
RND_NODES
].
nm
));

27 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

28 
	`EºExô
(
EºExô_ASSERT
, "mknoded: !p_cp");

29  
NULL
;

31 i‡(!
p_˝
->
≥r_§c
.
¶urm
.
nim
) {

32 
	`EºExô
(
EºExô_ASSERT
, "mknoded:Ço slurmÇode information msgÖarameter");

33  
NULL
;

36 
p_nim
 = 
p_˝
->
≥r_§c
.
¶urm
.
nim
;

37 
p_node_¨øy
 = 
p_nim
->
node_¨øy
;

38 
p_˝
->
vÆ
.
ue
.
ba£_addr
 = (*Ë
p_node_¨øy
;

40 i‡(
p_nim
->
œ°_upd©e
 == 0) {

41 
	`EºExô
(
EºExô_ASSERT
, "mknoded: j_nim->last_update == 0");

42  
NULL
;

44 i‡(!
p_node_¨øy
) {

45 
	`EºExô
(
EºExô_ASSERT
, "mknoded:ÉmptyÖ_cp->nim->node_array");

46  
NULL
;

48 i‡(
p_nim
->
ªc‹d_cou¡
 == 0) {

49 
	`EºExô
(
EºExô_WARN
, "mknoded:Ö_cp->nim->record_count == 0");

52 
n_chûdªn
 = 
p_nim
->
ªc‹d_cou¡
;

65 
p_buûd‚
 = 
∫ode_buûdèb
[
RN_PROVISION
].
buûd‚
;

66 
∫_¥o
.
n_chûdªn
 =Ç_children + 1;

67 i‡(!(
p_√w
 = (*
p_buûd‚
)(
p_noded
, &
∫_¥o
))) {

68 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobd(provision failure)- out of memory?");

69  
NULL
;

72 
p_chûdªn
 = 
p_subdú
 = 
p_√w
;

81 
p_noded
 = 
	`∫_ˇ°
’_noded, 
RND_NODES
,

82 
p_˝
, 
p_node_¨øy
, 
∫ode_buûdèb
[
RND_NODES
].
nm
,

83 
p_∑πôi⁄
, 
p_chûdªn
, 
n_chûdªn
,

84  
NULL
, 
p_subdú
);

86 
i
 = 0, 
p_∫
 = 
p_subdú
, 
p_«i
 = 
p_node_¨øy
;

87 
i
 < 
p_nim
->
ªc‹d_cou¡
;

88 
i
++, 
p_«i
++

94 i‡(!(
p_2˝
 = 
	`dup_˝
(
p_˝
))) {

95 
	`EºExô
(
EºExô_ASSERT
, "rn_mknoded: out of memory? !dup_cp(p_cp) children");

96  
NULL
;

104 
p_2˝
->
vÆ
.
ue
.
°r
 =Ö_2˝->
nm
 = 
p_«i
->
«me
;

105 
p_nodeX
 = 
	`∫_ˇ°
(
p_∫
, 
RND_NODENAME
,

106 
p_2˝
, 
p_«i
,Ö_«i->
«me
,

107 
p_noded
, 
NULL
, 0,

108  
NULL
, NULL);

109 i‡(!
p_nodeX
) {

110 
	`EºExô
(
EºExô_ASSERT
, "rn_mknoded: !p_rn");

111  
NULL
;

113 
p_∫
++;

115  
p_noded
;

116 
	}
}

122 
∫ode_t
 *

123 
	$∫_mknode
(
∫ode_t
 *
p_noded
,Ñnode_à*
p_nodeX
) {

124 
∫ode_t
 *
p_√w
, *
p_chûdªn
, *
p_subdú
, *
p_©å
, *
p_©åd
;

125 
∫ode_t
 *(*
p_buûd‚
)(rnode_t *,Ñnode_t *);

126 
∫ode_t
 
∫_¥o
;

127 
n_chûdªn
;

128 
n_©å
;

129 
c⁄fig_∑øm_t
 *
p_˝
, *
p_2˝
;

131 
node_öfo_t
 *
p_ni
;

133 
	`©å_˙t_˝
(
∫_ty≥_t
);

134 
∫ode_t
 *
	`∫_ˇ°
‘node_à*, 
∫_ty≥_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

136 i‡(!
p_noded
) {

137 
	`EºExô
(
EºExô_ASSERT
, "rn_mknode(NULLÖarent)");

138  
NULL
;

141 i‡(!
p_nodeX
->
p_˝
) {

142 
	`EºExô
(
EºExô_ASSERT
, "rn_mknode: !p_nodeX->p_cp");

143  
NULL
;

145 
p_˝
 = 
p_nodeX
->p_cp;

150 
p_ni
 = (
node_öfo_t
 *Ë
p_nodeX
->
p_dy¡yp
;

151 i‡(!
p_ni
) {

152 
	`EºExô
(
EºExô_ASSERT
, "rn_mknode: !p_ni");

153  
NULL
;

156 
n_chûdªn
 = 0;

157 
n_©å
 = 
	`©å_˙t_˝
(
RND_NODENAME
);

158 i‡(
n_©å
 > 0) {

159 
n_chûdªn
++;

169 
p_buûd‚
 = 
∫ode_buûdèb
[
RN_PROVISION
].
buûd‚
;

170 
∫_¥o
.
n_chûdªn
 =Ç_children + 1;

171 i‡(!(
p_√w
 = (*
p_buûd‚
)(
p_nodeX
, &
∫_¥o
))) {

172 
	`EºExô
(
EºExô_ASSERT
, "rn_mknode: out of memory?Örovision failure");

173  
NULL
;

176 
p_chûdªn
 = 
p_©å
 = 
p_subdú
 = 
p_√w
;

177 
p_nodeX
 = 
	`∫_ˇ°
’_nodeX, 
RND_NODENAME
,

178 
p_˝
, 
p_ni
, 
p_nodeX
->
nm
,

179 
p_noded
, 
p_chûdªn
, 
n_chûdªn
,

180  
NULL
, 
p_subdú
);

181 i‡(!
p_nodeX
) {

182 
	`EºExô
(
EºExô_ASSERT
, "rn_mknode:Ñn_cast(p_nodeX)Ñeturn NULL");

183  
NULL
;

186 i‡(
n_©å
 > 0) {

191 
p_2˝
 = 
	`dup_˝
(
p_noded
->
p_˝
);

192 
p_2˝
->
nm
 = 
∫ode_buûdèb
[
RND_ATTRIBUTES
].nm;

193 
p_©åd
 = 
	`∫_ˇ°
(
p_chûdªn
, 
RND_ATTRIBUTES
,

194 
p_2˝
, 
p_ni
,Ö_2˝->
nm
,

195 
p_nodeX
, 
NULL
, 0,

196  
NULL
, NULL);

197 i‡(!
p_©åd
) {

198 
	`EºExô
(
EºExô_ASSERT
, "rn_mknode:Ñn_cast_attr_typconv() = !p_attrd");

199  
NULL
;

202  
p_nodeX
;

203 
	}
}

211 
	#MAX_STATE_STR_LEN
 (7)

	)

213 
∫ode_t
 *

214 
	$∫_mkn°©e
(
∫ode_t
 *
p_∑ª¡
,Ñnode_à*
p_nodeX
) {

215 
∫ode_t
 *
p_chûdªn
, *
p_©å
, *
p_√w
, *
p_n°©e
, *
p_Ælocjob
;

216 
∫ode_t
 *(*
p_buûd‚
)(rnode_t *,Ñnode_t *);

217 
∫ode_t
 
∫_¥o
;

218 
c⁄fig_∑øm_t
 *
p_˝
, *
p_2˝
;

219 
n_chûdªn
;

220 
node_Æloˇãd
;

221 
uöt16_t
 
node_°©e
, *
p_node°©e
;

222 
node_°©e_°r
[
MAX_STATE_STR_LEN
+1];

224 
∫ode_t
 *
	`∫_ˇ°_©å_typc⁄v
‘node_à*, 
±yp_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

226 i‡(!
p_∑ª¡
) {

227 
	`EºExô
(
EºExô_ASSERT
, "rn_mknstate(NULLÖarent)");

228  
NULL
;

230 i‡(!
p_nodeX
) {

231 
	`EºExô
(
EºExô_ASSERT
, "rn_mknstate(NULLÖ_nodeX)");

232  
NULL
;

234 
p_˝
 = 
p_nodeX
->p_cp;

235 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

236 
	`EºExô
(
EºExô_ASSERT
, "mknstate: !p_cp");

237  
NULL
;

239 i‡(!
p_nodeX
->
p_˝
->
≥r_§c
.
¶urm
.
nim
 && !p_nodeX->
p_dy¡yp
) {

240 
	`EºExô
(
EºExô_ASSERT
, "mknstate: !p_nodeX->p_cp->per_src.slurm.nim && !p_dyntyp");

241  
NULL
;

247 
node_Æloˇãd
 = 0;

250 
p_node°©e
 = (
uöt16_t
 *Ë
p_nodeX
->
p_dy¡yp
;

251 
node_°©e
 = *
p_node°©e
;

252 i‡(
node_°©e
 & 
NODE_STATE_ALLOCATED
) {

253 
node_Æloˇãd
++;

264 
n_chûdªn
 = 1;

265 
n_chûdªn
 +
node_Æloˇãd
;

267 
p_buûd‚
 = 
∫ode_buûdèb
[
RN_PROVISION
].
buûd‚
;

268 
∫_¥o
.
n_chûdªn
 =Ç_children + 1;

269 i‡(!(
p_√w
 = (*
p_buûd‚
)(
p_∑ª¡
, &
∫_¥o
))) {

270 
	`EºExô
(
EºExô_ASSERT
, "rn_mknstate(provision failure)- out of memory?");

271  
NULL
;

273 
p_chûdªn
 = 
p_©å
 = 
p_√w
;

295 (Ë
	`¢¥ötf
(
node_°©e_°r
, 
MAX_STATE_STR_LEN
, "%s",

296 (
node_Æloˇãd
? "alloc" :

297 (
node_°©e
 & 
NODE_STATE_DOWN
? "down" :

298 (
node_°©e
 & 
NODE_STATE_IDLE
? "idle" :

299 (
node_°©e
 & 
NODE_STATE_ERROR
? "error" :

300 (
node_°©e
 & 
NODE_STATE_MIXED
? "mixed" :

301 (
node_°©e
 & 
NODE_STATE_FUTURE
? "future" :

305 
p_2˝
 = 
	`dup_˝
(
p_˝
);

306 i‡(!
	`dîeÁbÀ_˝
(
p_2˝
)) {

307 
	`EºExô
(
EºExô_ASSERT
, "rn_mknstate:Ço memory - !derefable_cp(p_cp)");

308  
NULL
;

310 
p_2˝
->
nm
 = 
	`°rdup
(
node_°©e_°r
);

311 
p_n°©e
 = 
	`∫_ˇ°_©å_typc⁄v
(
p_chûdªn
, 
PTYP_NODESTATE
,

312 
p_2˝
, 
p_node°©e
,Ö_2˝->
nm
,

313 
p_nodeX
, 
NULL
, 0,

314  
NULL
, NULL);

316 i‡(!
p_n°©e
) {

317 
	`EºExô
(
EºExô_ASSERT
, "rn_mknstate(castáttr)Çode_state");

318  
NULL
;

321 i‡(
node_Æloˇãd
) {

322 
p_Ælocjob
 = 
	`∫_ˇ°_©å_typc⁄v
(
p_chûdªn
+1, 
PTYP_ALLOCJOB
,

323 
p_2˝
, 
p_node°©e
,

324 
∫ode_buûdèb
[
RNF_ALLOCJOB
].
nm
,

325 
p_nodeX
, 
NULL
, 0,

326  
NULL
, NULL);

327 i‡(!
p_Ælocjob
) {

328 
	`EºExô
(
EºExô_ASSERT
, "rn_mknstate: !p_allocjob");

329  
NULL
;

333  
p_n°©e
;

334 
	}
}

344 
∫ode_t
 *

345 
	$∫_mkÆlocjob
(
∫ode_t
 *
p_n°©e
,Ñnode_à*
p_Ælocjob
) {

346 
∫ode_t
 *
p_jobidX
, *
p_jobd
;

347 
h_pos
, 
n_jobs
;

348 *
h_nm
, *
nodím
, *
nodím2
;

349 
c⁄fig_∑øm_t
 *
p_˝
;

350 
∫_∑øm_t
 *
p_∫_∑ømèb
;

353 
job_öfo_t
 *
p_ji
;

354 
ho°li°_t
 
hl
;

356 
∫ode_t
 *
	`∫_ˇ°_©å_typc⁄v
‘node_à*, 
±yp_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

358 i‡(!
p_n°©e
) {

359 
	`EºExô
(
EºExô_ASSERT
, "rn_mkallocjob(NULLÖarentÇstate)");

360  
NULL
;

363 
p_˝
 = 
p_n°©e
->p_cp;

364 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

365 
	`EºExô
(
EºExô_ASSERT
, "mkallocjob: !p_cp");

366  
NULL
;

371 i‡(!
p_n°©e
->
∑ª¡
) {

372 
	`EºExô
(
EºExô_ASSERT
, "mkallocjob: !p_nstate->p_parent");

373  
NULL
;

376 
nodím
 = (*Ë
p_n°©e
->
∑ª¡
->
p_dy¡yp
;

377 i‡(!
nodím
) {

378 
	`EºExô
(
EºExô_ASSERT
, "mkallocjob:Ö_nstate->p_parent->nodenm");

379  
NULL
;

385 #ifde‡
FIX_RNPARM_LOCKING


386 
p_jobd
 = 
	`gë_∫∑øm_∫
(
	`off£tof
(
∫_∑øm_t
,Ö_jobd));

389 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
FALSE
);

390 i‡(!
p_∫_∑ømèb
) {

391  
FALSE
;

393 
p_jobd
 = 
p_∫_∑ømèb
->p_jobd;

397 i‡(!
p_jobd
) {

398 
	`EºExô
(
EºExô_ASSERT
, "mkallocjob:Ö_jobd");

399  
NULL
;

402 
n_jobs
 = 0, 
p_jobidX
 = 
p_jobd
->
chûdªn
, 
h_nm
 = 
NULL
;

403 
n_jobs
 < 
p_jobd
->
n_chûdªn
 &&Ö_jobd->
nm
 &&Ö_jobd && !
h_nm
;

404 
n_jobs
++, 
p_jobidX
++) {

405 
i
;

407 
p_ji
 = (
job_öfo_t
 *Ë
p_jobidX
->
p_dy¡yp
;

408 i‡(!
p_ji
) {

409 
	`EºExô
(
EºExô_ASSERT
, "rn_mkallocjob NULLÖ_jiÖtr");

412 i‡(!(
hl
 = 
	`¶urm_ho°li°_¸óã
(
p_ji
->
nodes
))) {

413 
	`EºExô
(
EºExô_ASSERT
, "rn_mkallocjob NULLÖ_jiÖtr");

419 i‡((
h_pos
 = 
	`¶urm_ho°li°_föd
(
hl
, 
nodím
)) < 0) {

421 
	`¶urm_ho°li°_de°roy
(
hl
);

424 
i
 = 0; i < 
h_pos
-1; i++) {

425 i‡(!
	`¶urm_ho°li°_shi·
(
hl
)) {

426 
	`EºExô
(
EºExô_ASSERT
, "rn_mkallocjob !slurm_hostlist_shift(h_pos-1)");

429 i‡(!(
h_nm
 = 
	`¶urm_ho°li°_shi·
(
hl
))) {

430 
	`EºExô
(
EºExô_ASSERT
, "rn_mkallocjob !slurm_hostlist_shift (h_pos)");

431 
	`¶urm_ho°li°_de°roy
(
hl
);

434 
nodím2
 = 
	`°rdup
(
h_nm
);

435 i‡(!
nodím
) {

436 
	`EºExô
(
EºExô_ASSERT
, "rn_mkallocjob !strdup(h_nm)");

439 
p_Ælocjob
 = 
	`∫_ˇ°_©å_typc⁄v
’_Ælocjob, 
RNF_ALLOCJOB
,

440 
CONFPARAM_MISSINGOK
, 
nodím2
,Çodenm2,

441 
p_n°©e
, 
NULL
, 0,

442  
NULL
, NULL);

444 i‡(!
p_Ælocjob
) {

445 
	`EºExô
(
EºExô_ASSERT
, "rn_mkallocjob: !p_allocjob");

450 i‡(
hl
) {

451 
	`¶urm_ho°li°_de°roy
(
hl
);

453 i‡(
h_nm
) {

454 
	`‰ì
(
h_nm
);

457  
p_Ælocjob
;

458 
	}
}

	@lib/rnode/rn_mkpart.c

1 
	~"rmfs.h
"

9 
∫ode_t
 *

10 
	$∫_mk∑πd
(
∫ode_t
 *
p_˛u°î
,Ñnode_à*
p_∑πôi⁄s
) {

11 
∫ode_t
 *
p_chûdªn
, *
p_subdú
, *
p_∫
, *
p_√w
, *
p_∑πX
;

12 
∫ode_t
 *(*
p_buûd‚
)(rnode_t *,Ñnode_t *);

13 
∫ode_t
 
∫_¥o
;

14 
c⁄fig_∑øm_t
 *
p_˝
, *
p_2˝
;

15 
n_chûdªn
;

16 
i
;

18 
∑πôi⁄_öfo_msg_t
 *
p_pim
;

19 
∑πôi⁄_öfo_t
 *
p_∑π_¨øy
;

20 
∑πôi⁄_öfo_t
 *
p_∑i
;

22 
∫ode_t
 *
	`∫_ˇ°
‘node_à*, 
∫_ty≥_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

24 i‡(!
p_˛u°î
) {

25 
	`EºExô
(
EºExô_ASSERT
, "rn_mkpartd(NULLÖarentÖ_cluster)");

26  
NULL
;

29 
p_˝
 = 
	`gëc⁄fig_‰omnm
(
∫ode_buûdèb
[
RND_PARTITIONS
].
nm
);

30 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

31 
	`EºExô
(
EºExô_ASSERT
, "mkpartd:ÇoÖartitions configurationÖarameter");

32  
NULL
;

34 i‡(!
p_˝
->
≥r_§c
.
¶urm
.
pim
) {

35 
	`EºExô
(
EºExô_ASSERT
, "mkpartd:Ço slurmÖartition information msgÖarameter");

36  
NULL
;

40 
p_pim
 = 
p_˝
->
≥r_§c
.
¶urm
.
pim
;

41 
p_∑π_¨øy
 = 
p_pim
->
∑πôi⁄_¨øy
;

42 
p_˝
->
vÆ
.
ue
.
ba£_addr
 = (*Ë
p_∑π_¨øy
;

44 i‡(
p_pim
->
œ°_upd©e
 == 0) {

45 
	`EºExô
(
EºExô_ASSERT
, "mkpartd:Ö_pim->last_update == 0");

46  
NULL
;

48 i‡(!
p_∑π_¨øy
) {

49 
	`EºExô
(
EºExô_ASSERT
, "mkpartd:ÉmptyÖ_cp->slurm.pim->partition_array");

50  
NULL
;

52 i‡(
p_pim
->
ªc‹d_cou¡
 == 0) {

53 
	`EºExô
(
EºExô_WARN
, "mkpartd:Ö_cp->slurm.pim->record_count == 0");

55 
n_chûdªn
 = 
p_pim
->
ªc‹d_cou¡
;

67 
p_buûd‚
 = 
∫ode_buûdèb
[
RN_PROVISION
].
buûd‚
;

68 
∫_¥o
.
n_chûdªn
 =Ç_children + 1;

69 i‡(!(
p_√w
 = (*
p_buûd‚
)(
p_∑πôi⁄s
, &
∫_¥o
))) {

70 
	`EºExô
(
EºExô_ASSERT
, "rn_mkpartd(provision failure)- out of memory?");

71  
NULL
;

74 
p_chûdªn
 = 
p_subdú
 = 
p_√w
;

81 
p_∑πôi⁄s
 = 
	`∫_ˇ°
’_∑πôi⁄s, 
RND_PARTITIONS
,

82 
CONFPARAM_REQUIRED
, 
p_∑π_¨øy
, 
p_˝
->
nm
,

83 
p_˛u°î
, 
p_chûdªn
, 
n_chûdªn
,

84  
NULL
, 
p_subdú
);

85 i‡(!
	`dîeÁbÀ_˝
(
p_∑πôi⁄s
->
p_˝
)) {

86 
	`EºExô
(
EºExô_ASSERT
, "rn_mkpartd: NULLÖ_partitions->p_cp");

87  
NULL
;

90 
i
 = 0, 
p_∫
 = 
p_subdú
, 
p_∑i
 = 
p_∑π_¨øy
;

91 
i
 < 
p_pim
->
ªc‹d_cou¡
;

92 
i
++, 
p_∑i
++

95 i‡(!
p_∑i
->
«me
) {

96 
	`EºExô
(
EºExô_ASSERT
, "rn_mkparted: !p_pai->name");

97  
NULL
;

99 i‡(!(
p_2˝
 = 
	`dup_˝
(
p_˝
))) {

100 
	`EºExô
(
EºExô_ASSERT
, "mkpartd: !dup_cp(p_cp) children");

101  
NULL
;

103 
p_2˝
->
vÆ
.
ue
.
°r
 =Ö_2˝->
nm
 = 
p_∑i
->
«me
;

104 
p_∑πX
 = 
	`∫_ˇ°
(
p_∫
, 
RND_PARTNAME
,

105 
p_2˝
, 
p_∑i
,Ö_∑i->
«me
,

106 
p_∑πôi⁄s
, 
NULL
, 0,

107  
NULL
, NULL);

108 i‡(!
p_∑πX
) {

109 
	`EºExô
(
EºExô_ASSERT
, "rn_mkparted: !p_rn");

110  
NULL
;

112 
p_∫
++;

114  
p_∑πôi⁄s
;

115 
	}
}

122 
∫ode_t
 *

123 
	$∫_mk∑π
(
∫ode_t
 *
p_∑πôi⁄s
,Ñnode_à*
p_∑πX
) {

124 
∫ode_t
 *
p_√w
, *
p_nodes
, *
p_chûdªn
, *
p_subdú
, *
p_©åd
;

125 
∫ode_t
 *(*
p_buûd‚
)(rnode_t *,Ñnode_t *);

126 
∫ode_t
 
∫_¥o
;

127 
n_chûdªn
, 
n_©å
;

128 
c⁄fig_∑øm_t
 *
p_˝
, *
p_2˝
;

130 
∑πôi⁄_öfo_t
 *
p_pi
;

131 
	`©å_˙t_˝
(
∫_ty≥_t
);

132 
∫ode_t
 *
	`∫_ˇ°
‘node_à*, 
∫_ty≥_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

134 i‡(!
p_∑πôi⁄s
) {

135 
	`EºExô
(
EºExô_ASSERT
, "rn_mkpart(NULLÖarent)");

136  
NULL
;

138 
p_˝
 = 
p_∑πX
->p_cp;

139 
p_pi
 = (
∑πôi⁄_öfo_t
 *Ë
p_∑πX
->
p_dy¡yp
;

140 i‡(!
p_pi
) {

141 
	`EºExô
(
EºExô_ASSERT
, "mkpart: !partition infoÖtr");

142  
NULL
;

144 i‡(!
p_˝
) {

145 
	`EºExô
(
EºExô_ASSERT
, "mkpart: !p_partX->p_cp");

146  
NULL
;

149 
n_chûdªn
 = 1;

150 
n_©å
 = 
	`©å_˙t_˝
(
RND_PARTNAME
);

152 i‡(
n_©å
 > 0) {

153 
n_chûdªn
++;

164 
p_buûd‚
 = 
∫ode_buûdèb
[
RN_PROVISION
].
buûd‚
;

165 
∫_¥o
.
n_chûdªn
 =Ç_children + 1;

166 i‡(!(
p_√w
 = (*
p_buûd‚
)(
p_∑πX
, &
∫_¥o
))) {

167 
	`EºExô
(
EºExô_ASSERT
, "rn_mkpart(provision failure)- out of memory?");

168  
NULL
;

171 
p_subdú
 = 
p_chûdªn
 = 
p_√w
;

172 
p_∑πX
 = 
	`∫_ˇ°
’_∑πX, 
RND_PARTNAME
,

173 
p_˝
, 
p_pi
, 
p_∑πX
->
nm
,

174 
p_∑πôi⁄s
, 
p_chûdªn
, 
n_chûdªn
,

175  
NULL
, 
p_subdú
);

184 
p_nodes
 = 
	`∫_ˇ°
(
p_chûdªn
, 
RND_NODES
,

185 
CONFPARAM_REQUIRED
, 
NULL
,

186 
∫ode_buûdèb
[
RND_NODES
].
nm
,

187 
p_∑πX
, 
NULL
, 0,

188  
NULL
, NULL);

189 i‡(!
p_nodes
) {

190 
	`EºExô
(
EºExô_ASSERT
, "rn_mkpart: !p_nodes");

191  
NULL
;

194 i‡(
n_©å
 > 0) {

195 
p_2˝
 = 
	`dup_˝
(
p_˝
);

196 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

197 
	`EºExô
(
EºExô_ASSERT
, "rn_mkpart:Ço memory - dup_cp(p_cp)");

198  
NULL
;

200 
p_2˝
->
nm
 = 
∫ode_buûdèb
[
RND_ATTRIBUTES
].nm;

201 
p_©åd
 = 
	`∫_ˇ°
(
p_nodes
+1, 
RND_ATTRIBUTES
,

202 
p_2˝
, 
p_pi
,Ö_2˝->
nm
,

203 
p_∑πX
, 
NULL
, 0,

204  
NULL
, NULL);

205 i‡(!
p_©åd
) {

206 
	`EºExô
(
EºExô_ASSERT
, "rn_mkpart: !p_nodes");

207  
NULL
;

210  
p_∑πX
;

211 
	}
}

	@lib/rnode/rn_mkstep.c

1 
	~"rmfs.h
"

8 
∫ode_t
 *

9 
	$∫_mkjob°ïd
(
∫ode_t
 *
p_jobid
,Ñnode_à*
p_job°ïd
) {

10 
∫ode_t
 *
p_√w
, *
p_chûdªn
, *
p_subdú
, *
p_∫
, *
p_°ïX
;

11 
∫ode_t
 *(*
p_buûd‚
)(rnode_t *,Ñnode_t *);

12 
∫ode_t
 
∫_¥o
;

13 
c⁄fig_∑øm_t
 *
p_˝
;

14 
n_chûdªn
;

15 
i
;

17 
job_°ï_öfo_ª•⁄£_msg_t
 *
p_°im
;

18 
job_°ï_öfo_t
 *
p_job_°ïs
;

19 
job_°ï_öfo_t
 *
p_jßi
;

21 
∫ode_t
 *
	`∫_ˇ°
‘node_à*, 
∫_ty≥_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

23 i‡(!
p_jobid
) {

24 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobstepd(NULLÖarent jobid)");

25  
NULL
;

27 i‡(!
p_jobid
->
p_dy¡yp
) {

28 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobstepd(NULL jobid->p_dyntyp)");

29  
NULL
;

32 
p_˝
 = 
p_job°ïd
->p_cp;

33 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

34 
	`EºExô
(
EºExô_ASSERT
, "mkjobstepd: !p_cp");

35  
NULL
;

42 i‡(!
p_˝
->
≥r_§c
.
¶urm
.
°im
) {

43 
	`EºExô
(
EºExô_ASSERT
, "mkjobstepd:Ço slurm job step information msgÖarameter");

44  
NULL
;

47 
p_°im
 = 
p_˝
->
≥r_§c
.
¶urm
.
°im
;

48 
p_job_°ïs
 = 
p_°im
->
job_°ïs
;

49 
p_˝
->
vÆ
.
ue
.
ba£_addr
 = (*Ë
p_job_°ïs
;

51 i‡(
p_°im
->
œ°_upd©e
 == 0) {

52 
	`EºExô
(
EºExô_ASSERT
, "mkjobstepd:Ö_cp->p_stim->last_update == 0");

53  
NULL
;

55 i‡(!
p_job_°ïs
) {

56 
	`EºExô
(
EºExô_ASSERT
, "mkjobstepd:ÉmptyÖ_cp->per_src.slurm.p_stim.stim->job_steps");

57  
NULL
;

59 i‡(
p_°im
->
job_°ï_cou¡
 == 0) {

60 
	`EºExô
(
EºExô_WARN
, "mkjobstepd:Ö_cp->p_stim->job_step_count == 0");

63 
n_chûdªn
 = 
p_°im
->
job_°ï_cou¡
;

74 
p_buûd‚
 = 
∫ode_buûdèb
[
RN_PROVISION
].
buûd‚
;

75 
∫_¥o
.
n_chûdªn
 =Ç_children + 1;

76 i‡(!(
p_√w
 = (*
p_buûd‚
)(
p_job°ïd
, &
∫_¥o
))) {

77 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobstepd(provision failure)- out of memory?");

78  
NULL
;

81 
p_chûdªn
 = 
p_subdú
 = 
p_√w
;

94 
p_job°ïd
->
uid
 =Ö_job°ïd->
∑ª¡
->uid;

95 
p_job°ïd
->
gid
 =Ö_job°ïd->
∑ª¡
->gid;

97 
p_job°ïd
 = 
	`∫_ˇ°
’_job°ïd, 
RND_JOBSTEPS
,

98 
CONFPARAM_REQUIRED
, 
p_job_°ïs
,

99 
∫ode_buûdèb
[
RND_JOBSTEPS
].
nm
,

100 
p_jobid
, 
p_chûdªn
, 
n_chûdªn
,

101  
NULL
, 
p_subdú
);

103 
i
 = 0, 
p_∫
 = 
p_subdú
, 
p_jßi
 = 
p_job_°ïs
;

104 
i
 < 
p_°im
->
job_°ï_cou¡
;

105 
i
++, 
p_jßi
++

107 *
nm
;

108 
sbuf
[
_POSIX_PATH_MAX
];

109 
l
;

115 
l
 = 
	`¢¥ötf
(
sbuf
, 
_POSIX_PATH_MAX
-1, "%d", 
p_jßi
->
°ï_id
);

116 i‡(
l
 < 0) {

117 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobstepd(snprintf(p_jsai->step_id)))");

118  
NULL
;

120 
nm
 = 
	`°∫dup
(
sbuf
, 
l
+1);

121 i‡(!
nm
) {

122 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobstepd: !nm");

123  
NULL
;

126 
p_˝
 = 
	`dup_˝
(
p_job°ïd
->p_cp);

127 i‡(!
p_˝
) {

128 
	`EºExô
(
EºExô_ASSERT
, "mkjobstepd:Ö_stepX, dup_cp fail - out of memory?");

129  
NULL
;

131 
p_˝
->
nm
 =Ö_˝->
vÆ
.
ue
.
°r
 =Çm;

133 
p_°ïX
 = 
	`∫_ˇ°
(
p_∫
, 
RND_JOBSTEPID
,

134 
p_˝
, 
p_jßi
, 
nm
,

135 
p_job°ïd
, 
NULL
, 0,

136  
NULL
, NULL);

137 i‡(!
p_°ïX
) {

138 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobstepd: !p_rn");

139  
NULL
;

142 
p_°ïX
->
uid
 =Ö_°ïX->
∑ª¡
->uid;

143 
p_°ïX
->
gid
 =Ö_°ïX->
∑ª¡
->gid;

145 
p_∫
++;

147  
p_job°ïd
;

148 
	}
}

157 
∫ode_t
 *

158 
	$∫_mkjob°ï
(
∫ode_t
 *
p_job°ïd
,Ñnode_à*
p_°ïX
) {

159 
∫ode_t
 *
p_√w
, *
p_chûdªn
, *
p_subdú
, *
p_©åd
, *
p_©å
;

160 
∫ode_t
 *(*
p_buûd‚
)(rnode_t *,Ñnode_t *);

161 
∫ode_t
 
∫_¥o
;

162 
c⁄fig_∑øm_t
 *
p_˝
, *
p_2˝
;

163 
n_chûdªn
;

164 
n_©å
;

166 
job_°ï_öfo_t
 *
p_j°i
;

168 
	`©å_˙t_˝
(
∫_ty≥_t
);

169 
∫ode_t
 *
	`∫_ˇ°
‘node_à*, 
∫_ty≥_t
, 
c⁄fig_∑øm_t
 *, *, *,Ñnode_t *,Ñnode_t *, ,Ñnode_t *,Ñnode_t *);

171 i‡(!
p_job°ïd
) {

172 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobstep(NULLÖarent)Ö_jobstepd");

173  
NULL
;

175 
p_˝
 = 
p_°ïX
->p_cp;

176 i‡(!
	`dîeÁbÀ_˝
(
p_˝
)) {

177 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobstep: !p_cp RND_JOBSTEPID");

178  
NULL
;

183 
p_j°i
 = (
job_°ï_öfo_t
 *Ë
p_°ïX
->
p_dy¡yp
;

184 i‡(!
p_j°i
) {

185 
	`EºExô
(
EºExô_ASSERT
, "mkjobstep: !job step infoÖtr");

186  
NULL
;

189 
n_chûdªn
 = 0;

190 
n_©å
 = 
	`©å_˙t_˝
(
RND_JOBSTEPID
);

192 i‡(
n_©å
 > 0) {

193 
n_chûdªn
++;

202 
p_buûd‚
 = 
∫ode_buûdèb
[
RN_PROVISION
].
buûd‚
;

203 
∫_¥o
.
n_chûdªn
 =Ç_children + 1;

204 i‡(!(
p_√w
 = (*
p_buûd‚
)(
p_°ïX
, &
∫_¥o
))) {

205 
	`EºExô
(
EºExô_ASSERT
, "rn_mkstepid(provision failure)- out of memory?");

206  
NULL
;

209 
p_©å
 = 
p_chûdªn
 = 
p_subdú
 = 
p_√w
;

216 
p_°ïX
 = 
	`∫_ˇ°
’_°ïX, 
RND_JOBSTEPID
,

217 
p_˝
, 
p_j°i
,Ö_˝->
nm
,

218 
p_job°ïd
, 
p_chûdªn
, 
n_chûdªn
,

219 
p_©å
, 
p_subdú
);

220 i‡(!
p_°ïX
) {

221 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobstep:Ñn_cast(!p_stepX)");

222  
NULL
;

225 i‡(
n_©å
 > 0) {

226 
p_2˝
 = 
	`dup_˝
(
p_˝
);

227 i‡(!
	`dîeÁbÀ_˝
(
p_2˝
)) {

228 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobstep: !derefable-cp(p_2cp) - out of mem");

229  
NULL
;

231 
p_2˝
->
nm
 = 
∫ode_buûdèb
[
RND_ATTRIBUTES
].nm;

232 
p_©åd
 = 
	`∫_ˇ°
(
p_chûdªn
, 
RND_ATTRIBUTES
,

233 
p_2˝
, 
p_j°i
,Ö_2˝->
nm
,

234 
p_°ïX
, 
NULL
, 0,

235  
NULL
, NULL);

236 i‡(!
p_©åd
) {

237 
	`EºExô
(
EºExô_ASSERT
, "rn_mkjobstep:Ñn_cast_attr_typconv() = !p_attrd");

238  
NULL
;

241  
p_°ïX
;

242 
	}
}

	@lib/rnode/rn_provision.c

1 
	~"rmfs.h
"

12 
∫ode_t
 *

13 
	$∫_¥ovisi⁄
(
∫ode_t
 *
p_∑ª¡
,Ñnode_à*
∫_¥o
) {

14 
∫ode_t
 *
p_√w
, *
p_i
;

15 
time_t
 
t
;

16 
∫_∑øm_t
 *
p_∫_∑ømèb
;

17 
i
, 
¥ev_cuøŒoc
, 
ba£Æloc
, 
n_Æloc
, 
n
;

19 
	`∫_poﬁöô
();

20 
∫ode_t
 *
	`∫_Æloc
();

22 
p_∫_∑ømèb
 = 
	`gë_∫_∑øms
–
TRUE
);

23 i‡(!
p_∫_∑ømèb
) {

24  
NULL
;

26 i‡(!
p_∫_∑ømèb
->
∫_poﬁ
) {

27 
	`∫_poﬁöô
();

29 i‡(!
∫_¥o
) {

30  
NULL
;

32 i‡(
∫_¥o
->
n_chûdªn
 <= 0) {

33  
NULL
;

36 
n_Æloc
 = 
∫_¥o
->
n_chûdªn
;

37 
¥ev_cuøŒoc
 = 
p_∫_∑ømèb
->
∫_cuøŒoc
;

38 
ba£Æloc
 = 
p_∫_∑ømèb
->
∫_ba£Æloc
;

40 i‡(!(
p_√w
 = 
	`∫_Æloc
(
n_Æloc
))) {

41 
out
;

43 i‡(
	`mem£t
(
p_√w
, 0, (
∫ode_t
Ë* 
n_Æloc
) !=Ö_new) {

44 
	`EºExô
(
EºExô_NOMEM
, "rn_provistion: memset");

45 
p_√w
 = 
NULL
;

46 
out
;

48 
i
 = 0, 
n
 = 
n_Æloc
, 
p_i
 = 
p_√w
; i <Ç; i++,Ö_i++) {

49 
	`time
(&
t
);

50 
p_i
->
πy≥
 = 
RN_GUARD
;

51 
p_i
->
˘ime
 = 
t
;

52 
p_i
->
buûd‚
 = 
NULL
;

53 
p_i
->
∑ª¡
 = 
p_∑ª¡
;

54 
p_i
->
röo
 = 
ba£Æloc
 + 
¥ev_cuøŒoc
 + 
i
;

55 
p_i
->
uid
 = 
p_∫_∑ømèb
->
rm_uid
[
RM_UID_CTL
];

56 
p_i
->
gí
 = 0;

59 
out
:

60 
	`∫_∑ømèb_ªÀa£
();

61  
p_√w
;

62 
	}
}

	@lib/rnode/rn_public.c

2 
	~"rmfs.h
"

19 
	g∫ode_t
 *

20 (*
	$gë_∫_buûd‚
(
∫_ty≥_t
 
πyp
))(
∫ode_t
 *,Ñnode_t *) {

21 
∫ode_t
 *
p_∫
;

22 
∫ode_t
 *(*
p_buûd‚
)(rnode_t *,Ñnode_t *);

24 i‡(!
	`IS_RTYPE_BUILDABLE
(
πyp
)) {

25 
	`EºExô
(
EºExô_ASSERT
, "get_rn_buildfn: unbuildableÑtyp");

26  
NULL
;

28 
p_∫
 = &
∫ode_buûdèb
[
πyp
];

29 i‡(!
p_∫
) {

30 
	`EºExô
(
EºExô_ASSERT
, "get_rn_buildfn:ÇullÑnode_buildtab[rtyp]");

31  
NULL
;

33 
p_buûd‚
 = 
p_∫
->
buûd‚
;

34 i‡(!
p_buûd‚
) {

35 
	`EºExô
(
EºExô_ASSERT
, "get_rn_buildfn:ÇullÑnode_buildtab[rtyp].buildfn");

36  
NULL
;

38  
p_buûd‚
;

39 
	}
}

46 
	$mk_fs
() {

47 
∫ode_t
 *
p_√w
;

48 
∫ode_t
 *(*
p_buûd‚
)(rnode_t *,Ñnode_t *);

50 
	`efÊuvüã_f°ªe
(
∫ode_t
 *, );

51 
	`∫_poﬁöô
();

53 
	`∫_poﬁöô
();

55 
p_buûd‚
 = 
	`gë_∫_buûd‚
(
RND_ROOT
);

56 i‡(!
p_buûd‚
) {

57 
	`EºExô
(
EºExô_INTERNAL
, "mk_fs(no build func)");

60 i‡(!(
p_√w
 = (*
p_buûd‚
)–
NULL
, 0))) {

61 
	`EºExô
(
EºExô_INTERNAL
, "mk_fs: buildÑnode(RND_ROOT) failed");

65 
	}
}

	@lib/rnode/rn_subr.c

1 
	~"rmfs.h
"

9 
	$©å_˙t_˝
(
∫_ty≥_t
 
πy≥
) {

10 
c⁄fig_∑øm_t
 *
p_˝
;

11 *
nm
;

12 
hash
, 
n_©å
;

13 
	`åi_t
 (*
is_möe
)(
c⁄fig_∑øm_t
 *);

15 
p_˝
 = 
NULL
;

17 i‡(!
	`IS_RTYPE_VALID
(
πy≥
)) {

18 
	`EºExô
(
EºExô_INTERNAL
, "attr_cnt_cp: invalidÑtype");

21 
nm
 = 
∫ode_buûdèb
[
πy≥
].nm;

22 i‡(!
nm
) {

23 
	`EºExô
(
EºExô_INTERNAL
, "attr_cnt_cp: !nm forÑtype");

25 
hash
 = 
	`djb_°πohash
(
nm
);

26 i‡(!
	`IS_VALID_HASH
(
hash
)) {

27 
	`EºExô
(
EºExô_INTERNAL
, "attr_cnt_cp: invalid hash forÑtypeÇm");

29 
is_möe
 = 
∫ode_buûdèb
[
πy≥
].
©å_desc
.is_mine;

30 
n_©å
 = 0;

31 
p_˝
 = 
∫ode_buûdèb
[
πy≥
].
©å_desc
.
èbÀ
;Ö_˝->
nm
;Ö_cp++){

33 i‡(!
	`IS_VALID_HASH
(
p_˝
->
h
)) {

34 
	`öô_hash_˝
(
p_˝
);

37 i‡(!
is_möe
 || (*is_möe)(
p_˝
)) {

38 
n_©å
++;

41 i‡(
n_©å
 <= 0) {

42 
	`EºExô
(
EºExô_INTERNAL
, "attr_cnt_cp:Ç_attr <= 0");

44  
n_©å
;

45 
	}
}

49 
	$lök_x©å2∫
 (
∫ode_t
 *
p_∫
, 
c⁄fig_∑øm_t
 *
p_˝
) {

51 i‡(!
p_∫
) {

52 
	`EºExô
(
EºExô_INTERNAL
, "link_xattr2rn: !p_rn");

54 i‡(!
p_˝
) {

55 
	`EºExô
(
EºExô_INTERNAL
, "link_xattr2rn: !p_cp");

59 i‡(
p_˝
->
p_nxt
) {

60 
	`EºExô
(
EºExô_INTERNAL
, "link_xattr2rn:Ö_cp->p_nxtálready set");

62 i‡(
p_∫
->
x©å
) {

63 
p_˝
->
p_nxt
 = 
p_∫
->
x©å
;

65 
p_∫
->
x©å
 = 
p_˝
;

66 
p_∫
->
n_x©å
 += 1;

70 
	}
}

	@lib/rnode/rn_tab.c

1 
	~"rmfs.h
"

19 
∫ode_t
 *
∫_¥ovisi⁄
(rnode_t *,Ñnode_t *);

20 
∫ode_t
 *
∫_mkf§oŸ
(rnode_t *,Ñnode_t *);

21 
∫ode_t
 *
∫_mk˙ame
(rnode_t *,Ñnode_t *);

22 
∫ode_t
 *
∫_mk∑πd
(rnode_t *,Ñnode_t *);

23 
∫ode_t
 *
∫_mk∑π
(rnode_t *,Ñnode_t *);

24 
∫ode_t
 *
∫_mknoded
(rnode_t *,Ñnode_t *);

25 
∫ode_t
 *
∫_mknode
(rnode_t *,Ñnode_t *);

26 
∫ode_t
 *
∫_mkjobd
(rnode_t *,Ñnode_t *);

27 
∫ode_t
 *
∫_mkjobid
(rnode_t *,Ñnode_t *);

28 
∫ode_t
 *
∫_mkjob°ïd
(rnode_t *,Ñnode_t *);

29 
∫ode_t
 *
∫_mkjob°ï
(rnode_t *,Ñnode_t *);

30 
∫ode_t
 *
∫_mkn°©e
(rnode_t *,Ñnode_t *);

31 
∫ode_t
 *
∫_mkÆlocjob
(rnode_t *,Ñnode_t *);

32 
∫ode_t
 *
∫_mk©åd
(rnode_t *,Ñnode_t *);

33 
∫ode_t
 *
∫_mk©å
(rnode_t *,Ñnode_t *);

34 
∫ode_t
 *
∫_mk˘ld
(rnode_t *,Ñnode_t *);

35 
∫ode_t
 *
∫_øze
(rnode_t *,Ñnode_t *);

37 
åi_t
 
∫_˘ÃoŸ_check
(
∫ode_t
 *, 
c⁄fig_∑øm_t
 *);

38 
åi_t
 
∫_˘ÃoŸ_efÊuvüã
(
∫ode_t
 *, 
c⁄fig_∑øm_t
 *);

39 
åi_t
 
∫_˘ÃoŸ_umou¡
(
∫ode_t
 *, 
c⁄fig_∑øm_t
 *);

40 
åi_t
 
∫_˘ÃoŸ_wrôe
(
∫ode_t
 *, 
c⁄fig_∑øm_t
 *);

42 
åi_t
 
∫_˘ljobid_sign
(
∫ode_t
 *, 
c⁄fig_∑øm_t
 *);

43 
åi_t
 
∫_˘ljobid_ªad
(
∫ode_t
 *, 
c⁄fig_∑øm_t
 *);

44 
åi_t
 
∫_˘ljobid_wrôe
(
∫ode_t
 *, 
c⁄fig_∑øm_t
 *);

46 
åi_t
 
is_f§oŸ_©å
(
c⁄fig_∑øm_t
 *);

47 
åi_t
 
is_˙ame_©å
(
c⁄fig_∑øm_t
 *);

49 
∫ode_t
 
	g∫ode_buûdèb
[] = {

50 { .
πy≥
=
RN_PROVISION
, .
	gnm
="¥ovisi⁄", .
	gbuûd‚
=
∫_¥ovisi⁄
 },

51 { .
	gπy≥
=
RN_GUARD
, .
	gnm
="[[gu¨d]]", .
	gbuûd‚
=
NULL
 },

52 { .
	gπy≥
=
RND_ROOT
, .
	gnm
="Mou¡Poöt", .
	gbuûd‚
=
∫_mkf§oŸ
, .
	gis
.
	gdú
=1,

53 .
	g˘l
={{.
πy≥
=
RNF_KNOB
, .
	gnm
="check", .
	g‚
=
∫_˘ÃoŸ_umou¡
, },

54 {.
	gπy≥
=
RNF_KNOB
, .
	gnm
="efÊuvüã", .
	g‚
=
∫_˘ÃoŸ_efÊuvüã
 },

55 {.
	gπy≥
=
RNF_KNOB
, .
	gnm
="umou¡", .
	g‚
=
∫_˘ÃoŸ_check
, },

56 {.
	gπy≥
=
RNF_KNOB
, .
	gnm
="wrôe", .
	g‚
=
∫_˘ÃoŸ_wrôe
 },

57 {.
	gnm
=
NULL
} } ,

58 .
	gmaybe
.
	gªadabÀ
 = 
TRUE
,

59 .
	g©å_desc
 = { .
èbÀ
=
¶urmfs_c⁄fig
, .
	gis_möe
=
is_f§oŸ_©å
 } },

61 { .
	gπy≥
=
RND_CLUSTER
, .
	gnm
="Clu°îName", .
	gbuûd‚
=
∫_mk˙ame
, .
	gis
.
	gdú
=1,

62 .
	gmaybe
.
	gªadabÀ
 = 
TRUE
,

63 .
	g©å_desc
 = { .
èbÀ
=
¶urmfs_c⁄fig
, .
	gis_möe
=
is_˙ame_©å
 } },

65 { .
	gπy≥
=
RND_PARTS
, .
	gnm
="∑πôi⁄s", .
	gbuûd‚
=
∫_mk∑πd
, .
	gis
.
	gdú
=1,

66 .
	gmaybe
.
	gªadabÀ
 = 
TRUE
 },

67 { .
	gπy≥
=
RND_PARTNAME
, .
	gnm
="<∑πôi⁄>", .
	gbuûd‚
=
∫_mk∑π
, .
	gis
.
	gdú
=1,

68 .
	gmaybe
.
	gªadabÀ
 = 
TRUE
,

69 .
	g©å_desc
.
	gèbÀ
=
∑πöfodesc_èb
 },

71 { .
	gπy≥
=
RND_NODES
, .
	gnm
="nodes", .
	gbuûd‚
=
∫_mknoded
, .
	gis
.
	gdú
=1,

72 .
	gmaybe
.
	gªadabÀ
 = 
TRUE
 },

73 { .
	gπy≥
=
RND_NODENAME
, .
	gnm
="<node>", .
	gbuûd‚
=
∫_mknode
, .
	gis
.
	gdú
=1,

74 .
	gmaybe
.
	gªadabÀ
 = 
TRUE
,

75 .
	g©å_desc
.
	gèbÀ
=
nodeöfodesc_èb
 },

77 { .
	gπy≥
=
RND_JOBS
, .
	gnm
="jobs", .
	gbuûd‚
=
∫_mkjobd
, .
	gis
.
	gdú
=1,

78 .
	gmaybe
.
	gªadabÀ
 = 
TRUE
 },

79 { .
	gπy≥
=
RND_JOBID
, .
	gnm
="<jobid>", .
	gbuûd‚
=
∫_mkjobid
, .
	gis
.
	gdú
=1,

80 .
	g˘l
={{.
πy≥
=
RNF_SIGNATURE
, .
	gnm
="sign", .
	g‚
=
∫_˘ljobid_sign
 },

81 {.
	gπy≥
=
RNF_KNOB
, .
	gnm
="ªad", .
	g‚
=
∫_˘ljobid_ªad
 },

82 {.
	gπy≥
=
RNF_KNOB
, .
	gnm
="wrôe", .
	g‚
=
∫_˘ljobid_wrôe
 },

83 {.
	gnm
=
NULL
} } ,

84 .
	gmaybe
.
	gªadabÀ
 = 
TRUE
,

85 .
	g©å_desc
.
	gèbÀ
=
joböfodesc_èb
 },

87 { .
	gπy≥
=
RND_JOBSTEPS
, .
	gnm
="job°ïs", .
	gbuûd‚
=
∫_mkjob°ïd
, .
	gis
.
	gdú
=1,

88 .
	gmaybe
.
	gªadabÀ
 = 
TRUE
 },

89 { .
	gπy≥
=
RND_JOBSTEPID
, .
	gnm
="<job°ïid>", .
	gbuûd‚
=
∫_mkjob°ï
, .
	gis
.
	gdú
=1,

90 .
	gmaybe
.
	gªadabÀ
 = 
TRUE
,

91 .
	g©å_desc
.
	gèbÀ
=
°ïöfodesc_èb
 },

93 { .
	gπy≥
=
RND_NODESTATE
, .
	gnm
="°©e", .
	gbuûd‚
=
∫_mkn°©e
, .
	gis
.
	gdú
=1,

94 .
	gmaybe
.
	gªadabÀ
 = 
TRUE
 },

95 { .
	gπy≥
=
RNF_ALLOCJOB
, .
	gnm
="<jobidªf>", .
	gbuûd‚
=
∫_mkÆlocjob
,

96 .
	gmaybe
.
	gªadabÀ
 = 
TRUE
,

97 #ifde‡
_XXX_symlök_ALLOCJOB


98  .
	gis
.
	glök
=1 },

100 .
	gis
.
	gfûe
=1 },

102 { .
	gπy≥
=
RND_ATTRIBUTES
, .
	gnm
="©åibuãs", .
	gbuûd‚
=
∫_mk©åd
, .
	gis
.
	gdú
=1,

103 .
	gmaybe
.
	gªadabÀ
=1 },

104 { .
	gπy≥
=
RNF_ATTRIBUTE
, .
	gnm
="<©åibuã>", .
	gbuûd‚
=
∫_mk©å
, .
	gis
.
	gfûe
=1,

105 .
	gmaybe
.
	gªadabÀ
=1 },

107 { .
	gπy≥
=
RND_CONTROL
, .
	gnm
="c⁄åﬁ", .
	gbuûd‚
=
∫_mk˘ld
, .
	gis
.
	gdú
=1,

108 .
	gmaybe
.
	gc⁄åﬁœbÀ
=1, .maybe.
	gªadabÀ
=1 },

109 { .
	gπy≥
=
RNF_CONTEXT
, .
	gnm
="c⁄ãxt", .
	gbuûd‚
=
∫_mk©å
, .
	gis
.
	gfûe
=1,

110 .
	gmaybe
.
	gwrôabÀ
=1, .maybe.
	gªadabÀ
=1 },

111 { .
	gπy≥
=
RNF_KNOB
, .
	gnm
="<knob>", .
	gbuûd‚
=
∫_mk©å
, .
	gis
.
	gfûe
=1,

112 .
	gmaybe
.
	gexeˇbÀ
=1, .maybe.
	gc⁄åﬁœbÀ
=1, .maybe.
	gªadabÀ
=1 },

113 { .
	gπy≥
=
RNF_SIGNATURE
, .
	gnm
="sig«tuª", .
	gbuûd‚
=
∫_mk©å
, .
	gis
.
	gfûe
=1,

114 .
	gmaybe
.
	gªadabÀ
=1 },

116 { .
	gπy≥
=
RND_PARAMS
, .
	gnm
="∫_∑ømëîs", .
	gbuûd‚
=
NULL
 , .
	gis
.
	gdú
=1,

117 .
	gmaybe
.
	gªadabÀ
=1 },

119 { .
	gπy≥
=
RN_LAST
, .
	gnm
="øze", .
	gbuûd‚
=
∫_øze
 }

134 
±2∫_t
 
	gp2r_typ_c⁄vèb
[] = {

135 { .
±yp
=
PTYP_NONE
, .
	gπyp
=
RN_NONE
 },

136 { .
	g±yp
=
PTYP_OPAQUE
, .
	gπyp
=
RNF_ATTRIBUTE
 },

137 { .
	g±yp
=
PTYP_ALPHANUM
, .
	gπyp
=
RNF_ATTRIBUTE
 },

138 { .
	g±yp
=
PTYP_ALPHA
, .
	gπyp
=
RNF_ATTRIBUTE
 },

139 { .
	g±yp
=
PTYP_NUMERICHAR
, .
	gπyp
=
RNF_ATTRIBUTE
 },

140 { .
	g±yp
=
PTYP_ALPHA_P2P
, .
	gπyp
=
RNF_ATTRIBUTE
 },

141 { .
	g±yp
=
PTYP_XATTR
, .
	gπyp
=
RNF_ATTRIBUTE
 },

142 { .
	g±yp
=
PTYP_PATH
, .
	gπyp
=
RNF_ATTRIBUTE
 },

143 { .
	g±yp
=
PTYP_FILE
, .
	gπyp
=
RNF_ATTRIBUTE
 },

144 { .
	g±yp
=
PTYP_FILEXIST
, .
	gπyp
=
RNF_ATTRIBUTE
 },

145 { .
	g±yp
=
PTYP_SYM
, .
	gπyp
=
RNF_ATTRIBUTE
 },

146 { .
	g±yp
=
PTYP_DIREXIST
, .
	gπyp
=
RNF_ATTRIBUTE
 },

147 { .
	g±yp
=
PTYP_DIR
, .
	gπyp
=
RNF_ATTRIBUTE
 },

148 { .
	g±yp
=
PTYP_HOSTNAME
, .
	gπyp
=
RNF_ATTRIBUTE
 },

149 { .
	g±yp
=
PTYP_NUMERIC
, .
	gπyp
=
RNF_ATTRIBUTE
 },

150 { .
	g±yp
=
PTYP_NUMERICTIME
, .
	gπyp
=
RNF_ATTRIBUTE
 },

151 { .
	g±yp
=
PTYP_NUMTIM_SECS
, .
	gπyp
=
RNF_ATTRIBUTE
 },

152 { .
	g±yp
=
PTYP_NUMSIGNED
, .
	gπyp
=
RNF_ATTRIBUTE
 },

153 { .
	g±yp
=
PTYP_UNSIGNED_INT
, .
	gπyp
=
RNF_ATTRIBUTE
 },

154 { .
	g±yp
=
PTYP_UNSIGNED_INT16
, .
	gπyp
=
RNF_ATTRIBUTE
 },

155 { .
	g±yp
=
PTYP_UNSIGNED_INT32
, .
	gπyp
=
RNF_ATTRIBUTE
 },

156 { .
	g±yp
=
PTYP_UID
, .
	gπyp
=
RNF_ATTRIBUTE
 },

157 { .
	g±yp
=
PTYP_PID
, .
	gπyp
=
RNF_ATTRIBUTE
 },

158 { .
	g±yp
=
PTYP_TRILENE
, .
	gπyp
=
RNF_ATTRIBUTE
 },

159 { .
	g±yp
=
PTYP_BOOLEAN
, .
	gπyp
=
RNF_ATTRIBUTE
 },

160 { .
	g±yp
=
PTYP_SIGNATURE
, .
	gπyp
=
RNF_SIGNATURE
 },

161 { .
	g±yp
=
PTYP_CONTEXT
, .
	gπyp
=
RNF_CONTEXT
 },

162 { .
	g±yp
=
PTYP_NONE
 }

165 
±2∫_t
 
	gp2r_typ_rm_c⁄vèb
[] = {

166 { .
±yp
=
PTYP_CLUSTER
, .
	gπyp
=
RNF_ATTRIBUTE
 },

167 { .
	g±yp
=
PTYP_CNTRLMACH
, .
	gπyp
=
RNF_ATTRIBUTE
 },

168 { .
	g±yp
=
PTYP_PARTITION
, .
	gπyp
=
RNF_ATTRIBUTE
 },

169 { .
	g±yp
=
PTYP_NODE
, .
	gπyp
=
RNF_ATTRIBUTE
 },

170 { .
	g±yp
=
PTYP_JOB
, .
	gπyp
=
RNF_ATTRIBUTE
 },

171 { .
	g±yp
=
PTYP_STEP
, .
	gπyp
=
RNF_ATTRIBUTE
 },

172 { .
	g±yp
=
PTYP_ALLOCJOB
, .
	gπyp
=
RNF_ALLOCJOB
 },

173 { .
	g±yp
=
PTYP_NODESTATE
, .
	gπyp
=
RNF_ATTRIBUTE
 },

174 { .
	g±yp
=
PTYP_SLURMVERSION
, .
	gπyp
=
RNF_ATTRIBUTE
 },

175 { .
	g±yp
=
PTYP_SLURMUID
, .
	gπyp
=
RNF_ATTRIBUTE
 },

176 { .
	g±yp
=
PTYP_SLURMTMOUT
, .
	gπyp
=
RNF_ATTRIBUTE
 },

177 { .
	g±yp
=
PTYP_SPANKENV
, .
	gπyp
=
RNF_ATTRIBUTE
 },

178 { .
	g±yp
=
PTYP_SPANKENVSIZE
, .
	gπyp
=
RNF_ATTRIBUTE
 },

179 { .
	g±yp
=
PTYP_JSUB_PLUGIN
, .
	gπyp
=
RNF_ATTRIBUTE
 },

180 { .
	g±yp
=
PTYP_GRES_PLUGIN
, .
	gπyp
=
RNF_ATTRIBUTE
 },

181 { .
	g±yp
=
PTYP_SLURMUNAME
, .
	gπyp
=
RNF_ATTRIBUTE
 },

182 { .
	g±yp
=
PTYP_SLURMDUNAME
, .
	gπyp
=
RNF_ATTRIBUTE
 },

183 { .
	g±yp
=
PTYP_NONE
 }

	@slu_rmfs/.ingest.c

11 
	~"rmfs.h
"

34 
∑øm_sour˚_t
 
c⁄°ru˘_fu£_mou¡›ts
(
c⁄fig_∑øm_t
 *);

35 
∑øm_sour˚_t
 
cﬁÀ˘_fu£_mou¡›ts
(
c⁄fig_∑øm_t
 *);

36 
∑øm_sour˚_t
 
cﬁÀ˘_ív
(
c⁄fig_∑øm_t
 *);

37 
∑øm_sour˚_t
 
cﬁÀ˘_macc⁄f
(
c⁄fig_∑øm_t
 *);

38 
∑øm_sour˚_t
 
cﬁÀ˘_¶urm
(
c⁄fig_∑øm_t
 *);

39 
∑øm_sour˚_t
 
cﬁÀ˘_deÁu…
(
c⁄fig_∑øm_t
 *);

40 
∑øm_sour˚_t
 
ˇlcul_dîived
(
c⁄fig_∑øm_t
 *);

42 
	$∑øm_sour˚_t
 (*
∑øm_cﬁÀ˘i⁄_fun˘ab
[])(
c⁄fig_∑øm_t
 *) = {

43 
cﬁÀ˘_macc⁄f
,

44 
cﬁÀ˘_¶urm
,

45 
cﬁÀ˘_ív
,

46 
c⁄°ru˘_fu£_mou¡›ts
,

47 
cﬁÀ˘_fu£_mou¡›ts
,

48 
NULL
,

49 
NULL
,

50 
cﬁÀ˘_deÁu…
,

51 
ˇlcul_dîived
,

52 
NULL


53 
	}
};

56 *
	g§c2°r
[] = {

67 
NULL


77 
	$c⁄fig_c⁄si°ít_com∂ëe
() {

78 
c⁄fig_∑øm_t
 *
p_˝
;

79 
¶urm_fu£_›t_desc_t
 *
p_f›
;

80 
c⁄fig_∑øm_t
 *
p_˝_Debug
;

81 
åi_t
 
debug
 = 
FALSE
;

83 
ex˛usive
 = 0;

84 
missög_dïídícy
 = 0;

85 
missög_m™d©‹y
 = 0;

86 
⁄ly_if_debug
 = 0;

88 
p_˝_Debug
 = 
	`gëc⁄fig_‰omnm
("Debug");

89 i‡(!
p_˝_Debug
) {

90  
FALSE
;

92 i‡(
p_˝_Debug
->
vÆ
.
ue
.
åuth
) {

93 
debug
 = 
TRUE
;

96 
p_f›
 = 
¶urm_f›ts
;Ö_f›->
nm
;Ö_fop++) {

97 i‡(!
p_f›
->
p_˝
) {

100 
p_˝
 = 
p_f›
->p_cp;

101 i‡((
p_f›
->
oÊg
 & 
OPT_MANDATORY
Ë&& 
	`NOBITS
(
p_˝
->
§c
.
a˘uÆ
)) {

102 
missög_m™d©‹y
++;

104 i‡((
p_f›
->
oÊg
 & 
OPT_VALID_IF_DEBUG
Ë&& (!
debug
 && 
p_˝
->
§c
.debug)) {

105 
⁄ly_if_debug
++;

107 i‡((
p_f›
->
oÊg
 & 
OPT_EXCLUSIVE
Ë&& 
	`ANY
(
p_˝
->
§c
.
a˘uÆ
)) {

108 
ex˛usive
++;

123 
p_˝
 = &
¶urmfs_c⁄fig
[0];Ö_˝->
nm
;Ö_cp++) {

124 i‡(
	`ANY
(
p_˝
->
§c
.
a˘uÆ
Ë&&Ö_˝->
dïíds_⁄
.
nm
) {

125 i‡(!
p_˝
->
dïíds_⁄
.p_cp) {

126 
missög_dïídícy
++;

131 i‡(
missög_dïídícy
 > 0 || 
missög_m™d©‹y
 > 0 || 
⁄ly_if_debug
 > 0 ||

132 
ex˛usive
 > 1

134  
FALSE
;

136  
TRUE
;

137 
	}
}

141 
	$öge°_c⁄fig
(
∑ss_no
)

143 
c⁄fig_∑øm_t
 *
p_˝
, *
p_˝_Debug
;

144 
∑øm_sour˚_t
 
rc_§c
;

145 
åi_t
 
debug
;

146 
∑øm_sour˚_t
 
	`cﬁÀ˘_˝
(
c⁄fig_∑øm_t
 *);

148 #ifde‡
XXX_BackögSt‹e_hﬁds_¥evious_°©e


149 
p_BackögSt‹e_˝
 = 
	`gëc⁄fig_‰omnm
("BackingStore");

150 i‡(
	`ck_¥evMou¡Sèã
(
p_BackögSt‹e_˝
Ë=
TRUE
) {

151 
	`ªcovî_¥evMou¡Sèã
(
p_BackögSt‹e_˝
);

154 i‡(
∑ss_no
 =
PREV_GENERATION
) {

159 
p_˝
 = &
¶urmfs_c⁄fig
[0];Ö_˝->
nm
;Ö_cp++) {

160 
rc_§c
 = 
	`cﬁÀ˘_˝
(
p_˝
);

163 
p_˝_Debug
 = 
	`gëc⁄fig_‰omnm
("Debug");

164 i‡(!
p_˝_Debug
) {

165 
	`EºExô
(
EºExô_INTERNAL
, "ingest_config: cannot find DebugÖ_cp");

167 
rc_§c
 = 
	`cﬁÀ˘_˝
(
p_˝_Debug
);

169 i‡(
	`NOBITS
(
rc_§c
)) {

170 
	`EºExô
(
EºExô_INTERNAL
, "ingest_config: cannot determine \"Debug\" mode");

172 
debug
 = 
p_˝_Debug
->
vÆ
.
ue
.
åuth
;

173 i‡(
	`Debug
(Ë&& 
∑ss_no
 == 0) {

174 
	`öge°_c⁄fig
(
∑ss_no
+1);

177 i‡(!
	`c⁄fig_c⁄si°ít_com∂ëe
()) {

178 
	`Ußge
 (
EºExô_INCOMPLETE
, "configuration is inconsistent or incomplete");

181 
	}
}

	@slu_rmfs/.mount.c

2 
	~"rmfs.h
"

8 
FILE
 *

9 
	$Æªady_mou¡ed
() {

10 
c⁄fig_∑øm_t
 *
mpfûe_˝
, *
pidfûe_˝
;

11 
FILE
 *
¥ev_˘lfûe
;

12 *
¥ev_mp
;

13 
size_t
 
sz
;

14 
¥ev_mp_˘l
[
_POSIX_PATH_MAX
];

16 
mpfûe_˝
 = 
	`gëc⁄fig_‰omnm
("mountpointfile");

17 
pidfûe_˝
 = 
	`gëc⁄fig_‰omnm
("pidfile");

19 i‡(!
mpfûe_˝
) {

20 
	`EºExô
(
EºExô_INTERNAL
, "already_mounted: !mpfile_cp");

22 i‡(!
pidfûe_˝
) {

23 
	`EºExô
(
EºExô_INTERNAL
, "already_mounted: !pidfile_cp");

26 i‡(!
mpfûe_˝
->
vÆ
.
pd
.
fuŒ∑th
) {

27  
NULL
;

29 i‡(!
pidfûe_˝
->
vÆ
.
pd
.
fuŒ∑th
) {

30  
NULL
;

36 i‡(!
mpfûe_˝
->
vÆ
.
pd
.
f°r
) {

37 
	`EºExô
(
EºExô_INTERNAL
, "already_mounted: mpfile:Ço fstr");

39 i‡(!
pidfûe_˝
->
vÆ
.
pd
.
f°r
) {

40 
	`EºExô
(
EºExô_INTERNAL
, "already_mounted:Öidfile:Ço fstr");

43 
sz
 = 
	`fsˇnf
(
mpfûe_˝
->
vÆ
.
pd
.
f°r
, "%as", &
¥ev_mp
);

44 i‡(
sz
 =
EOF
 || sz == 0) {

45 
	`EºExô
(
EºExô_INTERNAL
, "already_mounted:Örev_mp fscanf");

48 (Ë
	`°æ˝y
(
¥ev_mp_˘l
, 
¥ev_mp
, 
_POSIX_PATH_MAX
);

49 
sz
 = 
	`°æˇt
(
¥ev_mp_˘l
, "/c⁄åﬁ", 
_POSIX_PATH_MAX
);

50 i‡(
sz
 <= 0) {

51 
	`EºExô
(
EºExô_INTERNAL
, "already_mounted: strlcatÖrev_mp_ctl");

54 i‡(!(
¥ev_˘lfûe
 = 
	`f›í
(
¥ev_mp_˘l
, "r+"))) {

55 
	`EºExô
(
EºExô_INTERNAL
, "already_mounted: fopen(prev_mp_ctrl)");

57 
	`£tvbuf
(
¥ev_˘lfûe
, 
NULL
, 
_IONBF
, 
BUFSIZ
);

58  
¥ev_˘lfûe
;

59 
	}
}

63 
	$ª˛aim_fûes
() {

64 
c⁄fig_∑øm_t
 *
mpfûe_˝
, *
pidfûe_˝
;

65 
	`v¨run_›í˝
(
c⁄fig_∑øm_t
 *);

67 
pidfûe_˝
 = 
	`gëc⁄fig_‰omnm
("pidfile");

68 
mpfûe_˝
 = 
	`gëc⁄fig_‰omnm
("mountpointfile");

70 i‡(!
pidfûe_˝
) {

71 
	`EºExô
(
EºExô_INTERNAL
, "reclaim_files: !pidfile_cp");

73 i‡(!
mpfûe_˝
) {

74 
	`EºExô
(
EºExô_INTERNAL
, "reclaim_files: !mpfile_cp");

76 i‡(
	`v¨run_›í˝
(
pidfûe_˝
) < 0) {

77 
	`EºExô
(
EºExô_INTERNAL
, "reclaim_files: varrun_opencp(pidfile_cp)");

79 i‡(
	`v¨run_›í˝
(
mpfûe_˝
) < 0) {

80 
	`EºExô
(
EºExô_INTERNAL
, "reclaim_files: varrun_opencp(mpfile_cp)");

83 
	}
}

85 
åi_t


86 
	$ªque°_unmou¡
(
FILE
 *
¥ev_˘lfûe
, 
waôed_f‹
) {

87 
c⁄fig_∑øm_t
 *
unmou¡waô_˝
, *
pid_˝
;

88 
w
, 
rc
;

89 
î∫o
;

91 i‡(!
¥ev_˘lfûe
) {

92  
FALSE
;

95 
pid_˝
 = 
	`gëc⁄fig_‰omnm
("pid");

96 
unmou¡waô_˝
 = 
	`gëc⁄fig_‰omnm
("unmountwait");

98 i‡((
rc
 = 
	`Ârötf
(
¥ev_˘lfûe
, "umount")) < 0) {

99 
e
 = 
î∫o
;

100 i‡(
e
 !
ENOENT
 &&É !
EACCES
) {

101 
	`EºExô
(
EºExô_STUCK
, "request_unmount: fprintf(prev_mp_ctl, \"umount\")");

108 
w
 = 
unmou¡waô_˝
->
vÆ
.
ue
.
l
;

109 i‡((
rc
 < 0Ë&& (
w
 > 0Ë&& (
waôed_f‹
 < w)) {

111 
	`EºExô
(
EºExô_WARN
, "request_unmount: waiting forÖredecessor");

112 
	`¶ìp
(
w
);

113 
	`ªque°_unmou¡
(
¥ev_˘lfûe
, 
w
);

115 i‡(
	`Æªady_mou¡ed
()) {

116 
	`EºExô
(
EºExô_STUCK
, "request_unmount: waitedÅooÜong, still mounted");

119 
	`ª˛aim_fûes
();

120  
TRUE
;

121 
	}
}

	@slu_rmfs/.slu_rmfs.c

2 
	~"rmfs.h
"

15 
	$maö
(
ac
, **
av
) {

16 
fu£_›î©i⁄s
 
rmfs_fûe_›s
;

17 
	`mk_fs
();

18 
FILE
 *
¥ev_˘lfûe
, *
	`Æªady_mou¡ed
();

19 
åi_t
 
	`ªque°_unmou¡
(
FILE
 *, );

21 
fu£_¨gs
 
f_¨gs
;

24 
f_¨gs
.
¨gc
 = 
ac
;

25 
f_¨gs
.
¨gv
 = 
av
;

26 
f_¨gs
.
Æloˇãd
 = 0;

28 
	`öge°_c⁄fig
(
INITIAL_START
);

29 
	`mk_fs
();

31 i‡((
¥ev_˘lfûe
 = 
	`Æªady_mou¡ed
())) {

32 
	`ªque°_unmou¡
(
¥ev_˘lfûe
, 0);

34 
	`öge°_c⁄fig
(
PREV_GENERATION
);

36 
	`fu£_maö
(
ac
, 
av
, &
rmfs_fûe_›s
, 
NULL
);

40 
	`CÀ™Exô
();

41  
ExôOK
;

42 
	}
}

	@slu_rmfs/.usage.c

7 
	~"rmfs.h
"

9 *
	gpußge_msg
;

16 
	$Ußge
(
îr
, *
msg
) {

18 
	`EºExô
 (
îr
?Éº: 
EºExô_ARGPARSE
, 
msg
? msg: "usageÉrror");

20 
	}
}

27 
	gˇught_ö_a_lo›
 = 0;

30 
	$EºExô
(
îr
, *
msg
) {

31 
c⁄fig_∑øm_t
 *
p_˝
;

33 i‡(
msg
) {

34 
	`wrôe
(2, 
msg
, 
	`°æí
(msg));

35 
	`wrôe
(2, "\n", 1);

36 
	`fsync
(2);

38 
îr
) {

39 
EºExô_ASSERT
:

40 
p_˝
 = 
	`gëc⁄fig_‰omnm_nohash
("Debug");

41 i‡(
ˇught_ö_a_lo›
 =0 && 
p_˝
 &&Ö_˝->
vÆ
.
ue
.
ul
 == 0) {

42 
ˇught_ö_a_lo›
++;

47 
EºExô_WARN
:

52 
	`exô
 (
îr
);

53 
	}
}

56 
	$CÀ™Exô
() {

57 
	`EºExô
(
Exô_OK
, 
NULL
);

58 
	}
}

	@slu_rmfs/ingest.c

11 
	~"rmfs.h
"

34 
∑øm_sour˚_t
 
c⁄°ru˘_fu£_mou¡›ts
(
c⁄fig_∑øm_t
 *);

35 
∑øm_sour˚_t
 
cﬁÀ˘_fu£_mou¡›ts
(
c⁄fig_∑øm_t
 *);

36 
∑øm_sour˚_t
 
cﬁÀ˘_ív
(
c⁄fig_∑øm_t
 *);

37 
∑øm_sour˚_t
 
cﬁÀ˘_macc⁄f
(
c⁄fig_∑øm_t
 *);

38 
∑øm_sour˚_t
 
cﬁÀ˘_¶urm
(
c⁄fig_∑øm_t
 *);

39 
∑øm_sour˚_t
 
cﬁÀ˘_deÁu…
(
c⁄fig_∑øm_t
 *);

40 
∑øm_sour˚_t
 
ˇlcul_dîived
(
c⁄fig_∑øm_t
 *);

42 
	$∑øm_sour˚_t
 (*
∑øm_cﬁÀ˘i⁄_fun˘ab
[])(
c⁄fig_∑øm_t
 *) = {

43 
cﬁÀ˘_macc⁄f
,

44 
cﬁÀ˘_¶urm
,

45 
cﬁÀ˘_ív
,

46 
c⁄°ru˘_fu£_mou¡›ts
,

47 
cﬁÀ˘_fu£_mou¡›ts
,

48 
NULL
,

49 
NULL
,

50 
cﬁÀ˘_deÁu…
,

51 
ˇlcul_dîived
,

52 
NULL


53 
	}
};

56 *
	g§c2°r
[] = {

67 
NULL


75 
	$c⁄fig_c⁄si°ít_com∂ëe
() {

76 
c⁄fig_∑øm_t
 *
p_˝
;

77 
¶urm_fu£_›t_desc_t
 *
p_f›
;

78 
c⁄fig_∑øm_t
 *
p_˝_Debug
;

79 
åi_t
 
debug
 = 
FALSE
;

81 
ex˛usive
 = 0;

82 
missög_dïídícy
 = 0;

83 
missög_m™d©‹y
 = 0;

84 
⁄ly_if_debug
 = 0;

86 
p_˝_Debug
 = 
	`gëc⁄fig_‰omnm
("Debug");

87 i‡(!
p_˝_Debug
) {

88  
FALSE
;

90 i‡(
p_˝_Debug
->
vÆ
.
ue
.
åuth
) {

91 
debug
 = 
TRUE
;

94 
p_f›
 = 
¶urm_f›ts
;Ö_f›->
nm
;Ö_fop++) {

95 i‡(!
p_f›
->
p_˝
) {

98 
p_˝
 = 
p_f›
->p_cp;

99 i‡((
p_f›
->
oÊg
 & 
OPT_MANDATORY
Ë&& 
	`NOBITS
(
p_˝
->
§c
.
a˘uÆ
)) {

100 
missög_m™d©‹y
++;

102 i‡((
p_f›
->
oÊg
 & 
OPT_VALID_IF_DEBUG
Ë&& (!
debug
 && 
p_˝
->
§c
.debug)) {

103 
⁄ly_if_debug
++;

105 i‡((
p_f›
->
oÊg
 & 
OPT_EXCLUSIVE
Ë&& 
	`ANY
(
p_˝
->
§c
.
a˘uÆ
)) {

106 
ex˛usive
++;

121 
p_˝
 = &
¶urmfs_c⁄fig
[0];Ö_˝->
nm
;Ö_cp++) {

122 i‡(
	`ANY
(
p_˝
->
§c
.
a˘uÆ
Ë&&Ö_˝->
dïíds_⁄
.
nm
) {

123 i‡(!
p_˝
->
dïíds_⁄
.p_cp) {

124 
missög_dïídícy
++;

129 i‡(
missög_dïídícy
 > 0 || 
missög_m™d©‹y
 > 0 || 
⁄ly_if_debug
 > 0 ||

130 
ex˛usive
 > 1

132  
FALSE
;

134  
TRUE
;

135 
	}
}

139 
	$öge°_c⁄fig
(
öge°_cy˛e_t
 
∑ss_no
)

141 
c⁄fig_∑øm_t
 *
p_˝
;

142 
∑øm_sour˚_t
 
	`cﬁÀ˘_˝
(
c⁄fig_∑øm_t
 *);

143 
åi_t
 
	`cﬁÀ˘_¥ed°©e
();

144 
åi_t
 
	`Debug
();

147 
∑ss_no
) {

149 
INGEST_PREVSTATE
:

169 i‡(!
	`cﬁÀ˘_¥ed°©e
()) {

170 
	`EºExô
(
EºExô_WARN
, "ingest_config: PREV_STATE, !collect_predstate()");

174 
INGEST_COLDSTART
:

175 
INGEST_1
:

176 
INGEST_2
:

177 
INGEST_3
:

178 
p_˝
 = &
¶urmfs_c⁄fig
[0];Ö_˝->
nm
;Ö_cp++) {

179 (Ë
	`cﬁÀ˘_˝
(
p_˝
);

181 i‡(
	`Debug
()) {

182 
	`öge°_c⁄fig
(
	`NXT_öge°_cy˛e
(
∑ss_no
));

187 
	`EºExô
(
EºExô_INTERNAL
, "ingest_config: unrecognizedÖass_no ");

192 i‡(!
	`c⁄fig_c⁄si°ít_com∂ëe
()) {

193 
	`Ußge
 (
EºExô_INCOMPLETE
, "configuration is inconsistent or incomplete");

196 
	}
}

	@slu_rmfs/mount.c

2 
	~"rmfs.h
"

10 
FILE
 *

11 
	$Æªady_mou¡ed
() {

12 
c⁄fig_∑øm_t
 *
mpfûe_˝
, *
pidfûe_˝
;

13 
FILE
 *
¥ev_˘lfûe
;

14 *
¥ev_mp
;

15 
size_t
 
sz
;

16 
¥ev_mp_˘l
[
_POSIX_PATH_MAX
];

18 
mpfûe_˝
 = 
	`gëc⁄fig_‰omnm
("mountpointfile");

19 
pidfûe_˝
 = 
	`gëc⁄fig_‰omnm
("pidfile");

21 i‡(!
mpfûe_˝
) {

22 
	`EºExô
(
EºExô_INTERNAL
, "already_mounted: !mpfile_cp");

24 i‡(!
pidfûe_˝
) {

25 
	`EºExô
(
EºExô_INTERNAL
, "already_mounted: !pidfile_cp");

28 i‡(!
mpfûe_˝
->
vÆ
.
pd
.
fuŒ∑th
) {

29  
NULL
;

31 i‡(!
pidfûe_˝
->
vÆ
.
pd
.
fuŒ∑th
) {

32  
NULL
;

38 i‡(!
mpfûe_˝
->
vÆ
.
pd
.
f°r
) {

39 
	`EºExô
(
EºExô_INTERNAL
, "already_mounted: mpfile:Ço fstr");

41 i‡(!
pidfûe_˝
->
vÆ
.
pd
.
f°r
) {

42 
	`EºExô
(
EºExô_INTERNAL
, "already_mounted:Öidfile:Ço fstr");

45 
sz
 = 
	`fsˇnf
(
mpfûe_˝
->
vÆ
.
pd
.
f°r
, "%as", &
¥ev_mp
);

46 i‡(
sz
 =
EOF
 || sz == 0) {

47 
	`EºExô
(
EºExô_INTERNAL
, "already_mounted:Örev_mp fscanf");

50 (Ë
	`°æ˝y
(
¥ev_mp_˘l
, 
¥ev_mp
, 
_POSIX_PATH_MAX
);

51 
sz
 = 
	`°æˇt
(
¥ev_mp_˘l
, "/c⁄åﬁ", 
_POSIX_PATH_MAX
);

52 i‡(
sz
 <= 0) {

53 
	`EºExô
(
EºExô_INTERNAL
, "already_mounted: strlcatÖrev_mp_ctl");

56 i‡(!(
¥ev_˘lfûe
 = 
	`f›í
(
¥ev_mp_˘l
, "r+"))) {

57 
	`EºExô
(
EºExô_INTERNAL
, "already_mounted: fopen(prev_mp_ctrl)");

59 
	`£tvbuf
(
¥ev_˘lfûe
, 
NULL
, 
_IONBF
, 
BUFSIZ
);

60  
¥ev_˘lfûe
;

61 
	}
}

65 
	$ª˛aim_fûes
() {

66 
c⁄fig_∑øm_t
 *
mpfûe_˝
, *
pidfûe_˝
;

67 
	`v¨run_›í˝
(
c⁄fig_∑øm_t
 *);

69 
pidfûe_˝
 = 
	`gëc⁄fig_‰omnm
("pidfile");

70 
mpfûe_˝
 = 
	`gëc⁄fig_‰omnm
("mountpointfile");

72 i‡(!
pidfûe_˝
) {

73 
	`EºExô
(
EºExô_INTERNAL
, "reclaim_files: !pidfile_cp");

75 i‡(!
mpfûe_˝
) {

76 
	`EºExô
(
EºExô_INTERNAL
, "reclaim_files: !mpfile_cp");

78 i‡(
	`v¨run_›í˝
(
pidfûe_˝
) < 0) {

79 
	`EºExô
(
EºExô_INTERNAL
, "reclaim_files: varrun_opencp(pidfile_cp)");

81 i‡(
	`v¨run_›í˝
(
mpfûe_˝
) < 0) {

82 
	`EºExô
(
EºExô_INTERNAL
, "reclaim_files: varrun_opencp(mpfile_cp)");

85 
	}
}

87 
åi_t


88 
	$ªque°_unmou¡
(
FILE
 *
¥ev_˘lfûe
, 
waôed_f‹
) {

89 
c⁄fig_∑øm_t
 *
unmou¡waô_˝
, *
pid_˝
;

90 
w
, 
rc
;

91 
î∫o
;

93 i‡(!
¥ev_˘lfûe
) {

94  
FALSE
;

97 
pid_˝
 = 
	`gëc⁄fig_‰omnm
("pid");

98 
unmou¡waô_˝
 = 
	`gëc⁄fig_‰omnm
("unmountwait");

100 i‡((
rc
 = 
	`Ârötf
(
¥ev_˘lfûe
, "umount")) < 0) {

101 
e
 = 
î∫o
;

102 i‡(
e
 !
ENOENT
 &&É !
EACCES
) {

103 
	`EºExô
(
EºExô_STUCK
, "request_unmount: fprintf(prev_mp_ctl, \"umount\")");

110 
w
 = 
unmou¡waô_˝
->
vÆ
.
ue
.
l
;

111 i‡((
rc
 < 0Ë&& (
w
 > 0Ë&& (
waôed_f‹
 < w)) {

113 
	`EºExô
(
EºExô_WARN
, "request_unmount: waiting forÖredecessor");

114 
	`¶ìp
(
w
);

115 
	`ªque°_unmou¡
(
¥ev_˘lfûe
, 
w
);

117 i‡(
	`Æªady_mou¡ed
()) {

118 
	`EºExô
(
EºExô_STUCK
, "request_unmount: waitedÅooÜong, still mounted");

121 
	`ª˛aim_fûes
();

122  
TRUE
;

123 
	}
}

	@slu_rmfs/slu_rmfs.c

2 
	~"rmfs.h
"

12 
mk_fs
();

13 
öge°_c⁄fig
();

16 
	$maö
(
ac
, **
av
) {

18 
fu£_›î©i⁄s
 
rmfs_fûe_›s
;

19 
fu£_¨gs
 
f_¨gs
;

22 
f_¨gs
.
¨gc
 = 
ac
;

23 
f_¨gs
.
¨gv
 = 
av
;

24 
f_¨gs
.
Æloˇãd
 = 0;

26 
	`öge°_c⁄fig
(
INGEST_COLDSTART
);

27 
	`mk_fs
();

29 
	`öge°_c⁄fig
(
INGEST_PREVSTATE
);

31 
	`fu£_maö
(
ac
, 
av
, &
rmfs_fûe_›s
, 
NULL
);

35 
	`CÀ™Exô
();

36  
ExôOK
;

37 
	}
}

	@slu_rmfs/usage.c

7 
	~"rmfs.h
"

9 *
	gpußge_msg
;

16 
	$Ußge
(
îr
, *
msg
) {

18 
	`EºExô
 (
îr
?Éº: 
EºExô_ARGPARSE
, 
msg
? msg: "usageÉrror");

20 
	}
}

27 
	gˇught_ö_a_lo›
 = 0;

30 
	$EºExô
(
îr
, *
msg
) {

31 
c⁄fig_∑øm_t
 *
p_˝
;

33 i‡(
msg
) {

34 
	`wrôe
(2, 
msg
, 
	`°æí
(msg));

35 
	`wrôe
(2, "\n", 1);

36 
	`fsync
(2);

38 
îr
) {

39 
EºExô_ASSERT
:

40 
p_˝
 = 
	`gëc⁄fig_‰omnm_nohash
("Debug");

41 i‡(
ˇught_ö_a_lo›
 =0 && 
p_˝
 &&Ö_˝->
vÆ
.
ue
.
ul
 == 0) {

42 
ˇught_ö_a_lo›
++;

47 
EºExô_WARN
:

52 
	`exô
 (
îr
);

53 
	}
}

56 
	$CÀ™Exô
() {

57 
	`EºExô
(
Exô_OK
, 
NULL
);

58 
	}
}

	@x.c

1 
	~<°dio.h
>

2 
	~<sys/∑øm.h
>

4 
	$maö
() {

5 
	`¥ötf
 ("NBBY: %d\n", 
NBBY
);

6 
	`¥ötf
 ("sizeof(int) = %d\n", ());

7 
	`¥ötf
 ("sizeof(unsigned int) = %d\n", ());

8 
	`¥ötf
 ("sizeof(unsigned int) = %d\n", ());

9 
	}
}

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

70 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

75 
__löe
,

76 
__c⁄°
 *
__fun˘i⁄
)

77 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

82 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

86 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/attr/xattr.h

20 #i‚de‡
__XATTR_H__


21 
	#__XATTR_H__


	)

23 
	~<„©uªs.h
>

25 
	~<î∫o.h
>

26 #i‚de‡
ENOATTR


27 
	#ENOATTR
 
ENODATA


	)

30 
	#XATTR_CREATE
 0x1

	)

31 
	#XATTR_REPLACE
 0x2

	)

34 
__BEGIN_DECLS


36 
	$£tx©å
 (c⁄° *
__∑th
, c⁄° *
__«me
,

37 c⁄° *
__vÆue
, 
size_t
 
__size
, 
__Êags
Ë
__THROW
;

38 
	$l£tx©å
 (c⁄° *
__∑th
, c⁄° *
__«me
,

39 c⁄° *
__vÆue
, 
size_t
 
__size
, 
__Êags
Ë
__THROW
;

40 
	$f£tx©å
 (
__fûedes
, c⁄° *
__«me
,

41 c⁄° *
__vÆue
, 
size_t
 
__size
, 
__Êags
Ë
__THROW
;

43 
ssize_t
 
	$gëx©å
 (c⁄° *
__∑th
, c⁄° *
__«me
,

44 *
__vÆue
, 
size_t
 
__size
Ë
__THROW
;

45 
ssize_t
 
	$lgëx©å
 (c⁄° *
__∑th
, c⁄° *
__«me
,

46 *
__vÆue
, 
size_t
 
__size
Ë
__THROW
;

47 
ssize_t
 
	$fgëx©å
 (
__fûedes
, c⁄° *
__«me
,

48 *
__vÆue
, 
size_t
 
__size
Ë
__THROW
;

50 
ssize_t
 
	$li°x©å
 (c⁄° *
__∑th
, *
__li°
,

51 
size_t
 
__size
Ë
__THROW
;

52 
ssize_t
 
	$Œi°x©å
 (c⁄° *
__∑th
, *
__li°
,

53 
size_t
 
__size
Ë
__THROW
;

54 
ssize_t
 
	$Êi°x©å
 (
__fûedes
, *
__li°
,

55 
size_t
 
__size
Ë
__THROW
;

57 
	$ªmovex©å
 (c⁄° *
__∑th
, c⁄° *
__«me
Ë
__THROW
;

58 
	$Ãemovex©å
 (c⁄° *
__∑th
, c⁄° *
__«me
Ë
__THROW
;

59 
	$‰emovex©å
 (
__fûedes
, c⁄° *
__«me
Ë
__THROW
;

61 
__END_DECLS


	@/usr/include/bsd/string.h

27 #ifde‡
LIBBSD_OVERLAY


28 #ö˛ude_√xà<
°rög
.
h
>

30 
	~<°rög.h
>

33 #i‚de‡
LIBBSD_STRING_H


34 
	#LIBBSD_STRING_H


	)

36 
	~<sys/cdefs.h
>

37 
	~<sys/ty≥s.h
>

39 
__BEGIN_DECLS


40 
size_t
 
°æ˝y
(*
d°
, c⁄° *
§c
, size_à
siz
);

41 
size_t
 
°æˇt
(*
d°
, c⁄° *
§c
, size_à
siz
);

42 *
°∫°r
(c⁄° *
°r
, c⁄° *
föd
, 
size_t
 
°r_Àn
);

43 
°rmode
(
mode_t
 
mode
, *
°r
);

44 
	g__END_DECLS


	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/dirent.h

23 #i‚def 
_DIRENT_H


24 
	#_DIRENT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 #i‚de‡
__öo_t_deföed


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__öo_t
 
	töo_t
;

37 
__öo64_t
 
	töo_t
;

39 
	#__öo_t_deföed


	)

41 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


42 
__öo64_t
 
	töo64_t
;

43 
	#__öo64_t_deföed


	)

62 
	~<bôs/dúít.h
>

64 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


65 
	#d_öo
 
d_fûío


	)

82 #ifde‡
_DIRENT_HAVE_D_NAMLEN


83 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

84 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

86 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

87 #ifde‡
_DIRENT_HAVE_D_RECLEN


88 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

90 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

91 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

96 #ifde‡
__USE_BSD


100 
	mDT_UNKNOWN
 = 0,

101 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

102 
	mDT_FIFO
 = 1,

103 
	#DT_FIFO
 
DT_FIFO


	)

104 
	mDT_CHR
 = 2,

105 
	#DT_CHR
 
DT_CHR


	)

106 
	mDT_DIR
 = 4,

107 
	#DT_DIR
 
DT_DIR


	)

108 
	mDT_BLK
 = 6,

109 
	#DT_BLK
 
DT_BLK


	)

110 
	mDT_REG
 = 8,

111 
	#DT_REG
 
DT_REG


	)

112 
	mDT_LNK
 = 10,

113 
	#DT_LNK
 
DT_LNK


	)

114 
	mDT_SOCK
 = 12,

115 
	#DT_SOCK
 
DT_SOCK


	)

116 
	mDT_WHT
 = 14

117 
	#DT_WHT
 
DT_WHT


	)

121 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

122 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

128 
__dú°ªam
 
	tDIR
;

135 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

137 #ifde‡
__USE_XOPEN2K8


142 
DIR
 *
	`fd›ídú
 (
__fd
);

150 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

162 #i‚de‡
__USE_FILE_OFFSET64


163 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#ªaddú
 
ªaddú64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

177 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


183 #i‚de‡
__USE_FILE_OFFSET64


184 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

185 
dúít
 *
__ª°ri˘
 
__íåy
,

186 
dúít
 **
__ª°ri˘
 
__ªsu…
)

187 
	`__n⁄nuŒ
 ((1, 2, 3));

189 #ifde‡
__REDIRECT


190 
	`__REDIRECT
 (
ªaddú_r
,

191 (
DIR
 *
__ª°ri˘
 
__dúp
,

192 
dúít
 *
__ª°ri˘
 
__íåy
,

193 
dúít
 **
__ª°ri˘
 
__ªsu…
),

194 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3));

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

251 #i‚de‡
__USE_FILE_OFFSET64


252 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

253 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

254 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

255 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

256 
__c⁄°
 
dúít
 **))

257 
	`__n⁄nuŒ
 ((1, 2));

259 #ifde‡
__REDIRECT


260 
	`__REDIRECT
 (
sˇndú
,

261 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

262 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

263 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

264 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

265 
__c⁄°
 
dúít
 **)),

266 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

268 
	#sˇndú
 
sˇndú64


	)

272 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


275 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

276 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

277 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

278 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

279 
__c⁄°
 
dúít64
 **))

280 
	`__n⁄nuŒ
 ((1, 2));

284 #i‚de‡
__USE_FILE_OFFSET64


285 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

286 
__c⁄°
 
dúít
 **
__e2
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__REDIRECT


290 
	`__REDIRECT_NTH
 (
Æphas‹t
,

291 (
__c⁄°
 
dúít
 **
__e1
,

292 
__c⁄°
 
dúít
 **
__e2
),

293 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 
	#Æphas‹t
 
Æphas‹t64


	)

299 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


300 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

301 
__c⁄°
 
dúít64
 **
__e2
)

302 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


312 #i‚de‡
__USE_FILE_OFFSET64


313 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

314 
size_t
 
__nbyãs
,

315 
__off_t
 *
__ª°ri˘
 
__ba£p
)

316 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

318 #ifde‡
__REDIRECT


319 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

320 (
__fd
, *
__ª°ri˘
 
__buf
,

321 
size_t
 
__nbyãs
,

322 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

323 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

325 
	#gëdúíåõs
 
gëdúíåõs64


	)

329 #ifde‡
__USE_LARGEFILE64


330 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

331 
size_t
 
__nbyãs
,

332 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

333 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

337 #ifde‡
__USE_GNU


339 #i‚de‡
__USE_FILE_OFFSET64


340 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

341 
__c⁄°
 
dúít
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 #ifde‡
__REDIRECT


345 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

346 (
__c⁄°
 
dúít
 **
__e1
,

347 
__c⁄°
 
dúít
 **
__e2
),

348 
vîsi⁄s‹t64
)

349 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

351 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

355 #ifde‡
__USE_LARGEFILE64


356 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

357 
__c⁄°
 
dúít64
 **
__e2
)

358 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

362 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

105 #ifde‡
__USE_ATFILE


106 
	#AT_FDCWD
 -100

	)

109 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

110 
	#AT_REMOVEDIR
 0x200

	)

112 
	#AT_SYMLINK_FOLLOW
 0x400

	)

113 
	#AT_EACCESS
 0x200

	)

122 
f˙é
 (
__fd
, 
__cmd
, ...);

130 #i‚de‡
__USE_FILE_OFFSET64


131 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

133 #ifde‡
__REDIRECT


134 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

135 
	`__n⁄nuŒ
 ((1));

137 
	#›í
 
›í64


	)

140 #ifde‡
__USE_LARGEFILE64


141 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

144 #ifde‡
__USE_ATFILE


154 #i‚de‡
__USE_FILE_OFFSET64


155 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

156 
	`__n⁄nuŒ
 ((2));

158 #ifde‡
__REDIRECT


159 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

160 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

162 
	#›í©
 
›í©64


	)

165 #ifde‡
__USE_LARGEFILE64


166 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

167 
	`__n⁄nuŒ
 ((2));

176 #i‚de‡
__USE_FILE_OFFSET64


177 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

179 #ifde‡
__REDIRECT


180 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

181 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

183 
	#¸ót
 
¸ót64


	)

186 #ifde‡
__USE_LARGEFILE64


187 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

190 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

191 && !
deföed
 
__USE_POSIX
))

200 
	#F_ULOCK
 0

	)

201 
	#F_LOCK
 1

	)

202 
	#F_TLOCK
 2

	)

203 
	#F_TEST
 3

	)

205 #i‚de‡
__USE_FILE_OFFSET64


206 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

208 #ifde‡
__REDIRECT


209 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

211 
	#lockf
 
lockf64


	)

214 #ifde‡
__USE_LARGEFILE64


215 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

219 #ifde‡
__USE_XOPEN2K


222 #i‚de‡
__USE_FILE_OFFSET64


223 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

224 
__advi£
Ë
__THROW
;

226 #ifde‡
__REDIRECT_NTH


227 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

228 
__off64_t
 
__Àn
, 
__advi£
),

229 
posix_Ádvi£64
);

231 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

234 #ifde‡
__USE_LARGEFILE64


235 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

236 
__advi£
Ë
__THROW
;

244 #i‚de‡
__USE_FILE_OFFSET64


245 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

247 #ifde‡
__REDIRECT


248 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

249 
__off64_t
 
__Àn
),

250 
posix_ÁŒoˇã64
);

252 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

255 #ifde‡
__USE_LARGEFILE64


256 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

262 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

263 && 
deföed
 
__va_¨g_∑ck_Àn


264 
	~<bôs/f˙é2.h
>

267 
__END_DECLS


	@/usr/include/fuse/fuse.h

9 #i‚de‡
_FUSE_H_


10 
	#_FUSE_H_


	)

22 #i‚de‡
FUSE_USE_VERSION


23 
	#FUSE_USE_VERSION
 21

	)

26 
	~"fu£_comm⁄.h
"

28 
	~<f˙é.h
>

29 
	~<time.h
>

30 
	~<utime.h
>

31 
	~<sys/ty≥s.h
>

32 
	~<sys/°©.h
>

33 
	~<sys/°©vfs.h
>

34 
	~<sys/uio.h
>

36 #ifde‡
__˝lu•lus


45 
fu£
;

48 
fu£_cmd
;

58 (*
fu£_fûl_dú_t
Ë(*
	tbuf
, c⁄° *
	t«me
,

59 c⁄° 
	t°©
 *
	t°buf
, 
	toff_t
 
	toff
);

62 
fu£_dúh™dÀ
 *
	tfu£_dúh_t
;

63 (*
fu£_dúfû_t
Ë(
	tfu£_dúh_t
 
	th
, c⁄° *
	t«me
, 
	tty≥
,

64 
	töo_t
 
	töo
);

88 
	sfu£_›î©i⁄s
 {

95 (*
gë©å
Ë(c⁄° *, 
°©
 *);

105 (*
ªadlök
Ë(c⁄° *, *, 
size_t
);

108 (*
gëdú
Ë(c⁄° *, 
fu£_dúh_t
, 
fu£_dúfû_t
);

116 (*
mknod
Ë(c⁄° *, 
mode_t
, 
dev_t
);

124 (*
mkdú
Ë(c⁄° *, 
mode_t
);

127 (*
u∆ök
) (const *);

130 (*
rmdú
) (const *);

133 (*
symlök
) (const *, const *);

136 (*
ª«me
) (const *, const *);

139 (*
lök
) (const *, const *);

142 (*
chmod
Ë(c⁄° *, 
mode_t
);

145 (*
chown
Ë(c⁄° *, 
uid_t
, 
gid_t
);

148 (*
åunˇã
Ë(c⁄° *, 
off_t
);

154 (*
utime
Ë(c⁄° *, 
utimbuf
 *);

173 (*
›í
Ë(c⁄° *, 
fu£_fûe_öfo
 *);

186 (*
ªad
Ë(c⁄° *, *, 
size_t
, 
off_t
,

187 
fu£_fûe_öfo
 *);

197 (*
wrôe
Ë(c⁄° *, c⁄° *, 
size_t
, 
off_t
,

198 
fu£_fûe_öfo
 *);

207 (*
°©fs
Ë(c⁄° *, 
°©vfs
 *);

232 (*
Êush
Ë(c⁄° *, 
fu£_fûe_öfo
 *);

248 (*
ªÀa£
Ë(c⁄° *, 
fu£_fûe_öfo
 *);

257 (*
fsync
Ë(c⁄° *, , 
fu£_fûe_öfo
 *);

260 (*
£tx©å
Ë(c⁄° *, c⁄° *, c⁄° *, 
size_t
, );

263 (*
gëx©å
Ë(c⁄° *, c⁄° *, *, 
size_t
);

266 (*
li°x©å
Ë(c⁄° *, *, 
size_t
);

269 (*
ªmovex©å
) (const *, const *);

281 (*
›ídú
Ë(c⁄° *, 
fu£_fûe_öfo
 *);

304 (*
ªaddú
Ë(c⁄° *, *, 
fu£_fûl_dú_t
, 
off_t
,

305 
fu£_fûe_öfo
 *);

311 (*
ªÀa£dú
Ë(c⁄° *, 
fu£_fûe_öfo
 *);

320 (*
fsyncdú
Ë(c⁄° *, , 
fu£_fûe_öfo
 *);

332 *(*
öô
Ë(
fu£_c⁄n_öfo
 *
c⁄n
);

341 (*
de°roy
) (*);

354 (*
ac˚ss
) (const *, );

368 (*
¸óã
Ë(c⁄° *, 
mode_t
, 
fu£_fûe_öfo
 *);

382 (*
·runˇã
Ë(c⁄° *, 
off_t
, 
fu£_fûe_öfo
 *);

396 (*
fgë©å
Ë(c⁄° *, 
°©
 *, 
fu£_fûe_öfo
 *);

430 (*
lock
Ë(c⁄° *, 
fu£_fûe_öfo
 *, 
cmd
,

431 
Êock
 *);

439 (*
utimís
Ë(c⁄° *, c⁄° 
time•ec
 
tv
[2]);

449 (*
bm≠
Ë(c⁄° *, 
size_t
 
blocksize
, 
uöt64_t
 *
idx
);

458 
Êag_nuŒ∑th_ok
 : 1;

463 
Êag_ª£rved
 : 31;

477 (*
io˘l
Ë(c⁄° *, 
cmd
, *
¨g
,

478 
fu£_fûe_öfo
 *, 
Êags
, *
d©a
);

497 (*
pﬁl
Ë(c⁄° *, 
fu£_fûe_öfo
 *,

498 
fu£_pﬁlh™dÀ
 *
ph
, *
ªvít•
);

506 
	sfu£_c⁄ãxt
 {

508 
fu£
 *fuse;

511 
uid_t
 
uid
;

514 
gid_t
 
gid
;

517 
pid_t
 
pid
;

520 *
¥iv©e_d©a
;

523 
mode_t
 
umask
;

553 
	#fu£_maö
(
¨gc
, 
¨gv
, 
›
, 
u£r_d©a
) \

554 
	`fu£_maö_ªÆ
(
¨gc
, 
¨gv
, 
›
, (*(›)), 
u£r_d©a
)

	)

570 
fu£
 *
fu£_√w
(
fu£_ch™
 *
ch
, 
fu£_¨gs
 *
¨gs
,

571 c⁄° 
fu£_›î©i⁄s
 *
›
, 
size_t
 
›_size
,

572 *
u£r_d©a
);

584 
fu£_de°roy
(
fu£
 *
f
);

595 
fu£_lo›
(
fu£
 *
f
);

602 
fu£_exô
(
fu£
 *
f
);

617 
fu£_lo›_mt
(
fu£
 *
f
);

627 
fu£_c⁄ãxt
 *
fu£_gë_c⁄ãxt
();

647 
fu£_gëgroups
(
size
, 
gid_t
 
li°
[]);

654 
fu£_öãºu±ed
();

661 
fu£_övÆid©e
(
fu£
 *
f
, c⁄° *
∑th
);

664 
fu£_is_lib_›ti⁄
(c⁄° *
›t
);

671 
fu£_maö_ªÆ
(
¨gc
, *
¨gv
[], c⁄° 
fu£_›î©i⁄s
 *
›
,

672 
size_t
 
›_size
, *
u£r_d©a
);

683 
fu£_fs
;

694 
fu£_fs_gë©å
(
fu£_fs
 *
fs
, c⁄° *
∑th
, 
°©
 *
buf
);

695 
fu£_fs_fgë©å
(
fu£_fs
 *
fs
, c⁄° *
∑th
, 
°©
 *
buf
,

696 
fu£_fûe_öfo
 *
fi
);

697 
fu£_fs_ª«me
(
fu£_fs
 *
fs
, c⁄° *
ﬁd∑th
,

698 c⁄° *
√w∑th
);

699 
fu£_fs_u∆ök
(
fu£_fs
 *
fs
, c⁄° *
∑th
);

700 
fu£_fs_rmdú
(
fu£_fs
 *
fs
, c⁄° *
∑th
);

701 
fu£_fs_symlök
(
fu£_fs
 *
fs
, c⁄° *
lök«me
,

702 c⁄° *
∑th
);

703 
fu£_fs_lök
(
fu£_fs
 *
fs
, c⁄° *
ﬁd∑th
, c⁄° *
√w∑th
);

704 
fu£_fs_ªÀa£
(
fu£_fs
 *
fs
, c⁄° *
∑th
,

705 
fu£_fûe_öfo
 *
fi
);

706 
fu£_fs_›í
(
fu£_fs
 *
fs
, c⁄° *
∑th
,

707 
fu£_fûe_öfo
 *
fi
);

708 
fu£_fs_ªad
(
fu£_fs
 *
fs
, c⁄° *
∑th
, *
buf
, 
size_t
 
size
,

709 
off_t
 
off
, 
fu£_fûe_öfo
 *
fi
);

710 
fu£_fs_wrôe
(
fu£_fs
 *
fs
, c⁄° *
∑th
, c⁄° *
buf
,

711 
size_t
 
size
, 
off_t
 
off
, 
fu£_fûe_öfo
 *
fi
);

712 
fu£_fs_fsync
(
fu£_fs
 *
fs
, c⁄° *
∑th
, 
d©async
,

713 
fu£_fûe_öfo
 *
fi
);

714 
fu£_fs_Êush
(
fu£_fs
 *
fs
, c⁄° *
∑th
,

715 
fu£_fûe_öfo
 *
fi
);

716 
fu£_fs_°©fs
(
fu£_fs
 *
fs
, c⁄° *
∑th
, 
°©vfs
 *
buf
);

717 
fu£_fs_›ídú
(
fu£_fs
 *
fs
, c⁄° *
∑th
,

718 
fu£_fûe_öfo
 *
fi
);

719 
fu£_fs_ªaddú
(
fu£_fs
 *
fs
, c⁄° *
∑th
, *
buf
,

720 
fu£_fûl_dú_t
 
fûÀr
, 
off_t
 
off
,

721 
fu£_fûe_öfo
 *
fi
);

722 
fu£_fs_fsyncdú
(
fu£_fs
 *
fs
, c⁄° *
∑th
, 
d©async
,

723 
fu£_fûe_öfo
 *
fi
);

724 
fu£_fs_ªÀa£dú
(
fu£_fs
 *
fs
, c⁄° *
∑th
,

725 
fu£_fûe_öfo
 *
fi
);

726 
fu£_fs_¸óã
(
fu£_fs
 *
fs
, c⁄° *
∑th
, 
mode_t
 
mode
,

727 
fu£_fûe_öfo
 *
fi
);

728 
fu£_fs_lock
(
fu£_fs
 *
fs
, c⁄° *
∑th
,

729 
fu£_fûe_öfo
 *
fi
, 
cmd
, 
Êock
 *
lock
);

730 
fu£_fs_chmod
(
fu£_fs
 *
fs
, c⁄° *
∑th
, 
mode_t
 
mode
);

731 
fu£_fs_chown
(
fu£_fs
 *
fs
, c⁄° *
∑th
, 
uid_t
 
uid
, 
gid_t
 
gid
);

732 
fu£_fs_åunˇã
(
fu£_fs
 *
fs
, c⁄° *
∑th
, 
off_t
 
size
);

733 
fu£_fs_·runˇã
(
fu£_fs
 *
fs
, c⁄° *
∑th
, 
off_t
 
size
,

734 
fu£_fûe_öfo
 *
fi
);

735 
fu£_fs_utimís
(
fu£_fs
 *
fs
, c⁄° *
∑th
,

736 c⁄° 
time•ec
 
tv
[2]);

737 
fu£_fs_ac˚ss
(
fu£_fs
 *
fs
, c⁄° *
∑th
, 
mask
);

738 
fu£_fs_ªadlök
(
fu£_fs
 *
fs
, c⁄° *
∑th
, *
buf
,

739 
size_t
 
Àn
);

740 
fu£_fs_mknod
(
fu£_fs
 *
fs
, c⁄° *
∑th
, 
mode_t
 
mode
,

741 
dev_t
 
rdev
);

742 
fu£_fs_mkdú
(
fu£_fs
 *
fs
, c⁄° *
∑th
, 
mode_t
 
mode
);

743 
fu£_fs_£tx©å
(
fu£_fs
 *
fs
, c⁄° *
∑th
, c⁄° *
«me
,

744 c⁄° *
vÆue
, 
size_t
 
size
, 
Êags
);

745 
fu£_fs_gëx©å
(
fu£_fs
 *
fs
, c⁄° *
∑th
, c⁄° *
«me
,

746 *
vÆue
, 
size_t
 
size
);

747 
fu£_fs_li°x©å
(
fu£_fs
 *
fs
, c⁄° *
∑th
, *
li°
,

748 
size_t
 
size
);

749 
fu£_fs_ªmovex©å
(
fu£_fs
 *
fs
, c⁄° *
∑th
,

750 c⁄° *
«me
);

751 
fu£_fs_bm≠
(
fu£_fs
 *
fs
, c⁄° *
∑th
, 
size_t
 
blocksize
,

752 
uöt64_t
 *
idx
);

753 
fu£_fs_io˘l
(
fu£_fs
 *
fs
, c⁄° *
∑th
, 
cmd
, *
¨g
,

754 
fu£_fûe_öfo
 *
fi
, 
Êags
, *
d©a
);

755 
fu£_fs_pﬁl
(
fu£_fs
 *
fs
, c⁄° *
∑th
,

756 
fu£_fûe_öfo
 *
fi
, 
fu£_pﬁlh™dÀ
 *
ph
,

757 *
ªvít•
);

758 
fu£_fs_öô
(
fu£_fs
 *
fs
, 
fu£_c⁄n_öfo
 *
c⁄n
);

759 
fu£_fs_de°roy
(
fu£_fs
 *
fs
);

761 
fu£_nŸify_pﬁl
(
fu£_pﬁlh™dÀ
 *
ph
);

774 
fu£_fs
 *
fu£_fs_√w
(c⁄° 
fu£_›î©i⁄s
 *
›
, 
size_t
 
›_size
,

775 *
u£r_d©a
);

787 
	sfu£_moduÀ
 {

791 c⁄° *
«me
;

807 
fu£_fs
 *(*
Á˘‹y
)(
fu£_¨gs
 *
¨gs
,

808 
fu£_fs
 *
fs
[]);

810 
fu£_moduÀ
 *
√xt
;

811 
fu£mod_so
 *
so
;

812 
˘r
;

821 
fu£_ªgi°î_moduÀ
(
fu£_moduÀ
 *
mod
);

829 
	#FUSE_REGISTER_MODULE
(
«me_
, 
Á˘‹y_
) \

830 
	`__©åibuã__
((
c⁄°ru˘‹
)Ë
«me_
 ## 
	`_ªgi°î
() \

832 
fu£_moduÀ
 
mod
 = \

833 { #«me_, 
Á˘‹y_
, 
NULL
, NULL, 0 }; \

834 
	`fu£_ªgi°î_moduÀ
(&
mod
); \

835 }

	)

846 (*
fu£_¥o˚ss‹_t
)(
	tfu£
 *, 
	tfu£_cmd
 *, *);

849 
fu£
 *
fu£_£tup
(
¨gc
, *
¨gv
[],

850 c⁄° 
fu£_›î©i⁄s
 *
›
, 
size_t
 
›_size
,

851 **
mou¡poöt
, *
mu…ôhªaded
,

852 *
u£r_d©a
);

855 
fu£_ã¨down
(
fu£
 *fu£, *
mou¡poöt
);

858 
fu£_cmd
 *
fu£_ªad_cmd
(
fu£
 *
f
);

861 
fu£_¥o˚ss_cmd
(
fu£
 *
f
, 
fu£_cmd
 *
cmd
);

865 
fu£_lo›_mt_¥oc
(
fu£
 *
f
, 
fu£_¥o˚ss‹_t
 
¥oc
, *
d©a
);

869 
fu£_exôed
(
fu£
 *
f
);

872 
fu£_£t_gëc⁄ãxt_func
(
fu£_c⁄ãxt
 *(*
func
)());

875 
fu£_£ssi⁄
 *
fu£_gë_£ssi⁄
(
fu£
 *
f
);

881 #i‡
FUSE_USE_VERSION
 < 26

882 
	~"fu£_com∑t.h
"

883 #unde‡
fu£_maö


884 #i‡
FUSE_USE_VERSION
 == 25

885 
	#fu£_maö
(
¨gc
, 
¨gv
, 
›
) \

886 
	`fu£_maö_ªÆ_com∑t25
(
¨gc
, 
¨gv
, 
›
, (*(›)))

	)

887 
	#fu£_√w
 
fu£_√w_com∑t25


	)

888 
	#fu£_£tup
 
fu£_£tup_com∑t25


	)

889 
	#fu£_ã¨down
 
fu£_ã¨down_com∑t22


	)

890 
	#fu£_›î©i⁄s
 
fu£_›î©i⁄s_com∑t25


	)

891 #ñi‡
FUSE_USE_VERSION
 == 22

892 
	#fu£_maö
(
¨gc
, 
¨gv
, 
›
) \

893 
	`fu£_maö_ªÆ_com∑t22
(
¨gc
, 
¨gv
, 
›
, (*(›)))

	)

894 
	#fu£_√w
 
fu£_√w_com∑t22


	)

895 
	#fu£_£tup
 
fu£_£tup_com∑t22


	)

896 
	#fu£_ã¨down
 
fu£_ã¨down_com∑t22


	)

897 
	#fu£_›î©i⁄s
 
fu£_›î©i⁄s_com∑t22


	)

898 
	#fu£_fûe_öfo
 
fu£_fûe_öfo_com∑t


	)

899 #ñi‡
FUSE_USE_VERSION
 == 24

900 #îr‹ 
Com∑tibûôy
 
wôh
 
high
-
Àvñ
 
API
 
vîsi⁄
 24 
nŸ
 
suµ‹ãd


902 
	#fu£_dúfû_t
 
fu£_dúfû_t_com∑t


	)

903 
	#__fu£_ªad_cmd
 
fu£_ªad_cmd


	)

904 
	#__fu£_¥o˚ss_cmd
 
fu£_¥o˚ss_cmd


	)

905 
	#__fu£_lo›_mt
 
fu£_lo›_mt_¥oc


	)

906 #i‡
FUSE_USE_VERSION
 == 21

907 
	#fu£_›î©i⁄s
 
fu£_›î©i⁄s_com∑t2


	)

908 
	#fu£_maö
 
fu£_maö_com∑t2


	)

909 
	#fu£_√w
 
fu£_√w_com∑t2


	)

910 
	#__fu£_£tup
 
fu£_£tup_com∑t2


	)

911 
	#__fu£_ã¨down
 
fu£_ã¨down_com∑t22


	)

912 
	#__fu£_exôed
 
fu£_exôed


	)

913 
	#__fu£_£t_gëc⁄ãxt_func
 
fu£_£t_gëc⁄ãxt_func


	)

915 
	#fu£_°©fs
 
fu£_°©fs_com∑t1


	)

916 
	#fu£_›î©i⁄s
 
fu£_›î©i⁄s_com∑t1


	)

917 
	#fu£_maö
 
fu£_maö_com∑t1


	)

918 
	#fu£_√w
 
fu£_√w_com∑t1


	)

919 
	#FUSE_DEBUG
 
FUSE_DEBUG_COMPAT1


	)

924 #ifde‡
__˝lu•lus


	@/usr/include/fuse/fuse_opt.h

9 #i‚de‡
_FUSE_OPT_H_


10 
	#_FUSE_OPT_H_


	)

17 #ifde‡
__˝lu•lus


76 
	sfu£_›t
 {

78 c⁄° *
ãm∂
;

84 
off£t
;

90 
vÆue
;

97 
	#FUSE_OPT_KEY
(
ãm∂
, 
key
Ë{Åem∂, -1U, key }

	)

103 
	#FUSE_OPT_END
 { .
ãm∂
 = 
NULL
 }

	)

108 
	sfu£_¨gs
 {

110 
¨gc
;

113 **
¨gv
;

116 
Æloˇãd
;

122 
	#FUSE_ARGS_INIT
(
¨gc
, 
¨gv
Ë{árgc,árgv, 0 }

	)

128 
	#FUSE_OPT_KEY_OPT
 -1

	)

136 
	#FUSE_OPT_KEY_NONOPT
 -2

	)

144 
	#FUSE_OPT_KEY_KEEP
 -3

	)

152 
	#FUSE_OPT_KEY_DISCARD
 -4

	)

179 (*
fu£_›t_¥oc_t
)(*
	td©a
, c⁄° *
	t¨g
, 
	tkey
,

180 
	tfu£_¨gs
 *
	touèrgs
);

202 
fu£_›t_∑r£
(
fu£_¨gs
 *
¨gs
, *
d©a
,

203 c⁄° 
fu£_›t
 
›ts
[], 
fu£_›t_¥oc_t
 
¥oc
);

212 
fu£_›t_add_›t
(**
›ts
, c⁄° *
›t
);

221 
fu£_›t_add_›t_esˇ≥d
(**
›ts
, c⁄° *
›t
);

230 
fu£_›t_add_¨g
(
fu£_¨gs
 *
¨gs
, c⁄° *
¨g
);

245 
fu£_›t_ö£π_¨g
(
fu£_¨gs
 *
¨gs
, 
pos
, c⁄° *
¨g
);

254 
fu£_›t_‰ì_¨gs
(
fu£_¨gs
 *
¨gs
);

264 
fu£_›t_m©ch
(c⁄° 
fu£_›t
 
›ts
[], c⁄° *
›t
);

266 #ifde‡
__˝lu•lus


	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/libgen.h

19 #i‚de‡
_LIBGEN_H


20 
	#_LIBGEN_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


27 *
	$dú«me
 (*
__∑th
Ë
__THROW
;

35 *
	$__xpg_ba£«me
 (*
__∑th
Ë
__THROW
;

36 
	#ba£«me
 
__xpg_ba£«me


	)

38 
__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/selinux/selinux.h

1 #i‚de‡
_SELINUX_H_


2 
	#_SELINUX_H_


	)

4 
	~<sys/ty≥s.h
>

5 
	~<°d¨g.h
>

7 #ifde‡
__˝lu•lus


12 
is_£löux_íabÀd
();

14 
is_£löux_mls_íabÀd
();

16 *
	t£curôy_c⁄ãxt_t
;

19 
‰ìc⁄
(
£curôy_c⁄ãxt_t
 
c⁄
);

22 
‰ìc⁄¨y
(
£curôy_c⁄ãxt_t
 * 
c⁄
);

28 
gëc⁄
(
£curôy_c⁄ãxt_t
 * 
c⁄
);

29 
gëc⁄_øw
(
£curôy_c⁄ãxt_t
 * 
c⁄
);

39 
£tc⁄
(
£curôy_c⁄ãxt_t
 
c⁄
);

40 
£tc⁄_øw
(
£curôy_c⁄ãxt_t
 
c⁄
);

44 
gëpidc⁄
(
pid_t
 
pid
, 
£curôy_c⁄ãxt_t
 * 
c⁄
);

45 
gëpidc⁄_øw
(
pid_t
 
pid
, 
£curôy_c⁄ãxt_t
 * 
c⁄
);

49 
gë¥evc⁄
(
£curôy_c⁄ãxt_t
 * 
c⁄
);

50 
gë¥evc⁄_øw
(
£curôy_c⁄ãxt_t
 * 
c⁄
);

55 
gëexecc⁄
(
£curôy_c⁄ãxt_t
 * 
c⁄
);

56 
gëexecc⁄_øw
(
£curôy_c⁄ãxt_t
 * 
c⁄
);

60 
£ãxecc⁄
(
£curôy_c⁄ãxt_t
 
c⁄
);

61 
£ãxecc⁄_øw
(
£curôy_c⁄ãxt_t
 
c⁄
);

66 
gëfs¸óãc⁄
(
£curôy_c⁄ãxt_t
 * 
c⁄
);

67 
gëfs¸óãc⁄_øw
(
£curôy_c⁄ãxt_t
 * 
c⁄
);

71 
£tfs¸óãc⁄
(
£curôy_c⁄ãxt_t
 
c⁄ãxt
);

72 
£tfs¸óãc⁄_øw
(
£curôy_c⁄ãxt_t
 
c⁄ãxt
);

77 
gëkey¸óãc⁄
(
£curôy_c⁄ãxt_t
 * 
c⁄
);

78 
gëkey¸óãc⁄_øw
(
£curôy_c⁄ãxt_t
 * 
c⁄
);

82 
£tkey¸óãc⁄
(
£curôy_c⁄ãxt_t
 
c⁄ãxt
);

83 
£tkey¸óãc⁄_øw
(
£curôy_c⁄ãxt_t
 
c⁄ãxt
);

88 
gësock¸óãc⁄
(
£curôy_c⁄ãxt_t
 * 
c⁄
);

89 
gësock¸óãc⁄_øw
(
£curôy_c⁄ãxt_t
 * 
c⁄
);

93 
£tsock¸óãc⁄
(
£curôy_c⁄ãxt_t
 
c⁄ãxt
);

94 
£tsock¸óãc⁄_øw
(
£curôy_c⁄ãxt_t
 
c⁄ãxt
);

100 
gëfûec⁄
(c⁄° *
∑th
, 
£curôy_c⁄ãxt_t
 * 
c⁄
);

101 
gëfûec⁄_øw
(c⁄° *
∑th
, 
£curôy_c⁄ãxt_t
 * 
c⁄
);

102 
lgëfûec⁄
(c⁄° *
∑th
, 
£curôy_c⁄ãxt_t
 * 
c⁄
);

103 
lgëfûec⁄_øw
(c⁄° *
∑th
, 
£curôy_c⁄ãxt_t
 * 
c⁄
);

104 
fgëfûec⁄
(
fd
, 
£curôy_c⁄ãxt_t
 * 
c⁄
);

105 
fgëfûec⁄_øw
(
fd
, 
£curôy_c⁄ãxt_t
 * 
c⁄
);

108 
£tfûec⁄
(c⁄° *
∑th
, 
£curôy_c⁄ãxt_t
 
c⁄
);

109 
£tfûec⁄_øw
(c⁄° *
∑th
, 
£curôy_c⁄ãxt_t
 
c⁄
);

110 
l£tfûec⁄
(c⁄° *
∑th
, 
£curôy_c⁄ãxt_t
 
c⁄
);

111 
l£tfûec⁄_øw
(c⁄° *
∑th
, 
£curôy_c⁄ãxt_t
 
c⁄
);

112 
f£tfûec⁄
(
fd
, 
£curôy_c⁄ãxt_t
 
c⁄
);

113 
f£tfûec⁄_øw
(
fd
, 
£curôy_c⁄ãxt_t
 
c⁄
);

119 
gë≥îc⁄
(
fd
, 
£curôy_c⁄ãxt_t
 * 
c⁄
);

120 
gë≥îc⁄_øw
(
fd
, 
£curôy_c⁄ãxt_t
 * 
c⁄
);

124 
	tac˚ss_ve˘‹_t
;

125 
	t£curôy_˛ass_t
;

127 
	sav_decisi⁄
 {

128 
ac˚ss_ve˘‹_t
 
	gÆlowed
;

129 
ac˚ss_ve˘‹_t
 
	gdecided
;

130 
ac˚ss_ve˘‹_t
 
	gaudôÆlow
;

131 
ac˚ss_ve˘‹_t
 
	gaudôdíy
;

132 
	g£qno
;

133 
	gÊags
;

137 
	#SELINUX_AVD_FLAGS_PERMISSIVE
 0x0001

	)

140 
	s£löux_›t
 {

141 
	gty≥
;

142 c⁄° *
	gvÆue
;

146 
	u£löux_ˇŒback
 {

150 #ifde‡
__GNUC__


151 
__©åibuã__
 ((
f‹m©
(
¥ötf
, 2, 3)))

153 (*
	gfunc_log
Ë(
	gty≥
, c⁄° *
	gfmt
, ...);

156 (*
	gfunc_audô
Ë(*
	gaudôd©a
, 
£curôy_˛ass_t
 
	g˛s
,

157 *
	gmsgbuf
, 
size_t
 
	gmsgbufsize
);

159 (*
	gfunc_vÆid©e
Ë(
£curôy_c⁄ãxt_t
 *
	g˘x
);

161 (*
	gfunc_£ãnf‹˚
Ë(
	gíf‹cög
);

163 (*
	gfunc_pﬁicylﬂd
Ë(
	g£qno
);

166 
	#SELINUX_CB_LOG
 0

	)

167 
	#SELINUX_CB_AUDIT
 1

	)

168 
	#SELINUX_CB_VALIDATE
 2

	)

169 
	#SELINUX_CB_SETENFORCE
 3

	)

170 
	#SELINUX_CB_POLICYLOAD
 4

	)

172 
£löux_ˇŒback
 
£löux_gë_ˇŒback
(
ty≥
);

173 
£löux_£t_ˇŒback
(
ty≥
, 
£löux_ˇŒback
 
cb
);

176 
	#SELINUX_ERROR
 0

	)

177 
	#SELINUX_WARNING
 1

	)

178 
	#SELINUX_INFO
 2

	)

179 
	#SELINUX_AVC
 3

	)

182 
£curôy_compuã_av
(
£curôy_c⁄ãxt_t
 
sc⁄
,

183 
£curôy_c⁄ãxt_t
 
tc⁄
,

184 
£curôy_˛ass_t
 
t˛ass
,

185 
ac˚ss_ve˘‹_t
 
ªque°ed
,

186 
av_decisi⁄
 *
avd
);

187 
£curôy_compuã_av_øw
(
£curôy_c⁄ãxt_t
 
sc⁄
,

188 
£curôy_c⁄ãxt_t
 
tc⁄
,

189 
£curôy_˛ass_t
 
t˛ass
,

190 
ac˚ss_ve˘‹_t
 
ªque°ed
,

191 
av_decisi⁄
 *
avd
);

193 
£curôy_compuã_av_Êags
(
£curôy_c⁄ãxt_t
 
sc⁄
,

194 
£curôy_c⁄ãxt_t
 
tc⁄
,

195 
£curôy_˛ass_t
 
t˛ass
,

196 
ac˚ss_ve˘‹_t
 
ªque°ed
,

197 
av_decisi⁄
 *
avd
);

198 
£curôy_compuã_av_Êags_øw
(
£curôy_c⁄ãxt_t
 
sc⁄
,

199 
£curôy_c⁄ãxt_t
 
tc⁄
,

200 
£curôy_˛ass_t
 
t˛ass
,

201 
ac˚ss_ve˘‹_t
 
ªque°ed
,

202 
av_decisi⁄
 *
avd
);

206 
£curôy_compuã_¸óã
(
£curôy_c⁄ãxt_t
 
sc⁄
,

207 
£curôy_c⁄ãxt_t
 
tc⁄
,

208 
£curôy_˛ass_t
 
t˛ass
,

209 
£curôy_c⁄ãxt_t
 * 
√wc⁄
);

210 
£curôy_compuã_¸óã_øw
(
£curôy_c⁄ãxt_t
 
sc⁄
,

211 
£curôy_c⁄ãxt_t
 
tc⁄
,

212 
£curôy_˛ass_t
 
t˛ass
,

213 
£curôy_c⁄ãxt_t
 * 
√wc⁄
);

217 
£curôy_compuã_ªœbñ
(
£curôy_c⁄ãxt_t
 
sc⁄
,

218 
£curôy_c⁄ãxt_t
 
tc⁄
,

219 
£curôy_˛ass_t
 
t˛ass
,

220 
£curôy_c⁄ãxt_t
 * 
√wc⁄
);

221 
£curôy_compuã_ªœbñ_øw
(
£curôy_c⁄ãxt_t
 
sc⁄
,

222 
£curôy_c⁄ãxt_t
 
tc⁄
,

223 
£curôy_˛ass_t
 
t˛ass
,

224 
£curôy_c⁄ãxt_t
 * 
√wc⁄
);

228 
£curôy_compuã_membî
(
£curôy_c⁄ãxt_t
 
sc⁄
,

229 
£curôy_c⁄ãxt_t
 
tc⁄
,

230 
£curôy_˛ass_t
 
t˛ass
,

231 
£curôy_c⁄ãxt_t
 * 
√wc⁄
);

232 
£curôy_compuã_membî_øw
(
£curôy_c⁄ãxt_t
 
sc⁄
,

233 
£curôy_c⁄ãxt_t
 
tc⁄
,

234 
£curôy_˛ass_t
 
t˛ass
,

235 
£curôy_c⁄ãxt_t
 * 
√wc⁄
);

239 
£curôy_compuã_u£r
(
£curôy_c⁄ãxt_t
 
sc⁄
,

240 c⁄° *
u£∫ame
,

241 
£curôy_c⁄ãxt_t
 ** 
c⁄
);

242 
£curôy_compuã_u£r_øw
(
£curôy_c⁄ãxt_t
 
sc⁄
,

243 c⁄° *
u£∫ame
,

244 
£curôy_c⁄ãxt_t
 ** 
c⁄
);

247 
£curôy_lﬂd_pﬁicy
(*
d©a
, 
size_t
 
Àn
);

251 
£curôy_gë_öôül_c⁄ãxt
(c⁄° *
«me
,

252 
£curôy_c⁄ãxt_t
 * 
c⁄
);

253 
£curôy_gë_öôül_c⁄ãxt_øw
(c⁄° *
«me
,

254 
£curôy_c⁄ãxt_t
 * 
c⁄
);

270 
£löux_mklﬂd_pﬁicy
(
¥e£rveboﬁs
);

287 
£löux_öô_lﬂd_pﬁicy
(*
íf‹˚
);

291 *
	g«me
;

292 
	gvÆue
;

293 } 
	tSELboﬁón
;

295 
£curôy_£t_boﬁón_li°
(
size_t
 
boﬁ˙t
,

296 
SELboﬁón
 * 
boﬁli°
, 
≥rm™ít
);

301 
£curôy_lﬂd_boﬁóns
(*
∑th
);

304 
£curôy_check_c⁄ãxt
(
£curôy_c⁄ãxt_t
 
c⁄
);

305 
£curôy_check_c⁄ãxt_øw
(
£curôy_c⁄ãxt_t
 
c⁄
);

308 
£curôy_ˇn⁄iˇlize_c⁄ãxt
(
£curôy_c⁄ãxt_t
 
c⁄
,

309 
£curôy_c⁄ãxt_t
 * 
ˇn⁄c⁄
);

310 
£curôy_ˇn⁄iˇlize_c⁄ãxt_øw
(
£curôy_c⁄ãxt_t
 
c⁄
,

311 
£curôy_c⁄ãxt_t
 * 
ˇn⁄c⁄
);

314 
£curôy_gëíf‹˚
();

317 
£curôy_£ãnf‹˚
(
vÆue
);

320 
£curôy_díy_unknown
();

323 
£curôy_dißbÀ
();

326 
£curôy_pﬁicyvîs
();

329 
£curôy_gë_boﬁón_«mes
(***
«mes
, *
Àn
);

332 
£curôy_gë_boﬁón_≥ndög
(c⁄° *
«me
);

335 
£curôy_gë_boﬁón_a˘ive
(c⁄° *
«me
);

338 
£curôy_£t_boﬁón
(c⁄° *
«me
, 
vÆue
);

341 
£curôy_commô_boﬁóns
();

344 
	s£curôy_˛ass_m≠pög
 {

345 c⁄° *
	g«me
;

346 c⁄° *
	g≥rms
[(
ac˚ss_ve˘‹_t
) * 8 + 1];

349 
£löux_£t_m≠pög
(
£curôy_˛ass_m≠pög
 *
m≠
);

354 
£curôy_˛ass_t
 
°rög_to_£curôy_˛ass
(c⁄° *
«me
);

355 c⁄° *
£curôy_˛ass_to_°rög
(
£curôy_˛ass_t
 
˛s
);

358 c⁄° *
£curôy_av_≥rm_to_°rög
(
£curôy_˛ass_t
 
t˛ass
,

359 
ac˚ss_ve˘‹_t
 
≥rm
);

360 
ac˚ss_ve˘‹_t
 
°rög_to_av_≥rm
(
£curôy_˛ass_t
 
t˛ass
,

361 c⁄° *
«me
);

365 
£curôy_av_°rög
(
£curôy_˛ass_t
 
t˛ass
,

366 
ac˚ss_ve˘‹_t
 
av
, **
ªsu…
);

369 
¥öt_ac˚ss_ve˘‹
(
£curôy_˛ass_t
 
t˛ass
, 
ac˚ss_ve˘‹_t
 
av
);

374 
£t_m©ch∑thc⁄_¥ötf
((*
f
Ë(c⁄° *
fmt
, ...));

381 
£t_m©ch∑thc⁄_övÆidc⁄
((*
f
Ë(c⁄° *
∑th
,

382 
löío
,

383 *
c⁄ãxt
));

389 
£t_m©ch∑thc⁄_ˇn⁄c⁄
((*
f
Ë(c⁄° *
∑th
,

390 
löío
,

391 **
c⁄ãxt
));

394 
	#MATCHPATHCON_BASEONLY
 1

	)

395 
	#MATCHPATHCON_NOTRANS
 2

	)

396 
	#MATCHPATHCON_VALIDATE
 4

	)

397 
£t_m©ch∑thc⁄_Êags
(
Êags
);

407 
m©ch∑thc⁄_öô
(c⁄° *
∑th
);

411 
m©ch∑thc⁄_öô_¥efix
(c⁄° *
∑th
, c⁄° *
¥efix
);

414 
m©ch∑thc⁄_föi
();

422 
m©ch∑thc⁄
(c⁄° *
∑th
,

423 
mode_t
 
mode
, 
£curôy_c⁄ãxt_t
 * 
c⁄
);

427 
m©ch∑thc⁄_ödex
(c⁄° *
∑th
,

428 
mode_t
 
mode
, 
£curôy_c⁄ãxt_t
 * 
c⁄
);

435 
m©ch∑thc⁄_fûe•ec_add
(
öo_t
 
öo
, 
•ecöd
, c⁄° *
fûe
);

439 
m©ch∑thc⁄_fûe•ec_de°roy
();

442 
m©ch∑thc⁄_fûe•ec_evÆ
();

446 
m©ch∑thc⁄_checkm©ches
(*
°r
);

451 
m©chmedüc⁄
(c⁄° *
medü
, 
£curôy_c⁄ãxt_t
 * 
c⁄
);

458 
£löux_gëíf‹˚mode
(*
íf‹˚
);

465 
£löux_gëpﬁicyty≥
(**
pﬁicyty≥
);

472 c⁄° *
£löux_pﬁicy_roŸ
();

476 c⁄° *
£löux_bö¨y_pﬁicy_∑th
();

477 c⁄° *
£löux_Áûß„_c⁄ãxt_∑th
();

478 c⁄° *
£löux_ªmovabÀ_c⁄ãxt_∑th
();

479 c⁄° *
£löux_deÁu…_c⁄ãxt_∑th
();

480 c⁄° *
£löux_u£r_c⁄ãxts_∑th
();

481 c⁄° *
£löux_fûe_c⁄ãxt_∑th
();

482 c⁄° *
£löux_fûe_c⁄ãxt_homedú_∑th
();

483 c⁄° *
£löux_fûe_c⁄ãxt_loˇl_∑th
();

484 c⁄° *
£löux_fûe_c⁄ãxt_subs_∑th
();

485 c⁄° *
£löux_homedú_c⁄ãxt_∑th
();

486 c⁄° *
£löux_medü_c⁄ãxt_∑th
();

487 c⁄° *
£löux_vútuÆ_domaö_c⁄ãxt_∑th
();

488 c⁄° *
£löux_vútuÆ_image_c⁄ãxt_∑th
();

489 c⁄° *
£löux_x_c⁄ãxt_∑th
();

490 c⁄° *
£löux_£pgsql_c⁄ãxt_∑th
();

491 c⁄° *
£löux_c⁄ãxts_∑th
();

492 c⁄° *
£löux_£cuªây_ty≥s_∑th
();

493 c⁄° *
£löux_boﬁóns_∑th
();

494 c⁄° *
£löux_cu°omizabÀ_ty≥s_∑th
();

495 c⁄° *
£löux_u£rs_∑th
();

496 c⁄° *
£löux_u£rsc⁄f_∑th
();

497 c⁄° *
£löux_å™¶©i⁄s_∑th
();

498 c⁄° *
£löux_cﬁ‹s_∑th
();

499 c⁄° *
£löux_√tfûãr_c⁄ãxt_∑th
();

500 c⁄° *
£löux_∑th
();

504 
£löux_check_∑sswd_ac˚ss
(
ac˚ss_ve˘‹_t
 
ªque°ed
);

505 
checkPasswdAc˚ss
(
ac˚ss_ve˘‹_t
 
ªque°ed
);

509 
£löux_check_£cuªây_c⁄ãxt
(
£curôy_c⁄ãxt_t
 
ây_c⁄ãxt
);

515 
£t_£löuxm¡
(*
m¡
);

518 
föi_£löuxm¡
();

521 
Ωm_execc⁄
(
vîifõd
,

522 c⁄° *
fûíame
,

523 *c⁄° 
¨gv
[], *c⁄° 
ívp
[]);

527 
is_c⁄ãxt_cu°omizabÀ
(
£curôy_c⁄ãxt_t
 
sc⁄ãxt
);

534 
£löux_å™s_to_øw_c⁄ãxt
(
£curôy_c⁄ãxt_t
 
å™s
,

535 
£curôy_c⁄ãxt_t
 * 
øwp
);

536 
£löux_øw_to_å™s_c⁄ãxt
(
£curôy_c⁄ãxt_t
 
øw
,

537 
£curôy_c⁄ãxt_t
 * 
å™•
);

544 
£löux_øw_c⁄ãxt_to_cﬁ‹
(
£curôy_c⁄ãxt_t
 
øw
,

545 **
cﬁ‹_°r
);

552 
gë£u£rby«me
(c⁄° *
löuxu£r
, **
£u£r
, **
Àvñ
);

559 
gë£u£r
(c⁄° *
u£∫ame
, c⁄° *
£rvi˚
,

560 **
r_£u£r
, **
r_Àvñ
);

563 
£löux_fûe_c⁄ãxt_cmp
(c⁄° 
£curôy_c⁄ãxt_t
 
a
,

564 c⁄° 
£curôy_c⁄ãxt_t
 
b
);

570 
£löux_fûe_c⁄ãxt_vîify
(c⁄° *
∑th
, 
mode_t
 
mode
);

573 
£löux_l£tfûec⁄_deÁu…
(c⁄° *
∑th
);

580 
£löux_ª£t_c⁄fig
();

582 #ifde‡
__˝lu•lus


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/slurm/slurm.h

42 #i‚de‡
_SLURM_H


43 
	#_SLURM_H


	)

50 #ifde‡
__˝lu•lus


51 
	#BEGIN_C_DECLS
 "C" {

	)

52 
	#END_C_DECLS
 }

	)

54 
	#BEGIN_C_DECLS


	)

55 
	#END_C_DECLS


	)

62 #i‡
deföed
 (
__STDC__
Ë|| deföed (
_AIX
) \

63 || (
deföed
 (
__mùs
Ë&& deföed (
_SYSTYPE_SVR4
)) \

64 || 
deföed
(
WIN32
Ë|| 
	$deföed
(
__˝lu•lus
)

65 
	#PARAMS
(
¥Ÿos
Ë
	)
protos

67 
	#PARAMS
(
¥Ÿos
Ë()

	)

80 
	#SYSTEM_DIMENSIONS
 1

	)

81 
	#HIGHEST_DIMENSIONS
 5

	)

87 
	#HAVE_SYS_SOCKET_H
 1

	)

90 #i‚de‡
DEFAULT_WAIT_ALL_NODES


91 
	#DEFAULT_WAIT_ALL_NODES
 0

	)

94 
BEGIN_C_DECLS


96 
	~<¶urm/¶urm_î∫o.h
>

98 #i‡
HAVE_STDINT_H


99 
	~<°döt.h
>

101 #i‡
HAVE_INTTYPES_H


102 
	~<öây≥s.h
>

104 
	~<°dboﬁ.h
>

105 
	~<°dio.h
>

106 
	~<sys/ty≥s.h
>

107 
	~<time.h
>

108 
	~<uni°d.h
>

110 #ifde‡
CRAPPY_COMPILER


123 
	#TRUE
 1

	)

126 
	#FALSE
 0

	)

128 
	tSLURM_BOOL
;

130 
	#boﬁ
 
SLURM_BOOL


	)

134 #ifdef 
HAVE_SYS_SOCKET_H


135 #i‚de‡
__¶urm_addr_t_deföed


136 
	~<√töë/ö.h
>

137 
	#__¶urm_addr_t_deföed


	)

138 
sockaddr_ö
 
	t¶urm_addr_t
;

145 #i‚de‡
PRIu64


146 
	#PRIu64
 "Œu"

	)

149 #i‚de‡
__¶urm_¸ed_t_deföed


150 
	#__¶urm_¸ed_t_deföed


	)

151 
¶urm_job_¸edítül
 
	t¶urm_¸ed_t
;

155 #i‚de‡
__swôch_joböfo_t_deföed


156 
	#__swôch_joböfo_t_deföed


	)

157 
swôch_joböfo
 
	tswôch_joböfo_t
;

162 #i‚de‡
__job_ªsour˚s_t_deföed


163 
	#__job_ªsour˚s_t_deföed


	)

164 
job_ªsour˚s
 
	tjob_ªsour˚s_t
;

169 #i‚de‡
__£À˘_joböfo_t_deföed


170 
	#__£À˘_joböfo_t_deföed


	)

171 
£À˘_joböfo
 
	t£À˘_joböfo_t
;

172 
£À˘_nodeöfo
 
	t£À˘_nodeöfo_t
;

176 #i‚de‡
__jobac˘öfo_t_deföed


177 
	#__jobac˘öfo_t_deföed


	)

178 
jobac˘öfo
 
	tjobac˘öfo_t
;

183 #i‚de‡
__Æloˇti⁄_msg_thªad_t_deföed


184 
	#__Æloˇti⁄_msg_thªad_t_deföed


	)

185 
Æloˇti⁄_msg_thªad
 
	tÆloˇti⁄_msg_thªad_t
;

188 #i‚de‡
__sbˇ°_¸ed_t_deföed


189 
	#__sbˇ°_¸ed_t_deföed


	)

190 
sbˇ°_¸ed
 
	tsbˇ°_¸ed_t
;

204 
	#SLURM_VERSION_NUMBER
 0x020303

	)

205 
	#SLURM_VERSION_NUM
(
a
,
b
,
c
Ë((◊Ë<< 16Ë+ ((bË<< 8Ë+ (c))

	)

206 
	#SLURM_VERSION_MAJOR
(
a
Ë((◊Ë>> 16Ë& 0xff)

	)

207 
	#SLURM_VERSION_MINOR
(
a
Ë((◊Ë>> 8Ë& 0xff)

	)

208 
	#SLURM_VERSION_MICRO
(
a
Ë(◊Ë& 0xff)

	)

216 
	#INFINITE
 (0xffffffff)

	)

217 
	#NO_VAL
 (0xffffff„)

	)

218 
	#MAX_TASKS_PER_NODE
 128

	)

221 
	#SLURM_BATCH_SCRIPT
 (0xffffff„)

	)

226 
	ejob_°©es
 {

227 
JOB_PENDING
,

228 
JOB_RUNNING
,

229 
JOB_SUSPENDED
,

230 
JOB_COMPLETE
,

231 
JOB_CANCELLED
,

232 
JOB_FAILED
,

233 
JOB_TIMEOUT
,

234 
JOB_NODE_FAIL
,

235 
JOB_PREEMPTED
,

236 
JOB_END


238 
	#JOB_STATE_BASE
 0x00f‡

	)

239 
	#JOB_STATE_FLAGS
 0xff00

	)

240 
	#JOB_COMPLETING
 0x8000

	)

241 
	#JOB_CONFIGURING
 0x4000

	)

242 
	#JOB_RESIZING
 0x2000

	)

246 
	#READY_JOB_FATAL
 -2

	)

247 
	#READY_JOB_ERROR
 -1

	)

248 
	#READY_NODE_STATE
 0x01

	)

249 
	#READY_JOB_STATE
 0x02

	)

251 
	#MAIL_JOB_BEGIN
 0x0001

	)

252 
	#MAIL_JOB_END
 0x0002

	)

253 
	#MAIL_JOB_FAIL
 0x0004

	)

254 
	#MAIL_JOB_REQUEUE
 0x0008

	)

256 
	#NICE_OFFSET
 10000

	)

261 
	ejob_°©e_ªas⁄
 {

263 
WAIT_NO_REASON
 = 0,

264 
WAIT_PRIORITY
,

265 
WAIT_DEPENDENCY
,

266 
WAIT_RESOURCES
,

267 
WAIT_PART_NODE_LIMIT
,

268 
WAIT_PART_TIME_LIMIT
,

269 
WAIT_PART_DOWN
,

270 
WAIT_PART_INACTIVE
,

271 
WAIT_HELD
,

272 
WAIT_TIME
,

273 
WAIT_LICENSES
,

274 
WAIT_ASSOC_JOB_LIMIT
,

275 
WAIT_ASSOC_RESOURCE_LIMIT
,

276 
WAIT_ASSOC_TIME_LIMIT
,

277 
WAIT_RESERVATION
,

278 
WAIT_NODE_NOT_AVAIL
,

279 
WAIT_HELD_USER
,

280 
WAIT_TBD2
,

281 
FAIL_DOWN_PARTITION
,

282 
FAIL_DOWN_NODE
,

283 
FAIL_BAD_CONSTRAINTS
,

284 
FAIL_SYSTEM
,

285 
FAIL_LAUNCH
,

286 
FAIL_EXIT_CODE
,

287 
FAIL_TIMEOUT
,

288 
FAIL_INACTIVE_LIMIT
,

289 
FAIL_ACCOUNT
,

290 
FAIL_QOS
,

291 
WAIT_QOS_THRES
,

292 
WAIT_QOS_JOB_LIMIT
,

293 
WAIT_QOS_RESOURCE_LIMIT
,

294 
WAIT_QOS_TIME_LIMIT


297 
	ejob_ac˘_ty≥s
 {

298 
JOB_START
,

299 
JOB_STEP
,

300 
JOB_SUSPEND
,

301 
JOB_TERMINATED


305 
	#PARTITION_SUBMIT
 0x01

	)

306 
	#PARTITION_SCHED
 0x02

	)

309 
	#PARTITION_DOWN
 (
PARTITION_SUBMIT
)

	)

310 
	#PARTITION_UP
 (
PARTITION_SUBMIT
 | 
PARTITION_SCHED
)

	)

311 
	#PARTITION_DRAIN
 (
PARTITION_SCHED
)

	)

312 
	#PARTITION_INACTIVE
 0x00

	)

314 
	ec⁄√˘i⁄_ty≥
 {

315 
SELECT_MESH
,

316 
SELECT_TORUS
,

317 
SELECT_NAV
,

318 
SELECT_SMALL
,

319 
SELECT_HTC_S
,

320 
SELECT_HTC_D
,

321 
SELECT_HTC_V
,

322 
SELECT_HTC_L


325 
	enode_u£_ty≥
 {

326 
SELECT_COPROCESSOR_MODE
,

327 
SELECT_VIRTUAL_NODE_MODE
,

328 
SELECT_NAV_MODE


331 
	e£À˘_jobd©a_ty≥
 {

332 
SELECT_JOBDATA_GEOMETRY
,

333 
SELECT_JOBDATA_ROTATE
,

334 
SELECT_JOBDATA_CONN_TYPE
,

335 
SELECT_JOBDATA_BLOCK_ID
,

336 
SELECT_JOBDATA_NODES
,

337 
SELECT_JOBDATA_IONODES
,

338 
SELECT_JOBDATA_NODE_CNT
,

339 
SELECT_JOBDATA_ALTERED
,

340 
SELECT_JOBDATA_BLRTS_IMAGE
,

341 
SELECT_JOBDATA_LINUX_IMAGE
,

342 
SELECT_JOBDATA_MLOADER_IMAGE
,

343 
SELECT_JOBDATA_RAMDISK_IMAGE
,

344 
SELECT_JOBDATA_REBOOT
,

345 
SELECT_JOBDATA_RESV_ID
,

346 
SELECT_JOBDATA_PAGG_ID
,

347 
SELECT_JOBDATA_PTR
,

348 
SELECT_JOBDATA_BLOCK_PTR
,

349 
SELECT_JOBDATA_DIM_CNT
,

350 
SELECT_JOBDATA_BLOCK_NODE_CNT
,

351 
SELECT_JOBDATA_START_LOC
,

355 
	e£À˘_noded©a_ty≥
 {

356 
SELECT_NODEDATA_BITMAP_SIZE
,

357 
SELECT_NODEDATA_SUBGRP_SIZE
,

358 
SELECT_NODEDATA_SUBCNT
,

359 
SELECT_NODEDATA_BITMAP
,

361 
SELECT_NODEDATA_STR
,

363 
SELECT_NODEDATA_PTR
,

366 
	e£À˘_¥öt_mode
 {

367 
SELECT_PRINT_HEAD
,

368 
SELECT_PRINT_DATA
,

369 
SELECT_PRINT_MIXED
,

370 
SELECT_PRINT_MIXED_SHORT
,

371 
SELECT_PRINT_BG_ID
,

372 
SELECT_PRINT_NODES
,

373 
SELECT_PRINT_CONNECTION
,

374 
SELECT_PRINT_ROTATE
,

375 
SELECT_PRINT_GEOMETRY
,

376 
SELECT_PRINT_START
,

377 
SELECT_PRINT_BLRTS_IMAGE
,

378 
SELECT_PRINT_LINUX_IMAGE
,

379 
SELECT_PRINT_MLOADER_IMAGE
,

380 
SELECT_PRINT_RAMDISK_IMAGE
,

381 
SELECT_PRINT_REBOOT
,

382 
SELECT_PRINT_RESV_ID
,

383 
SELECT_PRINT_START_LOC
,

386 
	e£À˘_node_˙t
 {

387 
SELECT_GET_NODE_SCALING
,

388 
SELECT_GET_NODE_CPU_CNT
,

389 
SELECT_GET_MP_CPU_CNT
,

391 
SELECT_APPLY_NODE_MIN_OFFSET
,

392 
SELECT_APPLY_NODE_MAX_OFFSET
,

393 
SELECT_SET_NODE_CNT
,

394 
SELECT_SET_MP_CNT


399 
	ejobac˘_d©a_ty≥
 {

400 
JOBACCT_DATA_TOTAL
,

401 
JOBACCT_DATA_PIPE
,

402 
JOBACCT_DATA_RUSAGE
,

404 
JOBACCT_DATA_MAX_VSIZE
,

405 
JOBACCT_DATA_MAX_VSIZE_ID
,

406 
JOBACCT_DATA_TOT_VSIZE
,

407 
JOBACCT_DATA_MAX_RSS
,

408 
JOBACCT_DATA_MAX_RSS_ID
,

409 
JOBACCT_DATA_TOT_RSS
,

410 
JOBACCT_DATA_MAX_PAGES
,

411 
JOBACCT_DATA_MAX_PAGES_ID
,

412 
JOBACCT_DATA_TOT_PAGES
,

413 
JOBACCT_DATA_MIN_CPU
,

414 
JOBACCT_DATA_MIN_CPU_ID
,

415 
JOBACCT_DATA_TOT_CPU


419 
	eèsk_di°_°©es
 {

421 
SLURM_DIST_CYCLIC
 = 1,

422 
SLURM_DIST_BLOCK
,

423 
SLURM_DIST_ARBITRARY
,

424 
SLURM_DIST_PLANE
,

429 
SLURM_DIST_CYCLIC_CYCLIC
,

432 
SLURM_DIST_CYCLIC_BLOCK
,

433 
SLURM_DIST_BLOCK_CYCLIC
,

434 
SLURM_DIST_BLOCK_BLOCK
,

435 
SLURM_NO_LLLP_DIST
,

436 
SLURM_DIST_UNKNOWN


437 } 
	tèsk_di°_°©es_t
;

440 
	#OPEN_MODE_APPEND
 1

	)

441 
	#OPEN_MODE_TRUNCATE
 2

	)

443 
	e˝u_böd_ty≥
 {

445 
CPU_BIND_VERBOSE
 = 0x01,

447 
CPU_BIND_TO_THREADS
= 0x02,

448 
CPU_BIND_TO_CORES
 = 0x04,

449 
CPU_BIND_TO_SOCKETS
= 0x08,

450 
CPU_BIND_TO_LDOMS
 = 0x10,

453 
CPU_BIND_NONE
 = 0x20,

454 
CPU_BIND_RANK
 = 0x40,

455 
CPU_BIND_MAP
 = 0x80,

456 
CPU_BIND_MASK
 = 0x100,

457 
CPU_BIND_LDRANK
 = 0x200,

458 
CPU_BIND_LDMAP
 = 0x400,

459 
CPU_BIND_LDMASK
 = 0x800,

463 
CPU_BIND_CPUSETS
 = 0x8000

464 } 
	t˝u_böd_ty≥_t
;

466 
	emem_böd_ty≥
 {

468 
MEM_BIND_VERBOSE
= 0x01,

471 
MEM_BIND_NONE
 = 0x02,

472 
MEM_BIND_RANK
 = 0x04,

473 
MEM_BIND_MAP
 = 0x08,

474 
MEM_BIND_MASK
 = 0x10,

475 
MEM_BIND_LOCAL
 = 0x20

476 } 
	tmem_böd_ty≥_t
;

483 
	enode_°©es
 {

484 
NODE_STATE_UNKNOWN
,

485 
NODE_STATE_DOWN
,

486 
NODE_STATE_IDLE
,

487 
NODE_STATE_ALLOCATED
,

488 
NODE_STATE_ERROR
,

489 
NODE_STATE_MIXED
,

490 
NODE_STATE_FUTURE
,

491 
NODE_STATE_END


493 
	#NODE_STATE_BASE
 0x00ff

	)

494 
	#NODE_STATE_FLAGS
 0xff00

	)

495 
	#NODE_RESUME
 0x0100

	)

499 
	#NODE_STATE_DRAIN
 0x0200

	)

500 
	#NODE_STATE_COMPLETING
 0x0400

	)

501 
	#NODE_STATE_NO_RESPOND
 0x0800

	)

502 
	#NODE_STATE_POWER_SAVE
 0x1000

	)

503 
	#NODE_STATE_FAIL
 0x2000

	)

505 
	#NODE_STATE_POWER_UP
 0x4000

	)

507 
	#NODE_STATE_MAINT
 0x8000

	)

512 
	#SLURM_SSL_SIGNATURE_LENGTH
 128

	)

516 
	#SHOW_ALL
 0x0001

	)

517 
	#SHOW_DETAIL
 0x0002

	)

520 
	e˘x_keys
 {

521 
SLURM_STEP_CTX_STEPID
,

522 
SLURM_STEP_CTX_TASKS
,

523 
SLURM_STEP_CTX_TID
,

524 
SLURM_STEP_CTX_RESP
,

525 
SLURM_STEP_CTX_CRED
,

526 
SLURM_STEP_CTX_SWITCH_JOB
,

527 
SLURM_STEP_CTX_NUM_HOSTS
,

528 
SLURM_STEP_CTX_HOST
,

529 
SLURM_STEP_CTX_JOBID
,

530 
SLURM_STEP_CTX_USER_MANAGED_SOCKETS


536 
	#CR_CPU
 0x0001

	)

539 
	#CR_SOCKET
 0x0002

	)

542 
	#CR_CORE
 0x0004

	)

545 
	#CR_MEMORY
 0x0010

	)

548 
	#CR_ONE_TASK_PER_CORE
 0x0100

	)

552 
	#CR_CORE_DEFAULT_DIST_BLOCK
 0x1000

	)

556 
	#MEM_PER_CPU
 0x80000000

	)

557 
	#SHARED_FORCE
 0x8000

	)

559 
	#PRIVATE_DATA_JOBS
 0x0001

	)

560 
	#PRIVATE_DATA_NODES
 0x0002

	)

561 
	#PRIVATE_DATA_PARTITIONS
 0x0004

	)

562 
	#PRIVATE_DATA_USAGE
 0x0008

	)

563 
	#PRIVATE_DATA_USERS
 0x0010

	)

564 
	#PRIVATE_DATA_ACCOUNTS
 0x0020

	)

565 
	#PRIVATE_DATA_RESERVATIONS
 0x0040

	)

567 
	#PRIORITY_RESET_NONE
 0x0000

	)

568 
	#PRIORITY_RESET_NOW
 0x0001

	)

569 
	#PRIORITY_RESET_DAILY
 0x0002

	)

570 
	#PRIORITY_RESET_WEEKLY
 0x0003

	)

571 
	#PRIORITY_RESET_MONTHLY
 0x0004

	)

572 
	#PRIORITY_RESET_QUARTERLY
 0x0005

	)

573 
	#PRIORITY_RESET_YEARLY
 0x0006

	)

575 
	#PROP_PRIO_OFF
 0x0000

	)

576 
	#PROP_PRIO_ON
 0x0001

	)

577 
	#PROP_PRIO_NICER
 0x0002

	)

589 #i‚de‡ 
__ho°li°_t_deföed


590 
	#__ho°li°_t_deföed


	)

591 
ho°li°
 * 
	tho°li°_t
;

626 
ho°li°_t
 
¶urm_ho°li°_¸óã
 
	`PARAMS
((c⁄° *
ho°li°
));

632 
¶urm_ho°li°_cou¡
 
	`PARAMS
((
ho°li°_t
 
hl
));

639 
¶urm_ho°li°_de°roy
 
	`PARAMS
((
ho°li°_t
 
hl
));

649 
¶urm_ho°li°_föd
 
	`PARAMS
((
ho°li°_t
 
hl
, c⁄° *
ho°«me
));

660 
¶urm_ho°li°_push
 
	`PARAMS
((
ho°li°_t
 
hl
, c⁄° *
ho°s
));

670 
¶urm_ho°li°_push_ho°
 
	`PARAMS
((
ho°li°_t
 
hl
, c⁄° *
ho°
));

683 
ssize_t
 
¶urm_ho°li°_ønged_°rög
 
	`PARAMS
((
ho°li°_t
 
hl
,

684 
size_t
 
n
, *
buf
));

692 *
¶urm_ho°li°_ønged_°rög_mÆloc
 
	`PARAMS
((
ho°li°_t
 
hl
));

702 *
¶urm_ho°li°_ønged_°rög_xmÆloc
 
	`PARAMS
((
ho°li°_t
 
hl
));

713 * 
¶urm_ho°li°_shi·
 
	`PARAMS
((
ho°li°_t
 
hl
));

720 
¶urm_ho°li°_uniq
 
	`PARAMS
((
ho°li°_t
 
hl
));

726 #i‚de‡ 
__li°_d©©y≥s_deföed


727 
	#__li°_d©©y≥s_deföed


	)

728 
li°
 * 
	tLi°
;

733 
li°Iãøt‹
 * 
	tLi°Iãøt‹
;

738 (*
	tLi°DñF
Ë(*
	tx
);

745 (*
	tLi°CmpF
Ë(*
	tx
, *
	ty
);

752 (*
	tLi°FödF
Ë(*
	tx
, *
	tkey
);

758 (*
	tLi°F‹F
Ë(*
	tx
, *
	t¨g
);

770 * 
¶urm_li°_≠≥nd
 
	`PARAMS
((
Li°
 
l
, *
x
));

776 
¶urm_li°_cou¡
 
	`PARAMS
((
Li°
 
l
));

787 
Li°
 
¶urm_li°_¸óã
 
	`PARAMS
((
Li°DñF
 
f
));

795 
¶urm_li°_de°roy
 
	`PARAMS
((
Li°
 
l
));

806 * 
¶urm_li°_föd
 
	`PARAMS
((
Li°Iãøt‹
 
i
, 
Li°FödF
 
f
, *
key
));

812 
¶urm_li°_is_em±y
 
	`PARAMS
((
Li°
 
l
));

818 
Li°Iãøt‹
 
¶urm_li°_ôî©‹_¸óã
 
	`PARAMS
((
Li°
 
l
));

825 
¶urm_li°_ôî©‹_ª£t
 
	`PARAMS
((
Li°Iãøt‹
 
i
));

832 
¶urm_li°_ôî©‹_de°roy
 
	`PARAMS
((
Li°Iãøt‹
 
i
));

841 * 
¶urm_li°_√xt
 
	`PARAMS
((
Li°Iãøt‹
 
i
));

849 
¶urm_li°_s‹t
 
	`PARAMS
((
Li°
 
l
, 
Li°CmpF
 
f
));

855 #i‚de‡ 
__bô°r_d©©y≥s_deföed


856 
	#__bô°r_d©©y≥s_deföed


	)

858 #ifde‡
USE_64BIT_BITSTR


859 
öt64_t
 
	tbô°r_t
;

860 
	#BITSTR_SHIFT
 
BITSTR_SHIFT_WORD64


	)

862 
öt32_t
 
	tbô°r_t
;

863 
	#BITSTR_SHIFT
 
BITSTR_SHIFT_WORD32


	)

866 
bô°r_t
 
	tbôoff_t
;

870 
	#ALLOC_SID_ADMIN_HOLD
 0x00000001

	)

871 
	#ALLOC_SID_USER_HOLD
 0x00000002

	)

876 
	sdy«mic_∂ugö_d©a
 {

877 *
d©a
;

878 
uöt32_t
 
∂ugö_id
;

879 } 
	tdy«mic_∂ugö_d©a_t
;

881 
	sjob_des¸ùt‹
 {

882 *
accou¡
;

883 
uöt16_t
 
ac˘g_‰eq
;

884 *
Æloc_node
;

887 
uöt16_t
 
Æloc_ª•_p‹t
;

888 
uöt32_t
 
Æloc_sid
;

893 
uöt32_t
 
¨gc
;

894 **
¨gv
;

895 
time_t
 
begö_time
;

896 
uöt16_t
 
ck±_öãrvÆ
;

897 *
ck±_dú
;

898 *
commít
;

899 
uöt16_t
 
c⁄tiguous
;

901 *
˝u_böd
;

902 
uöt16_t
 
˝u_böd_ty≥
;

903 *
dïídícy
;

904 
time_t
 
íd_time
;

907 **
ívú⁄mít
;

909 
uöt32_t
 
ív_size
;

910 *
exc_nodes
;

912 *
„©uªs
;

914 *
gªs
;

916 
uöt32_t
 
group_id
;

917 
uöt16_t
 
immedüã
;

919 
uöt32_t
 
job_id
;

920 
uöt16_t
 
kûl_⁄_node_Áû
;

922 *
li˚n£s
;

923 
uöt16_t
 
maû_ty≥
;

924 *
maû_u£r
;

925 *
mem_böd
;

926 
uöt16_t
 
mem_böd_ty≥
;

927 *
«me
;

928 *
√tw‹k
;

929 
uöt16_t
 
ni˚
;

931 
uöt32_t
 
num_èsks
;

933 
uöt8_t
 
›í_mode
;

935 
uöt16_t
 
Ÿhî_p‹t
;

936 
uöt8_t
 
ovîcommô
;

937 *
∑πôi⁄
;

939 
uöt16_t
 
∂™e_size
;

941 
uöt32_t
 
¥i‹ôy
;

944 *
qos
;

945 *
ª•_ho°
;

946 *
ªq_nodes
;

948 
uöt16_t
 
ªqueue
;

949 *
ª£rv©i⁄
;

950 *
s¸ùt
;

951 
uöt16_t
 
sh¨ed
;

955 **
•™k_job_ív
;

957 
uöt32_t
 
•™k_job_ív_size
;

958 
uöt16_t
 
èsk_di°
;

959 
uöt32_t
 
time_limô
;

961 
uöt32_t
 
time_mö
;

963 
uöt32_t
 
u£r_id
;

965 
uöt16_t
 
waô_Æl_nodes
;

968 
uöt16_t
 
w¨n_sig«l
;

969 
uöt16_t
 
w¨n_time
;

970 *
w‹k_dú
;

973 
uöt16_t
 
˝us_≥r_èsk
;

975 
uöt32_t
 
mö_˝us
;

977 
uöt32_t
 
max_˝us
;

979 
uöt32_t
 
mö_nodes
;

981 
uöt32_t
 
max_nodes
;

983 
uöt16_t
 
sockës_≥r_node
;

984 
uöt16_t
 
c‹es_≥r_sockë
;

985 
uöt16_t
 
thªads_≥r_c‹e
;

986 
uöt16_t
 
¡asks_≥r_node
;

987 
uöt16_t
 
¡asks_≥r_sockë
;

989 
uöt16_t
 
¡asks_≥r_c‹e
;

990 
uöt16_t
 
≤_mö_˝us
;

991 
uöt32_t
 
≤_mö_mem‹y
;

994 
uöt32_t
 
≤_mö_tmp_disk
;

1003 
uöt16_t
 
geomëry
[
HIGHEST_DIMENSIONS
];

1005 
uöt16_t
 
c⁄n_ty≥
[
HIGHEST_DIMENSIONS
];

1006 
uöt16_t
 
ªboŸ
;

1007 
uöt16_t
 
rŸ©e
;

1008 *
bÃtsimage
;

1009 *
löuximage
;

1010 *
mlﬂdîimage
;

1011 *
ømdiskimage
;

1014 
uöt32_t
 
ªq_swôch
;

1015 
dy«mic_∂ugö_d©a_t
 *
£À˘_joböfo
;

1017 *
°d_îr
;

1018 *
°d_ö
;

1019 *
°d_out
;

1020 
uöt32_t
 
waô4swôch
;

1021 *
wckey
;

1022 } 
	tjob_desc_msg_t
;

1024 
	sjob_öfo
 {

1025 *
accou¡
;

1026 *
Æloc_node
;

1027 
uöt32_t
 
Æloc_sid
;

1028 
uöt32_t
 
assoc_id
;

1029 
uöt16_t
 
b©ch_Êag
;

1030 *
b©ch_ho°
;

1031 *
b©ch_s¸ùt
;

1032 *
comm™d
;

1033 *
commít
;

1034 
uöt16_t
 
c⁄tiguous
;

1035 
uöt16_t
 
˝us_≥r_èsk
;

1037 *
dïídícy
;

1038 
uöt32_t
 
dîived_ec
;

1039 
time_t
 
ñigibÀ_time
;

1040 
time_t
 
íd_time
;

1041 *
exc_nodes
;

1042 *
exc_node_öx
;

1045 
uöt32_t
 
exô_code
;

1046 *
„©uªs
;

1047 *
gªs
;

1048 
uöt32_t
 
group_id
;

1049 
uöt32_t
 
job_id
;

1050 
uöt16_t
 
job_°©e
;

1051 *
li˚n£s
;

1052 
uöt32_t
 
max_˝us
;

1053 
uöt32_t
 
max_nodes
;

1054 
uöt16_t
 
sockës_≥r_node
;

1055 
uöt16_t
 
c‹es_≥r_sockë
;

1056 
uöt16_t
 
thªads_≥r_c‹e
;

1057 *
«me
;

1058 *
√tw‹k
;

1059 *
nodes
;

1060 
uöt16_t
 
ni˚
;

1061 *
node_öx
;

1064 
uöt16_t
 
¡asks_≥r_c‹e
;

1065 
uöt16_t
 
¡asks_≥r_node
;

1066 
uöt16_t
 
¡asks_≥r_sockë
;

1068 
uöt32_t
 
num_nodes
;

1069 
uöt32_t
 
num_˝us
;

1070 *
∑πôi⁄
;

1071 
uöt32_t
 
≤_mö_mem‹y
;

1072 
uöt16_t
 
≤_mö_˝us
;

1073 
uöt32_t
 
≤_mö_tmp_disk
;

1074 
time_t
 
¥e_sus_time
;

1075 
uöt32_t
 
¥i‹ôy
;

1077 *
qos
;

1078 *
ªq_nodes
;

1079 *
ªq_node_öx
;

1082 
uöt32_t
 
ªq_swôch
;

1083 
uöt16_t
 
ªqueue
;

1084 
time_t
 
ªsize_time
;

1085 
uöt16_t
 
ª°¨t_˙t
;

1086 *
ªsv_«me
;

1087 
dy«mic_∂ugö_d©a_t
 *
£À˘_joböfo
;

1091 
job_ªsour˚s_t
 *
job_ª§cs
;

1092 
uöt16_t
 
sh¨ed
;

1093 
uöt16_t
 
show_Êags
;

1094 
time_t
 
°¨t_time
;

1095 *
°©e_desc
;

1096 
uöt16_t
 
°©e_ªas⁄
;

1098 
time_t
 
submô_time
;

1099 
time_t
 
su•íd_time
;

1100 
uöt32_t
 
time_limô
;

1101 
uöt32_t
 
time_mö
;

1102 
uöt32_t
 
u£r_id
;

1103 
time_t
 
¥ìm±_time
;

1104 
uöt32_t
 
waô4swôch
;

1105 *
wckey
;

1106 *
w‹k_dú
;

1107 } 
	tjob_öfo_t
;

1109 
	sjob_öfo_msg
 {

1110 
time_t
 
œ°_upd©e
;

1111 
uöt32_t
 
ªc‹d_cou¡
;

1112 
job_öfo_t
 *
job_¨øy
;

1113 } 
	tjob_öfo_msg_t
;

1115 
	s°ï_upd©e_ªque°_msg
 {

1116 
uöt32_t
 
job_id
;

1117 
uöt32_t
 
°ï_id
;

1118 
uöt32_t
 
time_limô
;

1119 } 
	t°ï_upd©e_ªque°_msg_t
;

1121 
	s¶urm_°ï_œyout
 {

1122 *
‰⁄t_íd
;

1125 
uöt32_t
 
node_˙t
;

1126 *
node_li°
;

1127 
uöt16_t
 
∂™e_size
;

1131 
uöt16_t
 *
èsks
;

1132 
uöt32_t
 
èsk_˙t
;

1133 
uöt16_t
 
èsk_di°
;

1137 
uöt32_t
 **
tids
;

1138 } 
	t¶urm_°ï_œyout_t
;

1140 
	s¶urm_°ï_io_fds
 {

1142 
fd
;

1143 
uöt32_t
 
èskid
;

1144 
uöt32_t
 
nodeid
;

1145 } 
ö
, 
out
, 
îr
;

1146 } 
	t¶urm_°ï_io_fds_t
;

1148 
	#SLURM_STEP_IO_FDS_INITIALIZER
 {{0, (
uöt32_t
)-1, (uint32_t)-1}, \

1149 {1, (
uöt32_t
)-1, (uint32_t)-1}, \

1150 {2, (
uöt32_t
)-1, (uöt32_t)-1}
	}

	)
}

1152 
	sœunch_èsks_ª•⁄£_msg
 {

1153 
uöt32_t
 
	mªtu∫_code
;

1154 *
	mnode_«me
;

1155 
uöt32_t
 
	m§un_node_id
;

1156 
uöt32_t
 
	mcou¡_of_pids
;

1157 
uöt32_t
 *
	mloˇl_pids
;

1158 
uöt32_t
 *
	mèsk_ids
;

1159 } 
	tœunch_èsks_ª•⁄£_msg_t
;

1161 
	sèsk_ext_msg
 {

1162 
uöt32_t
 
	mnum_èsks
;

1163 
uöt32_t
 *
	mèsk_id_li°
;

1164 
uöt32_t
 
	mªtu∫_code
;

1165 
uöt32_t
 
	mjob_id
;

1166 
uöt32_t
 
	m°ï_id
;

1167 } 
	tèsk_exô_msg_t
;

1169 
	s§un_pög_msg
 {

1170 
uöt32_t
 
	mjob_id
;

1171 
uöt32_t
 
	m°ï_id
;

1172 } 
	t§un_pög_msg_t
;

1174 
	s§un_job_com∂ëe_msg
 {

1175 
uöt32_t
 
	mjob_id
;

1176 
uöt32_t
 
	m°ï_id
;

1177 } 
	t§un_job_com∂ëe_msg_t
;

1179 
	s§un_timeout_msg
 {

1180 
uöt32_t
 
	mjob_id
;

1181 
uöt32_t
 
	m°ï_id
;

1182 
time_t
 
	mtimeout
;

1183 } 
	t§un_timeout_msg_t
;

1185 
	s§un_u£r_msg
 {

1186 
uöt32_t
 
	mjob_id
;

1187 *
	mmsg
;

1188 } 
	t§un_u£r_msg_t
;

1190 
	s§un_node_Áû_msg
 {

1191 
uöt32_t
 
	mjob_id
;

1192 *
	mnodñi°
;

1193 
uöt32_t
 
	m°ï_id
;

1194 } 
	t§un_node_Áû_msg_t
;

1196 
	s§un_°ï_missög_msg
 {

1197 
uöt32_t
 
	mjob_id
;

1198 *
	mnodñi°
;

1199 
uöt32_t
 
	m°ï_id
;

1200 } 
	t§un_°ï_missög_msg_t
;

1202 
	esu•íd_›ts
 {

1203 
	mSUSPEND_JOB
,

1204 
	mRESUME_JOB


1207 
	ssu•íd_msg
 {

1208 
uöt16_t
 
	m›
;

1209 
uöt32_t
 
	mjob_id
;

1210 } 
	tsu•íd_msg_t
;

1213 
uöt16_t
 
	mck±_öãrvÆ
;

1214 
uöt32_t
 
	m˝u_cou¡
;

1215 
uöt16_t
 
	mex˛usive
;

1216 *
	m„©uªs
;

1217 
uöt16_t
 
	mimmedüã
;

1219 
uöt32_t
 
	mjob_id
;

1220 
uöt32_t
 
	mmem_≥r_˝u
;

1222 *
	mck±_dú
;

1223 *
	mgªs
;

1224 *
	m«me
;

1225 *
	m√tw‹k
;

1226 
uöt8_t
 
	mno_kûl
;

1227 
uöt32_t
 
	mmö_nodes
;

1229 
uöt32_t
 
	mmax_nodes
;

1231 *
	mnode_li°
;

1232 
boﬁ
 
	movîcommô
;

1236 
uöt16_t
 
	m∂™e_size
;

1238 
uöt16_t
 
	mªœtive
;

1239 
uöt16_t
 
	mªsv_p‹t_˙t
;

1240 
uöt32_t
 
	mèsk_cou¡
;

1241 
uöt16_t
 
	mèsk_di°
;

1243 
uöt32_t
 
	mtime_limô
;

1244 
uid_t
 
	muid
;

1245 
uöt16_t
 
	mvîbo£_Àvñ
;

1247 } 
	t¶urm_°ï_˘x_∑øms_t
;

1250 
uöt32_t
 
	m¨gc
;

1251 **
	m¨gv
;

1252 
uöt32_t
 
	mívc
;

1253 **
	mív
;

1254 *
	mcwd
;

1255 
boﬁ
 
	mu£r_m™aged_io
;

1256 
uöt32_t
 
	mmsg_timeout
;

1259 
boﬁ
 
	mbuf„ªd_°dio
;

1260 
boﬁ
 
	mœbñio
;

1261 *
	mªmŸe_ouçut_fûíame
;

1262 *
	mªmŸe_îr‹_fûíame
;

1263 *
	mªmŸe_öput_fûíame
;

1264 
¶urm_°ï_io_fds_t
 
	mloˇl_fds
;

1267 
uöt32_t
 
	mgid
;

1268 
boﬁ
 
	mmu…i_¥og
;

1269 
uöt32_t
 
	m¶urmd_debug
;

1270 
boﬁ
 
	m∑øŒñ_debug
;

1271 *
	mèsk_¥ﬁog
;

1272 *
	mèsk_ïûog
;

1273 
uöt16_t
 
	m˝u_böd_ty≥
;

1274 *
	m˝u_böd
;

1275 
uöt16_t
 
	mmem_böd_ty≥
;

1276 *
	mmem_böd
;

1278 
uöt16_t
 
	mmax_sockës
;

1279 
uöt16_t
 
	mmax_c‹es
;

1280 
uöt16_t
 
	mmax_thªads
;

1281 
uöt16_t
 
	m˝us_≥r_èsk
;

1282 
uöt16_t
 
	mèsk_di°
;

1283 
boﬁ
 
	m¥e£rve_ív
;

1285 *
	mmpi_∂ugö_«me
;

1286 
uöt8_t
 
	m›í_mode
;

1287 
uöt16_t
 
	mac˘g_‰eq
;

1288 
boﬁ
 
	m±y
;

1289 *
	mck±_dú
;

1290 *
	mª°¨t_dú
;

1291 **
	m•™k_job_ív
;

1293 
uöt32_t
 
	m•™k_job_ív_size
;

1294 } 
	t¶urm_°ï_œunch_∑øms_t
;

1297 (*
	mèsk_°¨t
)(
	mœunch_èsks_ª•⁄£_msg_t
 *);

1298 (*
	mèsk_föish
)(
	mèsk_exô_msg_t
 *);

1299 } 
	t¶urm_°ï_œunch_ˇŒbacks_t
;

1302 (*
	mpög
)(
	m§un_pög_msg_t
 *);

1303 (*
	mjob_com∂ëe
)(
	m§un_job_com∂ëe_msg_t
 *);

1304 (*
	mtimeout
)(
	m§un_timeout_msg_t
 *);

1305 (*
	mu£r_msg
)(
	m§un_u£r_msg_t
 *);

1306 (*
	mnode_Áû
)(
	m§un_node_Áû_msg_t
 *);

1307 (*
	mjob_su•íd
)(
	msu•íd_msg_t
 *);

1308 } 
	t¶urm_Æloˇti⁄_ˇŒbacks_t
;

1311 (*
	mac˘_fuŒ
)();

1312 (*
	mdbd_Áû
)();

1313 (*
	mdbd_ªsumed
)();

1314 (*
	mdb_Áû
)();

1315 (*
	mdb_ªsumed
)();

1316 } 
	t¶urm_åiggî_ˇŒbacks_t
;

1319 *
	mck±_dú
;

1320 
uöt16_t
 
	mck±_öãrvÆ
;

1321 *
	mgªs
;

1322 
uöt32_t
 
	mjob_id
;

1323 *
	m«me
;

1324 *
	m√tw‹k
;

1325 *
	mnodes
;

1326 *
	mnode_öx
;

1329 
uöt32_t
 
	mnum_˝us
;

1330 
uöt32_t
 
	mnum_èsks
;

1331 *
	m∑πôi⁄
;

1332 *
	mªsv_p‹ts
;

1333 
time_t
 
	mrun_time
;

1334 
dy«mic_∂ugö_d©a_t
 *
	m£À˘_joböfo
;

1338 
time_t
 
	m°¨t_time
;

1339 
uöt32_t
 
	m°ï_id
;

1340 
uöt32_t
 
	mtime_limô
;

1341 
uöt32_t
 
	mu£r_id
;

1342 } 
	tjob_°ï_öfo_t
;

1344 
	sjob_°ï_öfo_ª•⁄£_msg
 {

1345 
time_t
 
	mœ°_upd©e
;

1346 
uöt32_t
 
	mjob_°ï_cou¡
;

1347 
job_°ï_öfo_t
 *
	mjob_°ïs
;

1348 } 
	tjob_°ï_öfo_ª•⁄£_msg_t
;

1351 *
	mnode_«me
;

1352 
uöt32_t
 *
	mpid
;

1353 
uöt32_t
 
	mpid_˙t
;

1354 } 
	tjob_°ï_pids_t
;

1357 
uöt32_t
 
	mjob_id
;

1358 
Li°
 
	mpid_li°
;

1359 
uöt32_t
 
	m°ï_id
;

1360 } 
	tjob_°ï_pids_ª•⁄£_msg_t
;

1363 
jobac˘öfo_t
 *
	mjobac˘
;

1364 
uöt32_t
 
	mnum_èsks
;

1365 
uöt32_t
 
	mªtu∫_code
;

1366 
job_°ï_pids_t
 *
	m°ï_pids
;

1367 } 
	tjob_°ï_°©_t
;

1370 
uöt32_t
 
	mjob_id
;

1371 
Li°
 
	m°©s_li°
;

1372 
uöt32_t
 
	m°ï_id
;

1373 } 
	tjob_°ï_°©_ª•⁄£_msg_t
;

1375 
	snode_öfo
 {

1376 *
	m¨ch
;

1377 
time_t
 
	mboŸ_time
;

1378 
uöt16_t
 
	mc‹es
;

1379 
uöt16_t
 
	m˝us
;

1381 *
	m„©uªs
;

1382 *
	mgªs
;

1383 *
	m«me
;

1384 *
	mnode_addr
;

1385 *
	mnode_ho°«me
;

1386 
uöt16_t
 
	mnode_°©e
;

1387 *
	mos
;

1388 
uöt32_t
 
	mªÆ_mem‹y
;

1389 *
	mªas⁄
;

1390 
time_t
 
	mªas⁄_time
;

1392 
uöt32_t
 
	mªas⁄_uid
;

1394 
time_t
 
	m¶urmd_°¨t_time
;

1395 
uöt16_t
 
	msockës
;

1396 
uöt16_t
 
	mthªads
;

1397 
uöt32_t
 
	mtmp_disk
;

1398 
uöt32_t
 
	mweight
;

1399 
dy«mic_∂ugö_d©a_t
 *
	m£À˘_nodeöfo
;

1403 } 
	tnode_öfo_t
;

1405 
	snode_öfo_msg
 {

1406 
time_t
 
	mœ°_upd©e
;

1407 
uöt32_t
 
	mnode_sˇlög
;

1413 
uöt32_t
 
	mªc‹d_cou¡
;

1414 
node_öfo_t
 *
	mnode_¨øy
;

1415 } 
	tnode_öfo_msg_t
;

1417 
	s‰⁄t_íd_öfo
 {

1418 
time_t
 
	mboŸ_time
;

1420 *
	m«me
;

1421 
uöt16_t
 
	mnode_°©e
;

1422 *
	mªas⁄
;

1424 
time_t
 
	mªas⁄_time
;

1426 
uöt32_t
 
	mªas⁄_uid
;

1428 
time_t
 
	m¶urmd_°¨t_time
;

1429 } 
	t‰⁄t_íd_öfo_t
;

1431 
	s‰⁄t_íd_öfo_msg
 {

1432 
time_t
 
	mœ°_upd©e
;

1433 
uöt32_t
 
	mªc‹d_cou¡
;

1434 
‰⁄t_íd_öfo_t
 *
	m‰⁄t_íd_¨øy
;

1435 } 
	t‰⁄t_íd_öfo_msg_t
;

1437 
	st›o_öfo
 {

1438 
uöt16_t
 
	mÀvñ
;

1439 
uöt32_t
 
	mlök_•ìd
;

1440 *
	m«me
;

1441 *
	mnodes
;

1442 *
	mswôches
;

1443 } 
	tt›o_öfo_t
;

1445 
	st›o_öfo_ª•⁄£_msg
 {

1446 
uöt32_t
 
	mªc‹d_cou¡
;

1447 
t›o_öfo_t
 *
	mt›o_¨øy
;

1448 } 
	tt›o_öfo_ª•⁄£_msg_t
;

1450 
	sjob_Æloc_öfo_msg
 {

1451 
uöt32_t
 
	mjob_id
;

1452 } 
	tjob_Æloc_öfo_msg_t
;

1456 
	#PART_FLAG_DEFAULT
 0x0001

	)

1457 
	#PART_FLAG_HIDDEN
 0x0002

	)

1458 
	#PART_FLAG_NO_ROOT
 0x0004

	)

1459 
	#PART_FLAG_ROOT_ONLY
 0x0008

	)

1464 
	#PART_FLAG_DEFAULT_CLR
 0x0100

	)

1465 
	#PART_FLAG_HIDDEN_CLR
 0x0200

	)

1466 
	#PART_FLAG_NO_ROOT_CLR
 0x0400

	)

1467 
	#PART_FLAG_ROOT_ONLY_CLR
 0x0800

	)

1469 
	s∑πôi⁄_öfo
 {

1470 *
	mÆlow_Æloc_nodes
;

1471 *
	mÆlow_groups
;

1473 *
	mÆã∫©e
;

1474 
uöt32_t
 
	mdef_mem_≥r_˝u
;

1475 
uöt32_t
 
	mdeÁu…_time
;

1476 
uöt16_t
 
	mÊags
;

1477 
uöt32_t
 
	mgø˚_time
;

1478 
uöt32_t
 
	mmax_mem_≥r_˝u
;

1479 
uöt32_t
 
	mmax_nodes
;

1480 
uöt16_t
 
	mmax_sh¨e
;

1481 
uöt32_t
 
	mmax_time
;

1482 
uöt32_t
 
	mmö_nodes
;

1483 *
	m«me
;

1484 *
	mnode_öx
;

1487 *
	mnodes
;

1488 
uöt16_t
 
	m¥ìm±_mode
;

1489 
uöt16_t
 
	m¥i‹ôy
;

1490 
uöt16_t
 
	m°©e_up
;

1491 
uöt32_t
 
	mtŸÆ_˝us
;

1492 
uöt32_t
 
	mtŸÆ_nodes
;

1493 } 
	t∑πôi⁄_öfo_t
;

1495 
	sdñëe_∑πôi⁄_msg
 {

1496 *
	m«me
;

1497 } 
	tdñëe_∑π_msg_t
;

1499 
	sªsour˚_Æloˇti⁄_ª•⁄£_msg
 {

1500 
uöt32_t
 
	mjob_id
;

1501 *
	mnode_li°
;

1502 
uöt32_t
 
	mnum_˝u_groups
;

1503 
uöt16_t
 *
	m˝us_≥r_node
;

1504 
uöt32_t
 *
	m˝u_cou¡_ªps
;

1505 
uöt32_t
 
	mnode_˙t
;

1506 
uöt32_t
 
	mîr‹_code
;

1507 
dy«mic_∂ugö_d©a_t
 *
	m£À˘_joböfo
;

1511 
uöt32_t
 
	m≤_mö_mem‹y
;

1514 } 
	tªsour˚_Æloˇti⁄_ª•⁄£_msg_t
;

1516 
	sjob_Æloc_öfo_ª•⁄£_msg
 {

1517 
uöt32_t
 
	mjob_id
;

1518 *
	mnode_li°
;

1519 
uöt32_t
 
	mnum_˝u_groups
;

1520 
uöt16_t
 *
	m˝us_≥r_node
;

1521 
uöt32_t
 *
	m˝u_cou¡_ªps
;

1522 
uöt32_t
 
	mnode_˙t
;

1523 
¶urm_addr_t
 *
	mnode_addr
;

1524 
uöt32_t
 
	mîr‹_code
;

1525 
dy«mic_∂ugö_d©a_t
 *
	m£À˘_joböfo
;

1529 } 
	tjob_Æloc_öfo_ª•⁄£_msg_t
;

1531 
	s∑πôi⁄_öfo_msg
 {

1532 
time_t
 
	mœ°_upd©e
;

1533 
uöt32_t
 
	mªc‹d_cou¡
;

1534 
∑πôi⁄_öfo_t
 *
	m∑πôi⁄_¨øy
;

1535 } 
	t∑πôi⁄_öfo_msg_t
;

1541 *
	m˙odes
;

1542 *
	m˙ode_öx
;

1547 
uöt32_t
 
	mjob_id
;

1548 *
	mjob_±r
;

1549 
uöt32_t
 
	mu£r_id
;

1550 *
	mu£r_«me
;

1551 } 
	tblock_job_öfo_t
;

1554 *
	mbg_block_id
;

1555 *
	mbÃtsimage
;

1556 
uöt16_t
 
	mc⁄n_ty≥
[
HIGHEST_DIMENSIONS
];

1557 
uöt32_t
 
	m˙ode_˙t
;

1558 *
	mi⁄ode_öx
;

1562 *
	mi⁄ode_°r
;

1563 
Li°
 
	mjob_li°
;

1564 
uöt32_t
 
	mjob_ru¬ög
;

1565 *
	mlöuximage
;

1566 *
	mmlﬂdîimage
;

1567 *
	mmp_öx
;

1570 *
	mmp_°r
;

1571 *
	mmp_u£d_öx
;

1575 *
	mmp_u£d_°r
;

1576 
uöt16_t
 
	mnode_u£
;

1577 *
	mow√r_«me
;

1578 *
	mømdiskimage
;

1579 *
	mªas⁄
;

1580 
uöt16_t
 
	m°©e
;

1581 } 
	tblock_öfo_t
;

1584 
block_öfo_t
 *
	mblock_¨øy
;

1585 
time_t
 
	mœ°_upd©e
;

1586 
uöt32_t
 
	mªc‹d_cou¡
;

1587 } 
	tblock_öfo_msg_t
;

1589 
block_öfo_t
 
	tupd©e_block_msg_t
;

1598 
¶urm_¥öt_block_öfo_msg
 
PARAMS
(

1599 (
FILE
 *
out
, 
block_öfo_msg_t
 *
öfo_±r
, 
⁄e_löî
));

1608 
¶urm_¥öt_block_öfo
 
PARAMS
(

1609 (
FILE
 *
out
, 
block_öfo_t
 *
bg_öfo_±r
, 
⁄e_löî
));

1619 *
¶urm_•röt_block_öfo
 
PARAMS
(

1620 (
block_öfo_t
 * 
bg_öfo_±r
, 
⁄e_löî
));

1632 
¶urm_lﬂd_block_öfo
 
PARAMS
(

1633 (
time_t
 
upd©e_time
, 
block_öfo_msg_t
 **
block_öfo_msg_µå
,

1634 
uöt16_t
 
show_Êags
));

1642 
¶urm_‰ì_block_öfo_msg
 
PARAMS
(

1643 (
block_öfo_msg_t
 *
block_öfo_msg
));

1646 
¶urm_upd©e_block
 
PARAMS
((
upd©e_block_msg_t
 *
block_msg
));

1648 
¶urm_öô_upd©e_block_msg
 
PARAMS
((
upd©e_block_msg_t
 *
upd©e_block_msg
));

1657 
	#RESERVE_FLAG_MAINT
 0x0001

	)

1658 
	#RESERVE_FLAG_NO_MAINT
 0x0002

	)

1659 
	#RESERVE_FLAG_DAILY
 0x0004

	)

1660 
	#RESERVE_FLAG_NO_DAILY
 0x0008

	)

1661 
	#RESERVE_FLAG_WEEKLY
 0x0010

	)

1662 
	#RESERVE_FLAG_NO_WEEKLY
 0x0020

	)

1663 
	#RESERVE_FLAG_IGN_JOBS
 0x0040

	)

1664 
	#RESERVE_FLAG_NO_IGN_JOB
 0x0080

	)

1665 
	#RESERVE_FLAG_LIC_ONLY
 0x0100

	)

1666 
	#RESERVE_FLAG_NO_LIC_ONLY
 0x0200

	)

1667 
	#RESERVE_FLAG_OVERLAP
 0x4000

	)

1668 
	#RESERVE_FLAG_SPEC_NODES
 0x8000

	)

1670 
	sª£rve_öfo
 {

1671 *
	maccou¡s
;

1672 
time_t
 
	míd_time
;

1673 *
	m„©uªs
;

1674 
uöt16_t
 
	mÊags
;

1675 *
	mli˚n£s
;

1676 *
	m«me
;

1677 
uöt32_t
 
	mnode_˙t
;

1678 *
	mnode_öx
;

1681 *
	mnode_li°
;

1682 *
	m∑πôi⁄
;

1683 
time_t
 
	m°¨t_time
;

1684 *
	mu£rs
;

1685 } 
	tª£rve_öfo_t
;

1687 
	sª£rve_öfo_msg
 {

1688 
time_t
 
	mœ°_upd©e
;

1689 
uöt32_t
 
	mªc‹d_cou¡
;

1690 
ª£rve_öfo_t
 *
	mª£rv©i⁄_¨øy
;

1691 } 
	tª£rve_öfo_msg_t
;

1693 
	sªsv_desc_msg
 {

1694 *
	maccou¡s
;

1695 
uöt32_t
 
	mduøti⁄
;

1696 
time_t
 
	míd_time
;

1697 *
	m„©uªs
;

1698 
uöt16_t
 
	mÊags
;

1699 *
	mli˚n£s
;

1700 *
	m«me
;

1701 
uöt32_t
 
	mnode_˙t
;

1702 *
	mnode_li°
;

1703 *
	m∑πôi⁄
;

1704 
time_t
 
	m°¨t_time
;

1705 *
	mu£rs
;

1706 } 
	tªsv_desc_msg_t
;

1708 
	sª£rve_ª•⁄£_msg
 {

1709 *
	m«me
;

1710 } 
	tª£rve_ª•⁄£_msg_t
;

1712 
	sª£rv©i⁄_«me_msg
 {

1713 *
	m«me
;

1715 } 
	tª£rv©i⁄_«me_msg_t
;

1718 
	#DEBUG_FLAG_SELECT_TYPE
 0x00000001

	)

1719 
	#DEBUG_FLAG_STEPS
 0x00000002

	)

1720 
	#DEBUG_FLAG_TRIGGERS
 0x00000004

	)

1721 
	#DEBUG_FLAG_CPU_BIND
 0x00000008

	)

1722 
	#DEBUG_FLAG_WIKI
 0x00000010

	)

1723 
	#DEBUG_FLAG_NO_CONF_HASH
 0x00000020

	)

1725 
	#DEBUG_FLAG_GRES
 0x00000040

	)

1726 
	#DEBUG_FLAG_BG_PICK
 0x00000080

	)

1728 
	#DEBUG_FLAG_BG_WIRES
 0x00000100

	)

1729 
	#DEBUG_FLAG_BG_ALGO
 0x00000200

	)

1730 
	#DEBUG_FLAG_BG_ALGO_DEEP
 0x00000400

	)

1732 
	#DEBUG_FLAG_PRIO
 0x00000800

	)

1733 
	#DEBUG_FLAG_BACKFILL
 0x00001000

	)

1734 
	#DEBUG_FLAG_GANG
 0x00002000

	)

1735 
	#DEBUG_FLAG_RESERVATION
 0x00004000

	)

1736 
	#DEBUG_FLAG_FRONT_END
 0x00008000

	)

1738 
	#GROUP_FORCE
 0x8000

	)

1741 
	#GROUP_CACHE
 0x4000

	)

1743 
	#GROUP_TIME_MASK
 0x0ff‡

	)

1746 
	#PREEMPT_MODE_OFF
 0x0000

	)

1747 
	#PREEMPT_MODE_SUSPEND
 0x0001

	)

1748 
	#PREEMPT_MODE_REQUEUE
 0x0002

	)

1749 
	#PREEMPT_MODE_CHECKPOINT
 0x0004

	)

1751 
	#PREEMPT_MODE_CANCEL
 0x0008

	)

1752 
	#PREEMPT_MODE_GANG
 0x8000

	)

1754 
	s¶urm_˘l_c⁄f
 {

1755 
time_t
 
	mœ°_upd©e
;

1756 
uöt16_t
 
	maccou¡ög_°‹age_íf‹˚
;

1758 *
	maccou¡ög_°‹age_backup_ho°
;

1760 *
	maccou¡ög_°‹age_ho°
;

1761 *
	maccou¡ög_°‹age_loc
;

1763 *
	maccou¡ög_°‹age_∑ss
;

1765 
uöt32_t
 
	maccou¡ög_°‹age_p‹t
;

1766 *
	maccou¡ög_°‹age_ty≥
;

1767 *
	maccou¡ög_°‹age_u£r
;

1768 
uöt16_t
 
	mac˘ng_°‹e_job_commít
;

1769 *
	mauthty≥
;

1770 *
	mbackup_addr
;

1771 *
	mbackup_c⁄åﬁÀr
;

1772 
uöt16_t
 
	mb©ch_°¨t_timeout
;

1773 
time_t
 
	mboŸ_time
;

1774 *
	mcheckpoöt_ty≥
;

1775 *
	m˛u°î_«me
;

1776 
uöt16_t
 
	mcom∂ëe_waô
;

1778 *
	mc⁄åﬁ_addr
;

1779 *
	mc⁄åﬁ_machöe
;

1780 *
	m¸y±o_ty≥
;

1781 
uöt32_t
 
	mdebug_Êags
;

1782 
uöt32_t
 
	mdef_mem_≥r_˝u
;

1783 
uöt16_t
 
	mdißbÀ_roŸ_jobs
;

1784 
uöt16_t
 
	míf‹˚_∑π_limôs
;

1786 *
	mïûog
;

1787 
uöt32_t
 
	mïûog_msg_time
;

1789 *
	mïûog_¶urm˘ld
;

1790 
uöt16_t
 
	mÁ°_scheduÀ
;

1792 
uöt32_t
 
	mfú°_job_id
;

1793 
uöt16_t
 
	mgë_ív_timeout
;

1794 * 
	mgªs_∂ugös
;

1795 
uöt16_t
 
	mgroup_öfo
;

1796 
uöt32_t
 
	mhash_vÆ
;

1797 
uöt16_t
 
	mhó…h_check_öãrvÆ
;

1798 * 
	mhó…h_check_¥ogøm
;

1799 
uöt16_t
 
	möa˘ive_limô
;

1801 
uöt16_t
 
	mjob_ac˘_g©hî_‰eq
;

1803 *
	mjob_ac˘_g©hî_ty≥
;

1804 *
	mjob_ck±_dú
;

1805 *
	mjob_comp_ho°
;

1806 *
	mjob_comp_loc
;

1807 *
	mjob_comp_∑ss
;

1808 
uöt32_t
 
	mjob_comp_p‹t
;

1809 *
	mjob_comp_ty≥
;

1810 *
	mjob_comp_u£r
;

1811 *
	mjob_¸edítül_¥iv©e_key
;

1812 *
	mjob_¸edítül_public_˚πifiˇã
;

1813 
uöt16_t
 
	mjob_fûe_≠≥nd
;

1814 
uöt16_t
 
	mjob_ªqueue
;

1815 *
	mjob_submô_∂ugös
;

1816 
uöt16_t
 
	mkûl_⁄_bad_exô
;

1819 
uöt16_t
 
	mkûl_waô
;

1821 *
	mli˚n£s
;

1822 *
	mmaû_¥og
;

1823 
uöt32_t
 
	mmax_job_˙t
;

1824 
uöt32_t
 
	mmax_job_id
;

1825 
uöt32_t
 
	mmax_mem_≥r_˝u
;

1826 
uöt32_t
 
	mmax_°ï_˙t
;

1827 
uöt16_t
 
	mmax_èsks_≥r_node
;

1828 
uöt16_t
 
	mmö_job_age
;

1830 *
	mmpi_deÁu…
;

1831 *
	mmpi_∑øms
;

1832 
uöt16_t
 
	mmsg_timeout
;

1833 *
	mmunge_sockë
;

1834 
uöt32_t
 
	m√xt_job_id
;

1835 *
	mnode_¥efix
;

1837 
uöt16_t
 
	movî_time_limô
;

1839 *
	m∂ugödú
;

1840 *
	m∂ug°ack
;

1842 
uöt16_t
 
	m¥ìm±_mode
;

1843 *
	m¥ìm±_ty≥
;

1844 
uöt32_t
 
	m¥i‹ôy_deˇy_hl
;

1846 
uöt32_t
 
	m¥i‹ôy_ˇlc_≥riod
;

1848 
uöt16_t
 
	m¥i‹ôy_Áv‹_smÆl
;

1849 
uöt32_t
 
	m¥i‹ôy_max_age
;

1851 
uöt16_t
 
	m¥i‹ôy_ª£t_≥riod
;

1853 *
	m¥i‹ôy_ty≥
;

1854 
uöt32_t
 
	m¥i‹ôy_weight_age
;

1855 
uöt32_t
 
	m¥i‹ôy_weight_fs
;

1856 
uöt32_t
 
	m¥i‹ôy_weight_js
;

1857 
uöt32_t
 
	m¥i‹ôy_weight_∑π
;

1858 
uöt32_t
 
	m¥i‹ôy_weight_qos
;

1859 
uöt16_t
 
	m¥iv©e_d©a
;

1861 *
	m¥o˘øck_ty≥
;

1862 *
	m¥ﬁog
;

1863 *
	m¥ﬁog_¶urm˘ld
;

1864 
uöt16_t
 
	m¥›ag©e_¥io_¥o˚ss
;

1866 *
	m¥›ag©e_æimôs
;

1867 *
	m¥›ag©e_æimôs_ex˚±
;

1868 *
	mªsume_¥ogøm
;

1869 
uöt16_t
 
	mªsume_øã
;

1870 
uöt16_t
 
	mªsume_timeout
;

1872 
uöt16_t
 
	mªsv_ovî_run
;

1874 
uöt16_t
 
	mªt2£rvi˚
;

1876 *
	mßŒoc_deÁu…_comm™d
;

1877 *
	msched_logfûe
;

1878 
uöt16_t
 
	msched_log_Àvñ
;

1879 *
	msched_∑øms
;

1881 
uöt16_t
 
	msched_time_¶i˚
;

1882 *
	mschedty≥
;

1883 
uöt16_t
 
	mschedp‹t
;

1884 
uöt16_t
 
	mschedroŸÊå
;

1886 *
	m£À˘_ty≥
;

1887 *
	m£À˘_c⁄f_key_∑ús
;

1889 
uöt16_t
 
	m£À˘_ty≥_∑øm
;

1891 *
	m¶urm_c⁄f
;

1892 
uöt32_t
 
	m¶urm_u£r_id
;

1893 *
	m¶urm_u£r_«me
;

1894 
uöt32_t
 
	m¶urmd_u£r_id
;

1895 *
	m¶urmd_u£r_«me
;

1896 
uöt16_t
 
	m¶urm˘ld_debug
;

1897 *
	m¶urm˘ld_logfûe
;

1898 *
	m¶urm˘ld_pidfûe
;

1899 
uöt32_t
 
	m¶urm˘ld_p‹t
;

1900 
uöt16_t
 
	m¶urm˘ld_p‹t_cou¡
;

1901 
uöt16_t
 
	m¶urm˘ld_timeout
;

1903 
uöt16_t
 
	m¶urmd_debug
;

1904 *
	m¶urmd_logfûe
;

1905 *
	m¶urmd_pidfûe
;

1906 
uöt32_t
 
	m¶urmd_p‹t
;

1907 *
	m¶urmd_•oﬁdú
;

1908 
uöt16_t
 
	m¶urmd_timeout
;

1910 *
	m§un_ïûog
;

1911 *
	m§un_¥ﬁog
;

1912 *
	m°©e_ßve_loˇti⁄
;

1914 *
	msu•íd_exc_nodes
;

1915 *
	msu•íd_exc_∑πs
;

1916 *
	msu•íd_¥ogøm
;

1917 
uöt16_t
 
	msu•íd_øã
;

1918 
uöt32_t
 
	msu•íd_time
;

1919 
uöt16_t
 
	msu•íd_timeout
;

1921 *
	mswôch_ty≥
;

1922 *
	mèsk_ïûog
;

1923 *
	mèsk_∂ugö
;

1924 
uöt16_t
 
	mèsk_∂ugö_∑øm
;

1925 *
	mèsk_¥ﬁog
;

1926 *
	mtmp_fs
;

1927 *
	mt›ﬁogy_∂ugö
;

1928 
uöt16_t
 
	måack_wckey
;

1929 
uöt16_t
 
	måì_width
;

1930 *
	munkûœbÀ_¥ogøm
;

1932 
uöt16_t
 
	munkûœbÀ_timeout
;

1935 
uöt16_t
 
	mu£_∑m
;

1936 *
	mvîsi⁄
;

1937 
uöt16_t
 
	mvsize_Á˘‹
;

1938 
uöt16_t
 
	mwaô_time
;

1939 
uöt16_t
 
	mz_16
;

1940 
uöt32_t
 
	mz_32
;

1941 *
	mz_ch¨
;

1942 } 
	t¶urm_˘l_c⁄f_t
;

1944 
	s¶urmd_°©us_msg
 {

1945 
time_t
 
	mboŸed
;

1946 
time_t
 
	mœ°_¶urm˘ld_msg
;

1947 
uöt16_t
 
	m¶urmd_debug
;

1948 
uöt16_t
 
	ma˘uÆ_˝us
;

1949 
uöt16_t
 
	ma˘uÆ_sockës
;

1950 
uöt16_t
 
	ma˘uÆ_c‹es
;

1951 
uöt16_t
 
	ma˘uÆ_thªads
;

1952 
uöt32_t
 
	ma˘uÆ_ªÆ_mem
;

1953 
uöt32_t
 
	ma˘uÆ_tmp_disk
;

1954 
uöt32_t
 
	mpid
;

1955 *
	mho°«me
;

1956 *
	m¶urmd_logfûe
;

1957 *
	m°ï_li°
;

1958 *
	mvîsi⁄
;

1959 } 
	t¶urmd_°©us_t
;

1961 
	ssubmô_ª•⁄£_msg
 {

1962 
uöt32_t
 
	mjob_id
;

1963 
uöt32_t
 
	m°ï_id
;

1964 
uöt32_t
 
	mîr‹_code
;

1965 } 
	tsubmô_ª•⁄£_msg_t
;

1967 
	s¶urm_upd©e_node_msg
 {

1968 *
	m„©uªs
;

1969 *
	mgªs
;

1970 *
	mnode_«mes
;

1971 
uöt16_t
 
	mnode_°©e
;

1972 *
	mªas⁄
;

1973 
uöt32_t
 
	mªas⁄_uid
;

1975 
uöt32_t
 
	mweight
;

1976 } 
	tupd©e_node_msg_t
;

1978 
	s¶urm_upd©e_‰⁄t_íd_msg
 {

1979 *
	m«me
;

1980 
uöt16_t
 
	mnode_°©e
;

1981 *
	mªas⁄
;

1982 
uöt32_t
 
	mªas⁄_uid
;

1984 } 
	tupd©e_‰⁄t_íd_msg_t
;

1986 
∑πôi⁄_öfo
 
	tupd©e_∑π_msg_t
;

1988 
	sjob_sbˇ°_¸ed_msg
 {

1989 
uöt32_t
 
	mjob_id
;

1990 
¶urm_addr_t
 *
	mnode_addr
;

1991 
uöt32_t
 
	mnode_˙t
;

1992 *
	mnode_li°
;

1993 
sbˇ°_¸ed_t
 *
	msbˇ°_¸ed
;

1994 } 
	tjob_sbˇ°_¸ed_msg_t
;

1997 
¶urm_°ï_˘x_°ru˘
 
	t¶urm_°ï_˘x_t
;

1999 
	#TRIGGER_RES_TYPE_JOB
 0x0001

	)

2000 
	#TRIGGER_RES_TYPE_NODE
 0x0002

	)

2001 
	#TRIGGER_RES_TYPE_SLURMCTLD
 0x0003

	)

2002 
	#TRIGGER_RES_TYPE_SLURMDBD
 0x0004

	)

2003 
	#TRIGGER_RES_TYPE_DATABASE
 0x0005

	)

2004 
	#TRIGGER_RES_TYPE_FRONT_END
 0x0006

	)

2005 
	#TRIGGER_TYPE_UP
 0x00000001

	)

2006 
	#TRIGGER_TYPE_DOWN
 0x00000002

	)

2007 
	#TRIGGER_TYPE_FAIL
 0x00000004

	)

2008 
	#TRIGGER_TYPE_TIME
 0x00000008

	)

2009 
	#TRIGGER_TYPE_FINI
 0x00000010

	)

2010 
	#TRIGGER_TYPE_RECONFIG
 0x00000020

	)

2011 
	#TRIGGER_TYPE_BLOCK_ERR
 0x00000040

	)

2012 
	#TRIGGER_TYPE_IDLE
 0x00000080

	)

2013 
	#TRIGGER_TYPE_DRAINED
 0x00000100

	)

2014 
	#TRIGGER_TYPE_PRI_CTLD_FAIL
 0x00000200

	)

2015 
	#TRIGGER_TYPE_PRI_CTLD_RES_OP
 0x00000400

	)

2016 
	#TRIGGER_TYPE_PRI_CTLD_RES_CTRL
 0x00000800

	)

2017 
	#TRIGGER_TYPE_PRI_CTLD_ACCT_FULL
 0x00001000

	)

2018 
	#TRIGGER_TYPE_BU_CTLD_FAIL
 0x00002000

	)

2019 
	#TRIGGER_TYPE_BU_CTLD_RES_OP
 0x00004000

	)

2020 
	#TRIGGER_TYPE_BU_CTLD_AS_CTRL
 0x00008000

	)

2021 
	#TRIGGER_TYPE_PRI_DBD_FAIL
 0x00010000

	)

2022 
	#TRIGGER_TYPE_PRI_DBD_RES_OP
 0x00020000

	)

2023 
	#TRIGGER_TYPE_PRI_DB_FAIL
 0x00040000

	)

2024 
	#TRIGGER_TYPE_PRI_DB_RES_OP
 0x00080000

	)

2027 
	såiggî_öfo
 {

2028 
uöt32_t
 
	måig_id
;

2029 
uöt16_t
 
	mªs_ty≥
;

2030 * 
	mªs_id
;

2031 
uöt32_t
 
	måig_ty≥
;

2032 
uöt16_t
 
	moff£t
;

2033 
uöt32_t
 
	mu£r_id
;

2034 * 
	m¥ogøm
;

2035 } 
	tåiggî_öfo_t
;

2037 
	såiggî_öfo_msg
 {

2038 
uöt32_t
 
	mªc‹d_cou¡
;

2039 
åiggî_öfo_t
 *
	måiggî_¨øy
;

2040 } 
	tåiggî_öfo_msg_t
;

2051 
¶urm_öô_job_desc_msg
 
PARAMS
((
job_desc_msg_t
 * 
job_desc_msg
));

2064 
¶urm_Æloˇã_ªsour˚s
 
PARAMS
(

2065 (
job_desc_msg_t
 * 
job_desc_msg
 ,

2066 
ªsour˚_Æloˇti⁄_ª•⁄£_msg_t
 ** 
job_Æloc_ª•_msg
));

2086 
ªsour˚_Æloˇti⁄_ª•⁄£_msg_t
 *

2087 
¶urm_Æloˇã_ªsour˚s_blockög
 
PARAMS
(

2088 (c⁄° 
job_desc_msg_t
 *
u£r_ªq
, 
time_t
 
timeout
,

2089 (*
≥ndög_ˇŒback
)(
uöt32_t
 
job_id
)));

2097 
¶urm_‰ì_ªsour˚_Æloˇti⁄_ª•⁄£_msg
 
	`PARAMS
(

2098 (
ªsour˚_Æloˇti⁄_ª•⁄£_msg_t
 * 
msg
));

2106 
¶urm_‰ì_job_Æloc_öfo_ª•⁄£_msg
 
	`PARAMS
(

2107 (
job_Æloc_öfo_ª•⁄£_msg_t
 * 
msg
));

2116 
¶urm_Æloˇti⁄_lookup
 
	`PARAMS
(

2117 (
uöt32_t
 
job_id
, 
job_Æloc_öfo_ª•⁄£_msg_t
 **
öfo
));

2127 
¶urm_Æloˇti⁄_lookup_lôe
 
	`PARAMS
(

2128 (
uöt32_t
 
job_id
, 
ªsour˚_Æloˇti⁄_ª•⁄£_msg_t
 **
öfo
));

2145 *
¶urm_ªad_ho°fûe
 
	`PARAMS
((*
fûíame
, 
n
));

2155 
Æloˇti⁄_msg_thªad_t
 *
¶urm_Æloˇti⁄_msg_thr_¸óã
 
	`PARAMS
(

2156 (
uöt16_t
 *
p‹t
, c⁄° 
¶urm_Æloˇti⁄_ˇŒbacks_t
 *
ˇŒbacks
));

2165 
¶urm_Æloˇti⁄_msg_thr_de°roy
 
	`PARAMS
(

2166 (
Æloˇti⁄_msg_thªad_t
 * 
msg_thr
));

2174 
¶urm_submô_b©ch_job
 
	`PARAMS
(

2175 (
job_desc_msg_t
 * 
job_desc_msg
,

2176 
submô_ª•⁄£_msg_t
 ** 
¶urm_Æloc_msg
));

2184 
¶urm_‰ì_submô_ª•⁄£_ª•⁄£_msg
 
	`PARAMS
(

2185 (
submô_ª•⁄£_msg_t
 *
msg
));

2193 
¶urm_job_wûl_run
 
	`PARAMS
((
job_desc_msg_t
 * 
job_desc_msg
));

2203 
¶urm_sbˇ°_lookup
 
	`PARAMS
((
uöt32_t
 
jobid
,

2204 
job_sbˇ°_¸ed_msg_t
 **
öfo
));

2206 
¶urm_‰ì_sbˇ°_¸ed_msg
 
	`PARAMS
((
job_sbˇ°_¸ed_msg_t
 * 
msg
));

2219 
¶urm_kûl_job
 
	`PARAMS
((
uöt32_t
 
job_id
, 
uöt16_t
 
sig«l
,

2220 
uöt16_t
 
b©ch_Êag
));

2229 
¶urm_kûl_job_°ï
 
	`PARAMS
((
uöt32_t
 
job_id
, uöt32_à
°ï_id
,

2230 
uöt16_t
 
sig«l
));

2238 
¶urm_sig«l_job
 
	`PARAMS
((
uöt32_t
 
job_id
, 
uöt16_t
 
sig«l
));

2248 
¶urm_sig«l_job_°ï
 
	`PARAMS
((
uöt32_t
 
job_id
, uöt32_à
°ï_id
,

2249 
uöt16_t
 
sig«l
));

2262 
¶urm_com∂ëe_job
 
	`PARAMS
((
uöt32_t
 
job_id
,

2263 
uöt32_t
 
job_ªtu∫_code
));

2272 
¶urm_ãrmö©e_job
 
	`PARAMS
((
uöt32_t
 
job_id
));

2285 
¶urm_ãrmö©e_job_°ï
 
	`PARAMS
((
uöt32_t
 
job_id
, uöt32_à
°ï_id
));

2298 
¶urm_°ï_˘x_∑øms_t_öô
 
	`PARAMS
((
¶urm_°ï_˘x_∑øms_t
 *
±r
));

2306 
¶urm_°ï_˘x_t
 *
¶urm_°ï_˘x_¸óã
 
	`PARAMS
(

2307 (c⁄° 
¶urm_°ï_˘x_∑øms_t
 *
°ï_∑øms
));

2317 
¶urm_°ï_˘x_t
 *

2318 
¶urm_°ï_˘x_¸óã_no_Æloc
 
	`PARAMS
(

2319 (c⁄° 
¶urm_°ï_˘x_∑øms_t
 *
°ï_∑øms
, 
uöt32_t
 
°ï_id
));

2326 
¶urm_°ï_˘x_gë
 
	`PARAMS
((
¶urm_°ï_˘x_t
 *
˘x
,

2327 
˘x_key
, ...));

2336 
¶urm_joböfo_˘x_gë
 
	`PARAMS
((
swôch_joböfo_t
 *
joböfo
,

2337 
d©a_ty≥
, *
d©a
));

2351 
¶urm_°ï_˘x_d´m⁄_≥r_node_hack
 
	`PARAMS
((
¶urm_°ï_˘x_t
 *
˘x
));

2358 
¶urm_°ï_˘x_de°roy
 
	`PARAMS
((
¶urm_°ï_˘x_t
 *
˘x
));

2367 
¶urm_°ï_œunch_∑øms_t_öô


2368 
	`PARAMS
((
¶urm_°ï_œunch_∑øms_t
 *
±r
));

2377 
¶urm_°ï_œunch
 
	`PARAMS
(

2378 (
¶urm_°ï_˘x_t
 *
˘x
,

2379 c⁄° 
¶urm_°ï_œunch_∑øms_t
 *
∑øms
,

2380 c⁄° 
¶urm_°ï_œunch_ˇŒbacks_t
 *
ˇŒbacks
));

2385 
¶urm_°ï_œunch_waô_°¨t
 
	`PARAMS
((
¶urm_°ï_˘x_t
 *
˘x
));

2390 
¶urm_°ï_œunch_waô_föish
 
	`PARAMS
((
¶urm_°ï_˘x_t
 *
˘x
));

2397 
¶urm_°ï_œunch_ab‹t
 
	`PARAMS
((
¶urm_°ï_˘x_t
 *
˘x
));

2402 
¶urm_°ï_œunch_fwd_sig«l
 
	`PARAMS
((
¶urm_°ï_˘x_t
 *
˘x
,

2403 
signo
));

2408 
¶urm_°ï_œunch_fwd_wake
 
	`PARAMS
((
¶urm_°ï_˘x_t
 *
˘x
));

2420 
¶urm_≠i_vîsi⁄
 
	`PARAMS
(());

2431 
¶urm_lﬂd_˘l_c⁄f
 
	`PARAMS
(

2432 (
time_t
 
upd©e_time
,

2433 
¶urm_˘l_c⁄f_t
 **
¶urm_˘l_c⁄f_±r
));

2440 
¶urm_‰ì_˘l_c⁄f
 
	`PARAMS
((
¶urm_˘l_c⁄f_t
* 
¶urm_˘l_c⁄f_±r
));

2448 
¶urm_¥öt_˘l_c⁄f
 
	`PARAMS
(

2449 (
FILE
 * 
out
, 
¶urm_˘l_c⁄f_t
* 
¶urm_˘l_c⁄f_±r
));

2457 *
¶urm_˘l_c⁄f_2_key_∑ús
 
	`PARAMS
(

2458 (
¶urm_˘l_c⁄f_t
* 
¶urm_˘l_c⁄f_±r
));

2467 
¶urm_lﬂd_¶urmd_°©us
 
	`PARAMS
(

2468 (
¶urmd_°©us_t
 **
¶urmd_°©us_±r
));

2475 
¶urm_‰ì_¶urmd_°©us
 
	`PARAMS
(

2476 (
¶urmd_°©us_t
* 
¶urmd_°©us_±r
));

2484 
¶urm_¥öt_¶urmd_°©us
 
	`PARAMS
(

2485 (
FILE
* 
out
, 
¶urmd_°©us_t
 * 
¶urmd_°©us_±r
));

2494 
¶urm_¥öt_key_∑ús
 
	`PARAMS
(

2495 (
FILE
* 
out
, * 
key_∑ús
, *
tôÀ
));

2502 
¶urm_öô_upd©e_°ï_msg
 
	`PARAMS
(

2503 (
°ï_upd©e_ªque°_msg_t
 * 
°ï_msg
));

2508 
¶urm_upd©e_°ï
 
	`PARAMS
((
°ï_upd©e_ªque°_msg_t
 * 
°ï_msg
));

2522 
¶urm_job_˝us_Æloˇãd_⁄_node_id
 
	`PARAMS
(

2523 (
job_ªsour˚s_t
 *
job_ª§cs_±r
, 
node_id
));

2533 
¶urm_job_˝us_Æloˇãd_⁄_node
 
	`PARAMS
(

2534 (
job_ªsour˚s_t
 *
job_ª§cs_±r
, c⁄° *
node_«me
));

2545 
¶urm_‰ì_job_öfo_msg
 
	`PARAMS
((
job_öfo_msg_t
 * 
job_buf„r_±r
));

2553 
¶urm_gë_íd_time
 
	`PARAMS
((
uöt32_t
 
jobid
, 
time_t
 *
íd_time_±r
));

2560 
¶urm_gë_ªm_time
 
	`PARAMS
((
uöt32_t
 
jobid
));

2567 
	`¶urm_job_node_ªady
(
uöt32_t
 
job_id
);

2577 
¶urm_lﬂd_job
 
	`PARAMS
((
job_öfo_msg_t
 **
ª•
, 
uöt32_t
 
job_id
,

2578 
uöt16_t
 
show_Êags
));

2589 
¶urm_lﬂd_jobs
 
	`PARAMS
(

2590 (
time_t
 
upd©e_time
, 
job_öfo_msg_t
 **
job_öfo_msg_µå
,

2591 
uöt16_t
 
show_Êags
));

2600 
¶urm_nŸify_job
 
	`PARAMS
((
uöt32_t
 
job_id
, *
mesßge
));

2609 
¶urm_pid2jobid
 
	`PARAMS
((
pid_t
 
job_pid
, 
uöt32_t
 * 
job_id_±r
));

2618 
¶urm_¥öt_job_öfo
 
	`PARAMS
((
FILE
*, 
job_öfo_t
 * 
job_±r
,

2619 
⁄e_löî
));

2628 
¶urm_¥öt_job_öfo_msg
 
	`PARAMS
(

2629 (
FILE
 * 
out
, 
job_öfo_msg_t
 * 
job_öfo_msg_±r
, 
⁄e_löî
));

2639 *
¶urm_•röt_job_öfo
 
	`PARAMS
((
job_öfo_t
 * 
job_±r
,

2640 
⁄e_löî
));

2648 
¶urm_upd©e_job
 
	`PARAMS
((
job_desc_msg_t
 * 
job_msg
));

2668 
¶urm_gë_job_°ïs
 
	`PARAMS
(

2669 (
time_t
 
upd©e_time
, 
uöt32_t
 
job_id
, uöt32_à
°ï_id
,

2670 
job_°ï_öfo_ª•⁄£_msg_t
 **
°ï_ª•⁄£_µå
,

2671 
uöt16_t
 
show_Êags
));

2679 
¶urm_‰ì_job_°ï_öfo_ª•⁄£_msg
 
	`PARAMS
(

2680 (
job_°ï_öfo_ª•⁄£_msg_t
 * 
msg
));

2689 
¶urm_¥öt_job_°ï_öfo_msg
 
	`PARAMS
(

2690 (
FILE
 * 
out
, 
job_°ï_öfo_ª•⁄£_msg_t
 * 
job_°ï_öfo_msg_±r
,

2691 
⁄e_löî
));

2700 
¶urm_¥öt_job_°ï_öfo
 
	`PARAMS
(

2701 (
FILE
 * 
out
, 
job_°ï_öfo_t
 * 
°ï_±r
, 
⁄e_löî
));

2712 
¶urm_°ï_œyout_t
 *
¶urm_job_°ï_œyout_gë
 
	`PARAMS
(

2713 (
uöt32_t
 
job_id
, uöt32_à
°ï_id
));

2723 *
¶urm_•röt_job_°ï_öfo
 
	`PARAMS
((
job_°ï_öfo_t
 * 
°ï_±r
,

2724 
⁄e_löî
));

2735 
¶urm_job_°ï_°©
 
	`PARAMS
((
uöt32_t
 
job_id
, uöt32_à
°ï_id
,

2736 *
node_li°
,

2737 
job_°ï_°©_ª•⁄£_msg_t
 **
ª•
));

2748 
¶urm_job_°ï_gë_pids
 
	`PARAMS
(

2749 (
uöt32_t
 
job_id
, uöt32_à
°ï_id
,

2750 *
node_li°
,

2751 
job_°ï_pids_ª•⁄£_msg_t
 **
ª•
));

2753 
¶urm_job_°ï_œyout_‰ì
 
	`PARAMS
((
¶urm_°ï_œyout_t
 *
œyout
));

2754 
¶urm_job_°ï_pids_‰ì
 
	`PARAMS
((
job_°ï_pids_t
 *
obje˘
));

2755 
¶urm_job_°ï_pids_ª•⁄£_msg_‰ì
 
	`PARAMS
((*
obje˘
));

2756 
	`¶urm_job_°ï_°©_‰ì
(
job_°ï_°©_t
 *
obje˘
);

2757 
	`¶urm_job_°ï_°©_ª•⁄£_msg_‰ì
(*
obje˘
);

2772 
¶urm_lﬂd_node
 
	`PARAMS
(

2773 (
time_t
 
upd©e_time
, 
node_öfo_msg_t
 **
node_öfo_msg_µå
,

2774 
uöt16_t
 
show_Êags
));

2781 
¶urm_‰ì_node_öfo_msg
 
	`PARAMS
(

2782 (
node_öfo_msg_t
 * 
node_buf„r_±r
));

2791 
¶urm_¥öt_node_öfo_msg
 
	`PARAMS
(

2792 (
FILE
 * 
out
, 
node_öfo_msg_t
 * 
node_öfo_msg_±r
, 
⁄e_löî
));

2802 
¶urm_¥öt_node_èbÀ
 
	`PARAMS
(

2803 (
FILE
 * 
out
, 
node_öfo_t
 * 
node_±r
,

2804 
node_sˇlög
, 
⁄e_löî
));

2815 *
¶urm_•röt_node_èbÀ
 
	`PARAMS
((
node_öfo_t
 * 
node_±r
,

2816 
node_sˇlög
,

2817 
⁄e_löî
));

2823 
¶urm_öô_upd©e_node_msg
 
	`PARAMS
((
upd©e_node_msg_t
 * 
upd©e_node_msg
));

2831 
¶urm_upd©e_node
 
	`PARAMS
((
upd©e_node_msg_t
 * 
node_msg
));

2846 
¶urm_lﬂd_‰⁄t_íd
 
	`PARAMS
(

2847 (
time_t
 
upd©e_time
, 
‰⁄t_íd_öfo_msg_t
 **
ª•
));

2855 
¶urm_‰ì_‰⁄t_íd_öfo_msg
 
	`PARAMS
(

2856 (
‰⁄t_íd_öfo_msg_t
 * 
‰⁄t_íd_buf„r_±r
));

2865 
¶urm_¥öt_‰⁄t_íd_öfo_msg
 
	`PARAMS
(

2866 (
FILE
 * 
out
, 
‰⁄t_íd_öfo_msg_t
 * 
‰⁄t_íd_öfo_msg_±r
,

2867 
⁄e_löî
));

2875 
¶urm_¥öt_‰⁄t_íd_èbÀ
 
	`PARAMS
(

2876 (
FILE
 * 
out
, 
‰⁄t_íd_öfo_t
 * 
‰⁄t_íd_±r
, 
⁄e_löî
));

2886 *
¶urm_•röt_‰⁄t_íd_èbÀ
 
	`PARAMS
(

2887 (
‰⁄t_íd_öfo_t
 * 
‰⁄t_íd_±r
, 
⁄e_löî
));

2893 
¶urm_öô_upd©e_‰⁄t_íd_msg
 
	`PARAMS
(

2894 (
upd©e_‰⁄t_íd_msg_t
 * 
upd©e_‰⁄t_íd_msg
));

2902 
¶urm_upd©e_‰⁄t_íd
 
	`PARAMS
(

2903 (
upd©e_‰⁄t_íd_msg_t
 * 
‰⁄t_íd_msg
));

2916 
¶urm_lﬂd_t›o
 
	`PARAMS
(

2917 (
t›o_öfo_ª•⁄£_msg_t
 **
t›o_öfo_msg_µå
));

2925 
¶urm_‰ì_t›o_öfo_msg
 
	`PARAMS
((
t›o_öfo_ª•⁄£_msg_t
 *
msg
));

2935 
¶urm_¥öt_t›o_öfo_msg
 
	`PARAMS
(

2936 (
FILE
 * 
out
, 
t›o_öfo_ª•⁄£_msg_t
 *
t›o_öfo_msg_±r
,

2937 
⁄e_löî
));

2948 
¶urm_¥öt_t›o_ªc‹d
 
	`PARAMS
((
FILE
 * 
out
, 
t›o_öfo_t
 *
t›o_±r
,

2949 
⁄e_löî
));

2962 
¶urm_gë_£À˘_joböfo
 
	`PARAMS
(

2963 (
dy«mic_∂ugö_d©a_t
 *
joböfo
, 
£À˘_jobd©a_ty≥
 
d©a_ty≥
,

2964 *
d©a
));

2974 
¶urm_gë_£À˘_nodeöfo
 
	`PARAMS
(

2975 (
dy«mic_∂ugö_d©a_t
 *
nodeöfo
, 
£À˘_noded©a_ty≥
 
d©a_ty≥
,

2976 
node_°©es
 
°©e
, *
d©a
));

2987 
¶urm_öô_∑π_desc_msg
 
	`PARAMS
(

2988 (
upd©e_∑π_msg_t
 * 
upd©e_∑π_msg
));

3000 
¶urm_lﬂd_∑πôi⁄s
 
	`PARAMS
(

3001 (
time_t
 
upd©e_time
, 
∑πôi⁄_öfo_msg_t
 **
∑π_buf„r_±r
,

3002 
uöt16_t
 
show_Êags
));

3010 
¶urm_‰ì_∑πôi⁄_öfo_msg
 
	`PARAMS
(

3011 (
∑πôi⁄_öfo_msg_t
 * 
∑π_öfo_±r
));

3020 
¶urm_¥öt_∑πôi⁄_öfo_msg
 
	`PARAMS
(

3021 (
FILE
 * 
out
, 
∑πôi⁄_öfo_msg_t
 * 
∑π_öfo_±r
, 
⁄e_löî
));

3030 
¶urm_¥öt_∑πôi⁄_öfo
 
	`PARAMS
(

3031 (
FILE
 *
out
 , 
∑πôi⁄_öfo_t
 * 
∑π_±r
, 
⁄e_löî
));

3041 *
¶urm_•röt_∑πôi⁄_öfo
 
	`PARAMS
(

3042 (
∑πôi⁄_öfo_t
 * 
∑π_±r
, 
⁄e_löî
));

3049 
¶urm_¸óã_∑πôi⁄
 
	`PARAMS
((
upd©e_∑π_msg_t
 * 
∑π_msg
));

3057 
¶urm_upd©e_∑πôi⁄
 
	`PARAMS
((
upd©e_∑π_msg_t
 * 
∑π_msg
));

3065 
¶urm_dñëe_∑πôi⁄
 
	`PARAMS
((
dñëe_∑π_msg_t
 * 
∑π_msg
));

3076 
¶urm_öô_ªsv_desc_msg
 
	`PARAMS
(

3077 (
ªsv_desc_msg_t
 * 
upd©e_ªsv_msg
));

3084 * 
¶urm_¸óã_ª£rv©i⁄
 
	`PARAMS
(

3085 (
ªsv_desc_msg_t
 * 
ªsv_msg
));

3093 
¶urm_upd©e_ª£rv©i⁄
 
	`PARAMS
((
ªsv_desc_msg_t
 * 
ªsv_msg
));

3101 
¶urm_dñëe_ª£rv©i⁄
 
	`PARAMS
(

3102 (
ª£rv©i⁄_«me_msg_t
 * 
ªsv_msg
));

3113 
¶urm_lﬂd_ª£rv©i⁄s
 
	`PARAMS
((
time_t
 
upd©e_time
,

3114 
ª£rve_öfo_msg_t
 **
ª•
));

3123 
¶urm_¥öt_ª£rv©i⁄_öfo_msg
 
	`PARAMS
((
FILE
* 
out
,

3124 
ª£rve_öfo_msg_t
 *
ªsv_öfo_±r
,

3125 
⁄e_löî
));

3134 
¶urm_¥öt_ª£rv©i⁄_öfo
 
	`PARAMS
((
FILE
* 
out
,

3135 
ª£rve_öfo_t
 * 
ªsv_±r
,

3136 
⁄e_löî
));

3146 *
¶urm_•röt_ª£rv©i⁄_öfo
 
	`PARAMS
((
ª£rve_öfo_t
 * 
ªsv_±r
,

3147 
⁄e_löî
));

3155 
¶urm_‰ì_ª£rv©i⁄_öfo_msg
 
	`PARAMS
(

3156 (
ª£rve_öfo_msg_t
 * 
ªsv_öfo_±r
));

3167 
¶urm_pög
 
	`PARAMS
((
¥im¨y
));

3174 
¶urm_ªc⁄figuª
 
	`PARAMS
(());

3185 
¶urm_shutdown
 
	`PARAMS
((
uöt16_t
 
›ti⁄s
));

3193 
¶urm_èkeovî
 
	`PARAMS
(());

3201 
¶urm_£t_debugÊags
 
	`PARAMS
((
uöt32_t
 
debug_Êags_∂us
,

3202 
uöt32_t
 
debug_Êags_möus
));

3209 
¶urm_£t_debug_Àvñ
 
	`PARAMS
((
uöt32_t
 
debug_Àvñ
));

3216 
¶urm_£t_schedlog_Àvñ
 
	`PARAMS
((
uöt32_t
 
schedlog_Àvñ
));

3227 
¶urm_su•íd
 
	`PARAMS
((
uöt32_t
 
job_id
));

3234 
¶urm_ªsume
 
	`PARAMS
((
uöt32_t
 
job_id
));

3242 
¶urm_ªqueue
 
	`PARAMS
((
uöt32_t
 
job_id
));

3256 
¶urm_checkpoöt_abÀ
 
	`PARAMS
((
uöt32_t
 
job_id
, uöt32_à
°ï_id
,

3257 
time_t
 *
°¨t_time
));

3265 
¶urm_checkpoöt_dißbÀ
 
	`PARAMS
((
uöt32_t
 
job_id
,

3266 
uöt32_t
 
°ï_id
));

3275 
¶urm_checkpoöt_íabÀ
 
	`PARAMS
((
uöt32_t
 
job_id
,

3276 
uöt32_t
 
°ï_id
));

3287 
¶urm_checkpoöt_¸óã
 
	`PARAMS
((
uöt32_t
 
job_id
,

3288 
uöt32_t
 
°ï_id
,

3289 
uöt16_t
 
max_waô
,

3290 *
image_dú
));

3300 
¶urm_checkpoöt_ªqueue
 
	`PARAMS
((
uöt32_t
 
job_id
, 
uöt16_t
 
max_waô
,

3301 *
image_dú
));

3312 
¶urm_checkpoöt_vaˇã
 
	`PARAMS
((
uöt32_t
 
job_id
,

3313 
uöt32_t
 
°ï_id
,

3314 
uöt16_t
 
max_waô
,

3315 *
image_dú
));

3325 
¶urm_checkpoöt_ª°¨t
 
	`PARAMS
((
uöt32_t
 
job_id
,

3326 
uöt32_t
 
°ï_id
,

3327 
uöt16_t
 
°ick
,

3328 *
image_dú
));

3340 
¶urm_checkpoöt_com∂ëe
 
	`PARAMS
((
uöt32_t
 
job_id
,

3341 
uöt32_t
 
°ï_id
,

3342 
time_t
 
begö_time
,

3343 
uöt32_t
 
îr‹_code
,

3344 *
îr‹_msg
));

3357 
¶urm_checkpoöt_èsk_com∂ëe
 
	`PARAMS
((
uöt32_t
 
job_id
,

3358 
uöt32_t
 
°ï_id
,

3359 
uöt32_t
 
èsk_id
,

3360 
time_t
 
begö_time
,

3361 
uöt32_t
 
îr‹_code
,

3362 *
îr‹_msg
));

3377 
¶urm_checkpoöt_îr‹
 
	`PARAMS
((
uöt32_t
 
job_id
, uöt32_à
°ï_id
,

3378 
uöt32_t
 *
îr‹_code
,

3379 **
îr‹_msg
));

3391 
¶urm_checkpoöt_èsks
 
	`PARAMS
((
uöt32_t
 
job_id
, 
uöt16_t
 
°ï_id
,

3392 
time_t
 
begö_time
, *
image_dú
,

3393 
uöt16_t
 
max_waô
, *
nodñi°
));

3404 
¶urm_£t_åiggî
 
	`PARAMS
((
åiggî_öfo_t
 * 
åiggî_£t
));

3410 
¶urm_˛ór_åiggî
 
	`PARAMS
((
åiggî_öfo_t
 * 
åiggî_˛ór
));

3417 
¶urm_gë_åiggîs
 
	`PARAMS
((
åiggî_öfo_msg_t
 ** 
åiggî_gë
));

3423 
¶urm_puŒ_åiggî
 
	`PARAMS
((
åiggî_öfo_t
 * 
åiggî_puŒ
));

3429 
¶urm_‰ì_åiggî_msg
 
	`PARAMS
((
åiggî_öfo_msg_t
 * 
åiggî_‰ì
));

3431 
END_C_DECLS


	@/usr/include/slurm/spank.h

38 #i‚de‡
SPANK_H


39 
	#SPANK_H


	)

41 #unde‡
BEGIN_C_DECLS


42 #unde‡
END_C_DECLS


43 #ifde‡
__˝lu•lus


44 
	#BEGIN_C_DECLS
 "C" {

	)

45 
	#END_C_DECLS
 }

	)

47 
	#BEGIN_C_DECLS


	)

48 
	#END_C_DECLS


	)

53 
•™k_h™dÀ
 * 
	t•™k_t
;

57 (
	t•™k_f
Ë(
	t•™k_t
 
	t•™k
, 
	tac
, *
	t¨gv
[]);

110 
•™k_f
 
¶urm_•™k_öô
;

111 
•™k_f
 
¶urm_•™k_¶urmd_öô
;

112 
•™k_f
 
¶urm_•™k_job_¥ﬁog
;

113 
•™k_f
 
¶urm_•™k_öô_po°_›t
;

114 
•™k_f
 
¶urm_•™k_loˇl_u£r_öô
;

115 
•™k_f
 
¶urm_•™k_u£r_öô
;

116 
•™k_f
 
¶urm_•™k_èsk_öô_¥ivûeged
;

117 
•™k_f
 
¶urm_•™k_èsk_öô
;

118 
•™k_f
 
¶urm_•™k_èsk_po°_f‹k
;

119 
•™k_f
 
¶urm_•™k_èsk_exô
;

120 
•™k_f
 
¶urm_•™k_job_ïûog
;

121 
•™k_f
 
¶urm_•™k_¶urmd_exô
;

122 
•™k_f
 
¶urm_•™k_exô
;

142 
	e•™k_ôem
 {

143 
S_JOB_UID
,

144 
S_JOB_GID
,

145 
S_JOB_ID
,

146 
S_JOB_STEPID
,

147 
S_JOB_NNODES
,

148 
S_JOB_NODEID
,

149 
S_JOB_LOCAL_TASK_COUNT
,

150 
S_JOB_TOTAL_TASK_COUNT
,

151 
S_JOB_NCPUS
,

152 
S_JOB_ARGV
,

153 
S_JOB_ENV
,

154 
S_TASK_ID
,

155 
S_TASK_GLOBAL_ID
,

156 
S_TASK_EXIT_STATUS
,

157 
S_TASK_PID
,

158 
S_JOB_PID_TO_GLOBAL_ID
,

159 
S_JOB_PID_TO_LOCAL_ID
,

160 
S_JOB_LOCAL_TO_GLOBAL_ID
,

161 
S_JOB_GLOBAL_TO_LOCAL_ID
,

162 
S_JOB_SUPPLEMENTARY_GIDS
,

163 
S_SLURM_VERSION
,

164 
S_SLURM_VERSION_MAJOR
,

165 
S_SLURM_VERSION_MINOR
,

166 
S_SLURM_VERSION_MICRO
,

167 
S_STEP_CPUS_PER_TASK
,

169 
S_JOB_ALLOC_CORES
,

170 
S_JOB_ALLOC_MEM
,

171 
S_STEP_ALLOC_CORES
,

172 
S_STEP_ALLOC_MEM


175 
•™k_ôem
 
	t•™k_ôem_t
;

179 
	e•™k_îr
 {

180 
ESPANK_SUCCESS
 = 0,

181 
ESPANK_ERROR
 = 1,

182 
ESPANK_BAD_ARG
 = 2,

183 
ESPANK_NOT_TASK
 = 3,

184 
ESPANK_ENV_EXISTS
 = 4,

185 
ESPANK_ENV_NOEXIST
 = 5,

186 
ESPANK_NOSPACE
 = 6,

187 
ESPANK_NOT_REMOTE
 = 7,

188 
ESPANK_NOEXIST
 = 8,

189 
ESPANK_NOT_EXECD
 = 9,

190 
ESPANK_NOT_AVAIL
 = 10,

191 
ESPANK_NOT_LOCAL
 = 11,

194 
•™k_îr
 
	t•™k_îr_t
;

199 
	e•™k_c⁄ãxt
 {

200 
S_CTX_ERROR
,

201 
S_CTX_LOCAL
,

202 
S_CTX_REMOTE
,

203 
S_CTX_ALLOCATOR
,

204 
S_CTX_SLURMD
,

205 
S_CTX_JOB_SCRIPT


208 
	#HAVE_S_CTX_SLURMD
 1

	)

209 
	#HAVE_S_CTX_JOB_SCRIPT
 1

	)

211 
•™k_c⁄ãxt
 
	t•™k_c⁄ãxt_t
;

224 (*
	t•™k_›t_cb_f
Ë(
	tvÆ
, c⁄° *
	t›èrg
, 
	tªmŸe
);

226 
	s•™k_›ti⁄
 {

227 * 
«me
;

228 * 
¨göfo
;

229 * 
ußge
;

230 
has_¨g
;

231 
vÆ
;

232 
•™k_›t_cb_f
 
cb
;

241 
•™k_›ti⁄
 
•™k_›ti⁄s
 [];

246 
	#SPANK_OPTIONS_TABLE_END
 { 
NULL
, NULL, NULL, 0, 0, NULL 
	}

	)
}

251 
	#SPANK_OPTION_MAXLEN
 75

	)

256 
BEGIN_C_DECLS


261 c⁄° *
•™k_°ªº‹
 (
•™k_îr_t
 
îr
);

272 
•™k_symbﬁ_suµ‹ãd
 (c⁄° *
symbﬁ
);

282 
•™k_ªmŸe
 (
•™k_t
 
•™k
);

290 
•™k_c⁄ãxt_t
 
•™k_c⁄ãxt
 ();

306 
•™k_îr_t
 
•™k_›ti⁄_ªgi°î
 (
•™k_t
 
•™k
, 
•™k_›ti⁄
 *
›t
);

321 
•™k_îr_t
 
•™k_›ti⁄_gë›t
 (
•™k_t
 
•™k
, 
•™k_›ti⁄
 *
›t
,

322 **
›èrg
);

338 
•™k_îr_t
 
•™k_gë_ôem
 (
•™k_t
 
•™k
, 
•™k_ôem_t
 
ôem
, ...);

349 
•™k_îr_t
 
•™k_gëív
 (
•™k_t
 
•™k
, c⁄° *
v¨
, *
buf
, 
Àn
);

361 
•™k_îr_t
 
•™k_£ãnv
 (
•™k_t
 
•™k
, c⁄° *
v¨
, c⁄° *
vÆ
,

362 
ovîwrôe
);

372 
•™k_îr_t
 
•™k_un£ãnv
 (
•™k_t
 
•™k
, c⁄° *
v¨
);

386 
•™k_îr_t
 
•™k_job_c⁄åﬁ_£ãnv
 (
•™k_t
 
•
, c⁄° *
«me
,

387 c⁄° *
vÆue
, 
ovîwrôe
);

399 
•™k_îr_t
 
•™k_job_c⁄åﬁ_gëív
 (
•™k_t
 
•
, c⁄° *
«me
,

400 *
buf
, 
Àn
);

409 
•™k_îr_t
 
•™k_job_c⁄åﬁ_un£ãnv
 (
•™k_t
 
•
, c⁄° *
«me
);

414 
	$¶urm_öfo
 (c⁄° *
f‹m©
, ...)

415 
	`__©åibuã__
 ((
	`f‹m©
 (
¥ötf
, 1, 2)));

416 
	$¶urm_îr‹
 (c⁄° *
f‹m©
, ...)

417 
	`__©åibuã__
 ((
	`f‹m©
 (
¥ötf
, 1, 2)));

418 
	$¶urm_vîbo£
 (c⁄° *
f‹m©
, ...)

419 
	`__©åibuã__
 ((
	`f‹m©
 (
¥ötf
, 1, 2)));

420 
	$¶urm_debug
 (c⁄° *
f‹m©
, ...)

421 
	`__©åibuã__
 ((
	`f‹m©
 (
¥ötf
, 1, 2)));

422 
	$¶urm_debug2
 (c⁄° *
f‹m©
, ...)

423 
	`__©åibuã__
 ((
	`f‹m©
 (
¥ötf
, 1, 2)));

424 
	$¶urm_debug3
 (c⁄° *
f‹m©
, ...)

425 
	`__©åibuã__
 ((
	`f‹m©
 (
¥ötf
, 1, 2)));

427 
END_C_DECLS


433 
	#SPANK_PLUGIN
(
__«me
, 
__vî
) \

434 c⁄° 
∂ugö_«me
 [] = #__name; \

435 c⁄° 
∂ugö_ty≥
 [] = "spank"; \

436 c⁄° 
∂ugö_vîsi⁄
 = 
__vî
;

	)

	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


148 
	#P_tmpdú
 "/tmp"

	)

161 
	~<bôs/°dio_lim.h
>

165 
_IO_FILE
 *
°dö
;

166 
_IO_FILE
 *
°dout
;

167 
_IO_FILE
 *
°dîr
;

168 #ifde‡
__STDC__


170 
	#°dö
 
°dö


	)

171 
	#°dout
 
°dout


	)

172 
	#°dîr
 
°dîr


	)

175 
__BEGIN_NAMESPACE_STD


177 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

179 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

180 
__END_NAMESPACE_STD


182 #ifde‡
__USE_ATFILE


184 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

185 
__c⁄°
 *
__√w
Ë
__THROW
;

188 
__BEGIN_NAMESPACE_STD


193 #i‚de‡
__USE_FILE_OFFSET64


194 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

196 #ifde‡
__REDIRECT


197 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

199 
	#tmpfûe
 
tmpfûe64


	)

203 #ifde‡
__USE_LARGEFILE64


204 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

208 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

209 
__END_NAMESPACE_STD


211 #ifde‡
__USE_MISC


214 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

218 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


226 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

227 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

231 
__BEGIN_NAMESPACE_STD


236 
	`f˛o£
 (
FILE
 *
__°ªam
);

241 
	`fÊush
 (
FILE
 *
__°ªam
);

242 
__END_NAMESPACE_STD


244 #ifde‡
__USE_MISC


251 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

254 #ifde‡
__USE_GNU


261 
	`f˛o£Æl
 ();

265 
__BEGIN_NAMESPACE_STD


266 #i‚de‡
__USE_FILE_OFFSET64


271 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

272 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

277 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

278 
__c⁄°
 *
__ª°ri˘
 
__modes
,

279 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifde‡
__REDIRECT


282 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

283 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

284 
__wur
;

285 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

286 
__c⁄°
 *
__ª°ri˘
 
__modes
,

287 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

288 
__wur
;

290 
	#f›í
 
f›í64


	)

291 
	#‰e›í
 
‰e›í64


	)

294 
__END_NAMESPACE_STD


295 #ifde‡
__USE_LARGEFILE64


296 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

297 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

298 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
,

300 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

303 #ifdef 
__USE_POSIX


305 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

308 #ifdef 
__USE_GNU


311 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

312 
__c⁄°
 *
__ª°ri˘
 
__modes
,

313 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

316 #ifde‡
__USE_XOPEN2K8


318 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

319 
__THROW
 
__wur
;

324 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

328 
__BEGIN_NAMESPACE_STD


331 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

335 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

336 
__modes
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifdef 
__USE_BSD


342 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

343 
size_t
 
__size
Ë
__THROW
;

346 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

350 
__BEGIN_NAMESPACE_STD


355 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

356 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

361 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	$•rötf
 (*
__ª°ri˘
 
__s
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

370 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

371 
_G_va_li°
 
__¨g
);

376 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

378 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

379 
_G_va_li°
 
__¨g
Ë
__THROW
;

380 
__END_NAMESPACE_STD


382 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


383 
__BEGIN_NAMESPACE_C99


385 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

386 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

387 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

389 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

390 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

391 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

392 
__END_NAMESPACE_C99


395 #ifde‡
__USE_GNU


398 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

399 
_G_va_li°
 
__¨g
)

400 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

401 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

402 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

403 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

404 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

405 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

406 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

409 #ifde‡
__USE_XOPEN2K8


416 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

417 
_G_va_li°
 
__¨g
)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

419 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

424 
__BEGIN_NAMESPACE_STD


429 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

430 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

440 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

441 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

442 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

443 #ifde‡
__REDIRECT


447 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

448 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_fsˇnf
Ë
__wur
;

450 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_sˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

453 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

454 
__isoc99_ssˇnf
Ë
__THROW
;

456 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

457 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

458 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

459 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

460 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

461 
	#fsˇnf
 
__isoc99_fsˇnf


	)

462 
	#sˇnf
 
__isoc99_sˇnf


	)

463 
	#ssˇnf
 
__isoc99_ssˇnf


	)

467 
__END_NAMESPACE_STD


469 #ifdef 
__USE_ISOC99


470 
__BEGIN_NAMESPACE_C99


475 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

476 
_G_va_li°
 
__¨g
)

477 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

483 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

484 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

487 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

488 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

489 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

491 #i‡!
deföed
 
__USE_GNU
 \

492 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

493 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

494 #ifde‡
__REDIRECT


498 
	`__REDIRECT
 (
vfsˇnf
,

499 (
FILE
 *
__ª°ri˘
 
__s
,

500 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

501 
__isoc99_vfsˇnf
)

502 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

503 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

504 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

505 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

506 
	`__REDIRECT
 (
vssˇnf
,

507 (
__c⁄°
 *
__ª°ri˘
 
__s
,

508 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

509 
__isoc99_vssˇnf
)

510 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

512 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

513 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

518 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

519 
_G_va_li°
 
__¨g
Ë
__THROW
;

520 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

521 
	#vsˇnf
 
__isoc99_vsˇnf


	)

522 
	#vssˇnf
 
__isoc99_vssˇnf


	)

526 
__END_NAMESPACE_C99


530 
__BEGIN_NAMESPACE_STD


535 
	`fgëc
 (
FILE
 *
__°ªam
);

536 
	`gëc
 (
FILE
 *
__°ªam
);

542 
	`gëch¨
 ();

543 
__END_NAMESPACE_STD


547 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

549 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


554 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

555 
	`gëch¨_u∆ocked
 ();

558 #ifde‡
__USE_MISC


565 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

569 
__BEGIN_NAMESPACE_STD


577 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

578 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

584 
	`putch¨
 (
__c
);

585 
__END_NAMESPACE_STD


589 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

591 #ifde‡
__USE_MISC


598 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

601 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


606 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

607 
	`putch¨_u∆ocked
 (
__c
);

611 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

612 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

614 
	`gëw
 (
FILE
 *
__°ªam
);

617 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

621 
__BEGIN_NAMESPACE_STD


626 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

627 
__wur
;

634 *
	$gës
 (*
__s
Ë
__wur
;

635 
__END_NAMESPACE_STD


637 #ifde‡
__USE_GNU


644 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

645 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

649 #ifdef 
__USE_XOPEN2K8


660 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

661 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

662 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

663 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

664 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

665 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

673 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

674 
size_t
 *
__ª°ri˘
 
__n
,

675 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

679 
__BEGIN_NAMESPACE_STD


684 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

690 
	`puts
 (
__c⁄°
 *
__s
);

697 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

704 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

705 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

710 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

712 
__END_NAMESPACE_STD


714 #ifde‡
__USE_GNU


721 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

722 
FILE
 *
__ª°ri˘
 
__°ªam
);

725 #ifde‡
__USE_MISC


732 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

733 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

734 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
__BEGIN_NAMESPACE_STD


744 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

749 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

754 
	`ªwöd
 (
FILE
 *
__°ªam
);

755 
__END_NAMESPACE_STD


762 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


763 #i‚de‡
__USE_FILE_OFFSET64


768 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

773 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

775 #ifde‡
__REDIRECT


776 
	`__REDIRECT
 (
f£eko
,

777 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

778 
f£eko64
);

779 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

781 
	#f£eko
 
f£eko64


	)

782 
	#·ñlo
 
·ñlo64


	)

787 
__BEGIN_NAMESPACE_STD


788 #i‚de‡
__USE_FILE_OFFSET64


793 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

798 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

800 #ifde‡
__REDIRECT


801 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

802 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

803 
	`__REDIRECT
 (
f£ços
,

804 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

806 
	#fgëpos
 
fgëpos64


	)

807 
	#f£ços
 
f£ços64


	)

810 
__END_NAMESPACE_STD


812 #ifde‡
__USE_LARGEFILE64


813 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

814 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

815 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

816 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

819 
__BEGIN_NAMESPACE_STD


821 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

823 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

825 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

826 
__END_NAMESPACE_STD


828 #ifde‡
__USE_MISC


830 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

831 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

832 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

836 
__BEGIN_NAMESPACE_STD


841 
	`≥º‹
 (
__c⁄°
 *
__s
);

842 
__END_NAMESPACE_STD


848 
	~<bôs/sys_îæi°.h
>

851 #ifdef 
__USE_POSIX


853 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

856 #ifde‡
__USE_MISC


858 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

862 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

863 
deföed
 
__USE_MISC
)

868 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

874 
	`p˛o£
 (
FILE
 *
__°ªam
);

878 #ifdef 
__USE_POSIX


880 *
	$˘îmid
 (*
__s
Ë
__THROW
;

884 #ifde‡
__USE_XOPEN


886 *
	`cu£rid
 (*
__s
);

890 #ifdef 
__USE_GNU


891 
ob°ack
;

894 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

895 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

896 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

897 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

898 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

899 
_G_va_li°
 
__¨gs
)

900 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

904 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


908 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

912 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

915 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

918 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


922 
	#__√ed_gë›t


	)

923 
	~<gë›t.h
>

928 #ifde‡
__USE_EXTERN_INLINES


929 
	~<bôs/°dio.h
>

931 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


932 
	~<bôs/°dio2.h
>

934 #ifde‡
__LDBL_COMPAT


935 
	~<bôs/°dio-ldbl.h
>

938 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/sys/mman.h

20 #i‚def 
_SYS_MMAN_H


21 
	#_SYS_MMAN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<bôs/ty≥s.h
>

25 
	#__√ed_size_t


	)

26 
	~<°ddef.h
>

28 #i‚de‡
__off_t_deföed


29 #i‚de‡
__USE_FILE_OFFSET64


30 
__off_t
 
	toff_t
;

32 
__off64_t
 
	toff_t
;

34 
	#__off_t_deföed


	)

37 #i‚de‡
__mode_t_deföed


38 
__mode_t
 
	tmode_t
;

39 
	#__mode_t_deföed


	)

42 
	~<bôs/mm™.h
>

45 
	#MAP_FAILED
 ((*Ë-1)

	)

47 
	g__BEGIN_DECLS


57 #i‚de‡
__USE_FILE_OFFSET64


58 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

59 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

61 #ifde‡
__REDIRECT_NTH


62 * 
	`__REDIRECT_NTH
 (
mm≠
,

63 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

64 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

65 
mm≠64
);

67 
	#mm≠
 
mm≠64


	)

70 #ifde‡
__USE_LARGEFILE64


71 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

72 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

77 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

82 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

90 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

92 #ifde‡
__USE_BSD


95 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

97 #ifde‡
__USE_XOPEN2K


99 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

104 
	$mlock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

107 
	$mu∆ock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

112 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

116 
	$mu∆ockÆl
 (Ë
__THROW
;

118 #ifde‡
__USE_MISC


124 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

125 
__THROW
;

128 #ifde‡
__USE_GNU


134 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

135 
__Êags
, ...Ë
__THROW
;

139 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

140 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

145 
	`shm_›í
 (
__c⁄°
 *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

148 
	`shm_u∆ök
 (
__c⁄°
 *
__«me
);

150 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 #i‚de‡
ARG_MAX


23 
	#__undef_ARG_MAX


	)

26 
	~<limôs.h
>

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #i‚de‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


38 
	#NBBY
 
CHAR_BIT


	)

39 #i‚def 
NGROUPS


40 
	#NGROUPS
 
NGROUPS_MAX


	)

42 
	#MAXSYMLINKS
 20

	)

43 
	#CANBSIZ
 
MAX_CANON


	)

44 
	#MAXPATHLEN
 
PATH_MAX


	)

48 
	#NOFILE
 256

	)

49 
	#NCARGS
 131072

	)

52 
	~<sys/ty≥s.h
>

55 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

56 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

57 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

58 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

61 #i‚de‡
howm™y


62 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

64 #ifde‡
__GNUC__


65 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

66 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

67 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

69 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

71 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

74 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

75 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

79 
	#DEV_BSIZE
 512

	)

	@/usr/include/sys/socket.h

21 #i‚def 
_SYS_SOCKET_H


22 
	#_SYS_SOCKET_H
 1

	)

24 
	~<„©uªs.h
>

26 
	g__BEGIN_DECLS


28 
	~<sys/uio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

31 #ifde‡
__USE_GNU


33 
	~<bôs/sig£t.h
>

40 
	~<bôs/sockë.h
>

42 #ifde‡
__USE_BSD


45 
	sosockaddr


47 
	mß_Ámûy
;

48 
	mß_d©a
[14];

56 
	mSHUT_RD
 = 0,

57 
	#SHUT_RD
 
SHUT_RD


	)

58 
	mSHUT_WR
,

59 
	#SHUT_WR
 
SHUT_WR


	)

60 
	mSHUT_RDWR


61 
	#SHUT_RDWR
 
SHUT_RDWR


	)

70 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


71 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

72 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

76 
	#__SOCKADDR_ALLTYPES
 \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

88 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

89 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

91 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

92 uni⁄ { 
	m__SOCKADDR_ALLTYPES


93 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

94 #unde‡
__SOCKADDR_ONETYPE


95 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

96 uni⁄ { 
	m__SOCKADDR_ALLTYPES


97 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

98 #unde‡
__SOCKADDR_ONETYPE


105 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

111 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

112 
__fds
[2]Ë
__THROW
;

115 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

116 
__THROW
;

119 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

120 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

129 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

133 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

134 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

141 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

148 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

155 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

156 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

157 
sockÀn_t
 
__addr_Àn
);

166 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

167 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

168 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

176 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

177 
__Êags
);

184 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

190 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

191 *
__ª°ri˘
 
__›tvÆ
,

192 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

197 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

198 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

204 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

214 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

215 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

217 #ifde‡
__USE_GNU


222 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

223 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

232 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

235 #ifde‡
__USE_XOPEN2K


237 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

241 #ifde‡
__USE_MISC


245 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


251 
	~<bôs/sockë2.h
>

254 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

149 #ñi‡
deföed
 
__USE_XOPEN2K


150 
	#S_ISSOCK
(
mode
Ë0

	)

157 #ifdef 
__USE_POSIX199309


158 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

159 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

160 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

166 
	#S_ISUID
 
__S_ISUID


	)

167 
	#S_ISGID
 
__S_ISGID


	)

169 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


171 
	#S_ISVTX
 
__S_ISVTX


	)

174 
	#S_IRUSR
 
__S_IREAD


	)

175 
	#S_IWUSR
 
__S_IWRITE


	)

176 
	#S_IXUSR
 
__S_IEXEC


	)

178 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

180 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


181 
	#S_IREAD
 
S_IRUSR


	)

182 
	#S_IWRITE
 
S_IWUSR


	)

183 
	#S_IEXEC
 
S_IXUSR


	)

186 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

187 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

188 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

190 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

192 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

193 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

194 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

196 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

199 #ifdef 
__USE_BSD


201 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

202 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

203 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

205 
	#S_BLKSIZE
 512

	)

209 #i‚de‡
__USE_FILE_OFFSET64


211 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

212 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

216 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

218 #ifde‡
__REDIRECT_NTH


219 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

220 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

221 
	`__n⁄nuŒ
 ((1, 2));

222 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

223 
	`__n⁄nuŒ
 ((2));

225 
	#°©
 
°©64


	)

226 
	#f°©
 
f°©64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

231 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

232 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

235 #ifde‡
__USE_ATFILE


239 #i‚de‡
__USE_FILE_OFFSET64


240 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

241 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

242 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

244 #ifde‡
__REDIRECT_NTH


245 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

246 
°©
 *
__ª°ri˘
 
__buf
,

247 
__Êag
),

248 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

250 
	#f°©©
 
f°©©64


	)

254 #ifde‡
__USE_LARGEFILE64


255 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

256 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

257 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

261 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


262 #i‚de‡
__USE_FILE_OFFSET64


265 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

266 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

268 #ifde‡
__REDIRECT_NTH


269 
	`__REDIRECT_NTH
 (
l°©
,

270 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

271 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 
	#l°©
 
l°©64


	)

277 #ifde‡
__USE_LARGEFILE64


278 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

279 
°©64
 *
__ª°ri˘
 
__buf
)

280 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_BSD


293 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


299 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

302 #ifde‡
__USE_ATFILE


305 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

306 
__Êag
)

307 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

314 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

316 #ifdef 
__USE_GNU


319 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

323 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

326 #ifde‡
__USE_ATFILE


330 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

331 
__THROW
 
	`__n⁄nuŒ
 ((2));

337 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


338 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1));

341 #ifde‡
__USE_ATFILE


345 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

346 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

352 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_ATFILE


359 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

360 
__THROW
 
	`__n⁄nuŒ
 ((2));

363 #ifde‡
__USE_ATFILE


366 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

367 
__c⁄°
 
time•ec
 
__times
[2],

368 
__Êags
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2));

372 #ifde‡
__USE_XOPEN2K8


374 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

392 #i‚de‡
_STAT_VER


393 
	#_STAT_VER
 0

	)

395 #i‚de‡
_MKNOD_VER


396 
	#_MKNOD_VER
 0

	)

400 #i‚de‡
__USE_FILE_OFFSET64


401 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

402 
__THROW
 
	`__n⁄nuŒ
 ((3));

403 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

407 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

408 
°©
 *
__°©_buf
, 
__Êag
)

409 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

411 #ifde‡
__REDIRECT_NTH


412 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

413 
°©
 *
__°©_buf
), 
__fx°©64
)

414 
	`__n⁄nuŒ
 ((3));

415 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__x°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

419 
°©
 *
__°©_buf
), 
__lx°©64
)

420 
	`__n⁄nuŒ
 ((2, 3));

421 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

422 
__c⁄°
 *
__fûíame
,

423 
°©
 *
__°©_buf
, 
__Êag
),

424 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

427 
	#__fx°©
 
__fx°©64


	)

428 
	#__x°©
 
__x°©64


	)

429 
	#__lx°©
 
__lx°©64


	)

433 #ifde‡
__USE_LARGEFILE64


434 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

435 
__THROW
 
	`__n⁄nuŒ
 ((3));

436 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

441 
°©64
 *
__°©_buf
, 
__Êag
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

444 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

445 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

447 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

448 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

449 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

451 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


454 
__exã∫_ölöe
 

455 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

457  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

458 
	}
}

460 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
__exã∫_ölöe
 

462 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

464  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

465 
	}
}

468 
__exã∫_ölöe
 

469 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

471  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

472 
	}
}

474 #ifde‡
__USE_ATFILE


475 
__exã∫_ölöe
 

476 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

477 
__Êag
))

479  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

480 
	}
}

483 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


484 
__exã∫_ölöe
 

485 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

487  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

488 
	}
}

491 #ifde‡
__USE_ATFILE


492 
__exã∫_ölöe
 

493 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

494 
__dev_t
 
__dev
))

496  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

497 
	}
}

500 #i‡
deföed
 
__USE_LARGEFILE64
 \

501 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

502 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

503 
__exã∫_ölöe
 

504 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

506  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

507 
	}
}

509 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


510 
__exã∫_ölöe
 

511 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

513  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

514 
	}
}

517 
__exã∫_ölöe
 

518 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

520  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

521 
	}
}

523 #ifde‡
__USE_ATFILE


524 
__exã∫_ölöe
 

525 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

526 
__Êag
))

528  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

529 
	}
}

536 
	g__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/sysexits.h

32 #i‚def 
_SYSEXITS_H


33 
	#_SYSEXITS_H
 1

	)

92 
	#EX_OK
 0

	)

94 
	#EX__BASE
 64

	)

96 
	#EX_USAGE
 64

	)

97 
	#EX_DATAERR
 65

	)

98 
	#EX_NOINPUT
 66

	)

99 
	#EX_NOUSER
 67

	)

100 
	#EX_NOHOST
 68

	)

101 
	#EX_UNAVAILABLE
 69

	)

102 
	#EX_SOFTWARE
 70

	)

103 
	#EX_OSERR
 71

	)

104 
	#EX_OSFILE
 72

	)

105 
	#EX_CANTCREAT
 73

	)

106 
	#EX_IOERR
 74

	)

107 
	#EX_TEMPFAIL
 75

	)

108 
	#EX_PROTOCOL
 76

	)

109 
	#EX_NOPERM
 77

	)

110 
	#EX_CONFIG
 78

	)

112 
	#EX__MAX
 78

	)

	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

444 || 
deföed
 
__USE_BSD


449 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

450 
__THROW
;

457 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

466 
	`∑u£
 ();

470 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

471 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

473 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


475 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

480 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

481 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

485 #ifde‡
__USE_ATFILE


488 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

489 
__gid_t
 
__group
, 
__Êag
)

490 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

494 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

496 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


498 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

508 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

510 #ifdef 
__USE_GNU


514 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

517 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

518 || 
deföed
 
__USE_BSD


522 *
	$gëwd
 (*
__buf
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

528 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

531 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

533 #ifde‡
__USE_GNU


536 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

540 **
__ívú⁄
;

541 #ifde‡
__USE_GNU


542 **
ívú⁄
;

548 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

549 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

551 #ifde‡
__USE_XOPEN2K8


554 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

555 
__THROW
 
	`__n⁄nuŒ
 ((2));

560 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

570 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifde‡
__USE_GNU


587 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

588 *
__c⁄°
 
__ívp
[])

589 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

593 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


595 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

600 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

606 
	~<bôs/c⁄‚ame.h
>

609 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

610 
__THROW
 
	`__n⁄nuŒ
 ((1));

613 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

616 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

618 #ifdef 
__USE_POSIX2


620 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

625 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

628 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

632 #i‚de‡
__FAVOR_BSD


633 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

635 #ifde‡
__REDIRECT_NTH


636 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

638 
	#gëpgΩ
 
__gëpgid


	)

643 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

644 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


645 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

652 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

654 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


665 #i‚de‡
__FAVOR_BSD


669 
	$£çgΩ
 (Ë
__THROW
;

674 #ifde‡
__REDIRECT_NTH


675 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

677 
	#£çgΩ
 
£çgid


	)

686 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

688 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


690 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

694 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

697 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

700 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

708 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

710 #ifdef 
__USE_GNU


712 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

719 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

721 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


724 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


729 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

736 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

738 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


741 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

744 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


746 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

749 #ifde‡
__USE_GNU


752 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

753 
__THROW
;

757 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

758 
__THROW
;

762 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

763 
__THROW
;

767 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

768 
__THROW
;

775 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

777 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

778 || 
deföed
 
__USE_BSD


783 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

789 *
	$ây«me
 (
__fd
Ë
__THROW
;

793 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

794 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

798 
	$ißây
 (
__fd
Ë
__THROW
;

800 #i‡
deföed
 
__USE_BSD
 \

801 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

804 
	$ây¶Ÿ
 (Ë
__THROW
;

809 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 #ifde‡
__USE_ATFILE


815 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

816 
__c⁄°
 *
__to
, 
__Êags
)

817 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

820 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


822 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

823 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

828 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

829 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

830 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

833 #ifde‡
__USE_ATFILE


835 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

836 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

839 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

840 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

841 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

845 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

847 #ifde‡
__USE_ATFILE


849 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

850 
__THROW
 
	`__n⁄nuŒ
 ((2));

854 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

858 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

861 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

868 *
	`gëlogö
 ();

869 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


876 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

879 #ifdef 
__USE_BSD


881 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

885 #ifdef 
__USE_POSIX2


889 
	#__√ed_gë›t


	)

890 
	~<gë›t.h
>

894 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


898 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

902 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

905 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

906 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

910 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

916 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

918 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

925 
	$vh™gup
 (Ë
__THROW
;

928 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

936 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

937 
size_t
 
__off£t
, 
__sˇÀ
)

938 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

948 *
	$gëu£rshñl
 (Ë
__THROW
;

949 
	$ídu£rshñl
 (Ë
__THROW
;

950 
	$£tu£rshñl
 (Ë
__THROW
;

956 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

960 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

963 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

967 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

971 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


976 
	`fsync
 (
__fd
);

980 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


983 
	`gëho°id
 ();

986 
	$sync
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


992 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

997 
	$gëdèbÀsize
 (Ë
__THROW
;

1003 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1006 #i‚de‡
__USE_FILE_OFFSET64


1007 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1008 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1010 #ifde‡
__REDIRECT_NTH


1011 
	`__REDIRECT_NTH
 (
åunˇã
,

1012 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1013 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1015 
	#åunˇã
 
åunˇã64


	)

1018 #ifde‡
__USE_LARGEFILE64


1019 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1025 #i‚de‡
__USE_FILE_OFFSET64


1026 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1028 #ifde‡
__REDIRECT_NTH


1029 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1030 
·runˇã64
Ë
__wur
;

1032 
	#·runˇã
 
·runˇã64


	)

1035 #ifde‡
__USE_LARGEFILE64


1036 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1043 || 
deföed
 
__USE_MISC


1047 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1053 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1057 #ifde‡
__USE_MISC


1068 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1073 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1085 
	#F_ULOCK
 0

	)

1086 
	#F_LOCK
 1

	)

1087 
	#F_TLOCK
 2

	)

1088 
	#F_TEST
 3

	)

1090 #i‚de‡
__USE_FILE_OFFSET64


1091 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1093 #ifde‡
__REDIRECT


1094 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1095 
lockf64
Ë
__wur
;

1097 
	#lockf
 
lockf64


	)

1100 #ifde‡
__USE_LARGEFILE64


1101 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1106 #ifde‡
__USE_GNU


1111 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1112 (
__exãnsi⁄__
 \

1113 ({ 
__ªsu…
; \

1114 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1115 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1116 
__ªsu…
; 
	}
}))

	)

1119 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1122 
fd©async
 (
__fûdes
);

1128 #ifdef 
__USE_XOPEN


1130 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1131 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1135 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1142 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1143 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1151 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1156 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1157 
	~<bôs/uni°d.h
>

1160 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

21 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

26 
	~<bôs/w‹dsize.h
>

27 #ifde‡
__USE_GNU


28 
	~<bôs/uio.h
>

34 
	#O_ACCMODE
 0003

	)

35 
	#O_RDONLY
 00

	)

36 
	#O_WRONLY
 01

	)

37 
	#O_RDWR
 02

	)

38 
	#O_CREAT
 0100

	)

39 
	#O_EXCL
 0200

	)

40 
	#O_NOCTTY
 0400

	)

41 
	#O_TRUNC
 01000

	)

42 
	#O_APPEND
 02000

	)

43 
	#O_NONBLOCK
 04000

	)

44 
	#O_NDELAY
 
O_NONBLOCK


	)

45 
	#O_SYNC
 04010000

	)

46 
	#O_FSYNC
 
O_SYNC


	)

47 
	#O_ASYNC
 020000

	)

49 #ifde‡
__USE_XOPEN2K8


50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_CLOEXEC
 02000000

	)

54 #ifde‡
__USE_GNU


55 
	#O_DIRECT
 040000

	)

56 
	#O_NOATIME
 01000000

	)

62 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


63 
	#O_DSYNC
 010000

	)

64 
	#O_RSYNC
 
O_SYNC


	)

67 #ifde‡
__USE_LARGEFILE64


68 #i‡
__WORDSIZE
 == 64

69 
	#O_LARGEFILE
 0

	)

71 
	#O_LARGEFILE
 0100000

	)

76 
	#F_DUPFD
 0

	)

77 
	#F_GETFD
 1

	)

78 
	#F_SETFD
 2

	)

79 
	#F_GETFL
 3

	)

80 
	#F_SETFL
 4

	)

81 #i‡
__WORDSIZE
 == 64

82 
	#F_GETLK
 5

	)

83 
	#F_SETLK
 6

	)

84 
	#F_SETLKW
 7

	)

86 
	#F_GETLK64
 5

	)

87 
	#F_SETLK64
 6

	)

88 
	#F_SETLKW64
 7

	)

90 #i‚de‡
__USE_FILE_OFFSET64


91 
	#F_GETLK
 5

	)

92 
	#F_SETLK
 6

	)

93 
	#F_SETLKW
 7

	)

95 
	#F_GETLK
 
F_GETLK64


	)

96 
	#F_SETLK
 
F_SETLK64


	)

97 
	#F_SETLKW
 
F_SETLKW64


	)

99 
	#F_GETLK64
 12

	)

100 
	#F_SETLK64
 13

	)

101 
	#F_SETLKW64
 14

	)

104 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


105 
	#F_SETOWN
 8

	)

106 
	#F_GETOWN
 9

	)

109 #ifde‡
__USE_GNU


110 
	#F_SETSIG
 10

	)

111 
	#F_GETSIG
 11

	)

112 
	#F_SETOWN_EX
 15

	)

113 
	#F_GETOWN_EX
 16

	)

116 #ifde‡
__USE_GNU


117 
	#F_SETLEASE
 1024

	)

118 
	#F_GETLEASE
 1025

	)

119 
	#F_NOTIFY
 1026

	)

121 #ifde‡
__USE_XOPEN2K8


122 
	#F_DUPFD_CLOEXEC
 1030

	)

127 
	#FD_CLOEXEC
 1

	)

130 
	#F_RDLCK
 0

	)

131 
	#F_WRLCK
 1

	)

132 
	#F_UNLCK
 2

	)

135 
	#F_EXLCK
 4

	)

136 
	#F_SHLCK
 8

	)

138 #ifde‡
__USE_BSD


140 
	#LOCK_SH
 1

	)

141 
	#LOCK_EX
 2

	)

142 
	#LOCK_NB
 4

	)

144 
	#LOCK_UN
 8

	)

147 #ifde‡
__USE_GNU


148 
	#LOCK_MAND
 32

	)

149 
	#LOCK_READ
 64

	)

150 
	#LOCK_WRITE
 128

	)

151 
	#LOCK_RW
 192

	)

154 #ifde‡
__USE_GNU


156 
	#DN_ACCESS
 0x00000001

	)

157 
	#DN_MODIFY
 0x00000002

	)

158 
	#DN_CREATE
 0x00000004

	)

159 
	#DN_DELETE
 0x00000008

	)

160 
	#DN_RENAME
 0x00000010

	)

161 
	#DN_ATTRIB
 0x00000020

	)

162 
	#DN_MULTISHOT
 0x80000000

	)

165 
	sÊock


167 
	ml_ty≥
;

168 
	ml_whí˚
;

169 #i‚de‡
__USE_FILE_OFFSET64


170 
__off_t
 
	ml_°¨t
;

171 
__off_t
 
	ml_Àn
;

173 
__off64_t
 
	ml_°¨t
;

174 
__off64_t
 
	ml_Àn
;

176 
__pid_t
 
	ml_pid
;

179 #ifde‡
__USE_LARGEFILE64


180 
	sÊock64


182 
	ml_ty≥
;

183 
	ml_whí˚
;

184 
__off64_t
 
	ml_°¨t
;

185 
__off64_t
 
	ml_Àn
;

186 
__pid_t
 
	ml_pid
;

190 #ifde‡
__USE_GNU


192 
	e__pid_ty≥


194 
	mF_OWNER_TID
 = 0,

195 
	mF_OWNER_PID
,

196 
	mF_OWNER_PGRP
,

197 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


201 
	sf_ow√r_ex


203 
__pid_ty≥
 
	mty≥
;

204 
__pid_t
 
	mpid
;

210 #ifdef 
__USE_BSD


211 
	#FAPPEND
 
O_APPEND


	)

212 
	#FFSYNC
 
O_FSYNC


	)

213 
	#FASYNC
 
O_ASYNC


	)

214 
	#FNONBLOCK
 
O_NONBLOCK


	)

215 
	#FNDELAY
 
O_NDELAY


	)

219 #ifde‡
__USE_XOPEN2K


220 
	#POSIX_FADV_NORMAL
 0

	)

221 
	#POSIX_FADV_RANDOM
 1

	)

222 
	#POSIX_FADV_SEQUENTIAL
 2

	)

223 
	#POSIX_FADV_WILLNEED
 3

	)

224 
	#POSIX_FADV_DONTNEED
 4

	)

225 
	#POSIX_FADV_NOREUSE
 5

	)

229 #ifde‡
__USE_GNU


231 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

234 
	#SYNC_FILE_RANGE_WRITE
 2

	)

237 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

242 
	#SPLICE_F_MOVE
 1

	)

243 
	#SPLICE_F_NONBLOCK
 2

	)

246 
	#SPLICE_F_MORE
 4

	)

247 
	#SPLICE_F_GIFT
 8

	)

250 
	g__BEGIN_DECLS


252 #ifde‡
__USE_GNU


255 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

256 
__THROW
;

260 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

261 
__Êags
);

265 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

266 
size_t
 
__cou¡
, 
__Êags
);

269 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

270 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

271 
__Êags
);

274 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

275 
__Êags
);

278 #i‚de‡
__USE_FILE_OFFSET64


279 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

281 #ifde‡
__REDIRECT


282 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

283 
__off64_t
 
__Àn
),

284 
ÁŒoˇã64
);

286 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

289 #ifde‡
__USE_LARGEFILE64


290 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

291 
__off64_t
 
__Àn
);

295 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/mman.h

20 #i‚de‡
_SYS_MMAN_H


33 
	#PROT_READ
 0x1

	)

34 
	#PROT_WRITE
 0x2

	)

35 
	#PROT_EXEC
 0x4

	)

36 
	#PROT_NONE
 0x0

	)

37 
	#PROT_GROWSDOWN
 0x01000000

	)

39 
	#PROT_GROWSUP
 0x02000000

	)

43 
	#MAP_SHARED
 0x01

	)

44 
	#MAP_PRIVATE
 0x02

	)

45 #ifde‡
__USE_MISC


46 
	#MAP_TYPE
 0x0‡

	)

50 
	#MAP_FIXED
 0x10

	)

51 #ifde‡
__USE_MISC


52 
	#MAP_FILE
 0

	)

53 
	#MAP_ANONYMOUS
 0x20

	)

54 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

55 
	#MAP_32BIT
 0x40

	)

59 #ifde‡
__USE_MISC


60 
	#MAP_GROWSDOWN
 0x00100

	)

61 
	#MAP_DENYWRITE
 0x00800

	)

62 
	#MAP_EXECUTABLE
 0x01000

	)

63 
	#MAP_LOCKED
 0x02000

	)

64 
	#MAP_NORESERVE
 0x04000

	)

65 
	#MAP_POPULATE
 0x08000

	)

66 
	#MAP_NONBLOCK
 0x10000

	)

67 
	#MAP_STACK
 0x20000

	)

68 
	#MAP_HUGETLB
 0x40000

	)

72 
	#MS_ASYNC
 1

	)

73 
	#MS_SYNC
 4

	)

74 
	#MS_INVALIDATE
 2

	)

77 
	#MCL_CURRENT
 1

	)

78 
	#MCL_FUTURE
 2

	)

82 #ifde‡
__USE_GNU


83 
	#MREMAP_MAYMOVE
 1

	)

84 
	#MREMAP_FIXED
 2

	)

88 #ifde‡
__USE_BSD


89 
	#MADV_NORMAL
 0

	)

90 
	#MADV_RANDOM
 1

	)

91 
	#MADV_SEQUENTIAL
 2

	)

92 
	#MADV_WILLNEED
 3

	)

93 
	#MADV_DONTNEED
 4

	)

94 
	#MADV_REMOVE
 9

	)

95 
	#MADV_DONTFORK
 10

	)

96 
	#MADV_DOFORK
 11

	)

97 
	#MADV_MERGEABLE
 12

	)

98 
	#MADV_UNMERGEABLE
 13

	)

99 
	#MADV_DONTDUMP
 16

	)

101 
	#MADV_DODUMP
 17

	)

102 
	#MADV_HWPOISON
 100

	)

106 #ifde‡
__USE_XOPEN2K


107 
	#POSIX_MADV_NORMAL
 0

	)

108 
	#POSIX_MADV_RANDOM
 1

	)

109 
	#POSIX_MADV_SEQUENTIAL
 2

	)

110 
	#POSIX_MADV_WILLNEED
 3

	)

111 
	#POSIX_MADV_DONTNEED
 4

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

193 
	#_XOPEN_STREAMS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

61 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


62 
	#SA_RESTART
 0x10000000

	)

63 
	#SA_NODEFER
 0x40000000

	)

65 
	#SA_RESETHAND
 0x80000000

	)

67 #ifde‡
__USE_MISC


68 
	#SA_INTERRUPT
 0x20000000

	)

71 
	#SA_NOMASK
 
SA_NODEFER


	)

72 
	#SA_ONESHOT
 
SA_RESETHAND


	)

73 
	#SA_STACK
 
SA_ONSTACK


	)

77 
	#SIG_BLOCK
 0

	)

78 
	#SIG_UNBLOCK
 1

	)

79 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/socket.h

21 #i‚de‡
__BITS_SOCKET_H


22 
	#__BITS_SOCKET_H


	)

24 #i‚de‡
_SYS_SOCKET_H


28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	~<sys/ty≥s.h
>

34 #i‚de‡
__sockÀn_t_deföed


35 
__sockÀn_t
 
	tsockÀn_t
;

36 
	#__sockÀn_t_deföed


	)

40 
	e__sockë_ty≥


42 
	mSOCK_STREAM
 = 1,

44 
	#SOCK_STREAM
 
SOCK_STREAM


	)

45 
	mSOCK_DGRAM
 = 2,

47 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

48 
	mSOCK_RAW
 = 3,

49 
	#SOCK_RAW
 
SOCK_RAW


	)

50 
	mSOCK_RDM
 = 4,

51 
	#SOCK_RDM
 
SOCK_RDM


	)

52 
	mSOCK_SEQPACKET
 = 5,

54 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

55 
	mSOCK_DCCP
 = 6,

56 
	#SOCK_DCCP
 
SOCK_DCCP


	)

57 
	mSOCK_PACKET
 = 10,

60 
	#SOCK_PACKET
 
SOCK_PACKET


	)

65 
	mSOCK_CLOEXEC
 = 02000000,

67 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

68 
	mSOCK_NONBLOCK
 = 04000

70 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

74 
	#PF_UNSPEC
 0

	)

75 
	#PF_LOCAL
 1

	)

76 
	#PF_UNIX
 
PF_LOCAL


	)

77 
	#PF_FILE
 
PF_LOCAL


	)

78 
	#PF_INET
 2

	)

79 
	#PF_AX25
 3

	)

80 
	#PF_IPX
 4

	)

81 
	#PF_APPLETALK
 5

	)

82 
	#PF_NETROM
 6

	)

83 
	#PF_BRIDGE
 7

	)

84 
	#PF_ATMPVC
 8

	)

85 
	#PF_X25
 9

	)

86 
	#PF_INET6
 10

	)

87 
	#PF_ROSE
 11

	)

88 
	#PF_DEC√t
 12

	)

89 
	#PF_NETBEUI
 13

	)

90 
	#PF_SECURITY
 14

	)

91 
	#PF_KEY
 15

	)

92 
	#PF_NETLINK
 16

	)

93 
	#PF_ROUTE
 
PF_NETLINK


	)

94 
	#PF_PACKET
 17

	)

95 
	#PF_ASH
 18

	)

96 
	#PF_ECONET
 19

	)

97 
	#PF_ATMSVC
 20

	)

98 
	#PF_RDS
 21

	)

99 
	#PF_SNA
 22

	)

100 
	#PF_IRDA
 23

	)

101 
	#PF_PPPOX
 24

	)

102 
	#PF_WANPIPE
 25

	)

103 
	#PF_LLC
 26

	)

104 
	#PF_CAN
 29

	)

105 
	#PF_TIPC
 30

	)

106 
	#PF_BLUETOOTH
 31

	)

107 
	#PF_IUCV
 32

	)

108 
	#PF_RXRPC
 33

	)

109 
	#PF_ISDN
 34

	)

110 
	#PF_PHONET
 35

	)

111 
	#PF_IEEE802154
 36

	)

112 
	#PF_MAX
 37

	)

115 
	#AF_UNSPEC
 
PF_UNSPEC


	)

116 
	#AF_LOCAL
 
PF_LOCAL


	)

117 
	#AF_UNIX
 
PF_UNIX


	)

118 
	#AF_FILE
 
PF_FILE


	)

119 
	#AF_INET
 
PF_INET


	)

120 
	#AF_AX25
 
PF_AX25


	)

121 
	#AF_IPX
 
PF_IPX


	)

122 
	#AF_APPLETALK
 
PF_APPLETALK


	)

123 
	#AF_NETROM
 
PF_NETROM


	)

124 
	#AF_BRIDGE
 
PF_BRIDGE


	)

125 
	#AF_ATMPVC
 
PF_ATMPVC


	)

126 
	#AF_X25
 
PF_X25


	)

127 
	#AF_INET6
 
PF_INET6


	)

128 
	#AF_ROSE
 
PF_ROSE


	)

129 
	#AF_DEC√t
 
PF_DEC√t


	)

130 
	#AF_NETBEUI
 
PF_NETBEUI


	)

131 
	#AF_SECURITY
 
PF_SECURITY


	)

132 
	#AF_KEY
 
PF_KEY


	)

133 
	#AF_NETLINK
 
PF_NETLINK


	)

134 
	#AF_ROUTE
 
PF_ROUTE


	)

135 
	#AF_PACKET
 
PF_PACKET


	)

136 
	#AF_ASH
 
PF_ASH


	)

137 
	#AF_ECONET
 
PF_ECONET


	)

138 
	#AF_ATMSVC
 
PF_ATMSVC


	)

139 
	#AF_RDS
 
PF_RDS


	)

140 
	#AF_SNA
 
PF_SNA


	)

141 
	#AF_IRDA
 
PF_IRDA


	)

142 
	#AF_PPPOX
 
PF_PPPOX


	)

143 
	#AF_WANPIPE
 
PF_WANPIPE


	)

144 
	#AF_LLC
 
PF_LLC


	)

145 
	#AF_CAN
 
PF_CAN


	)

146 
	#AF_TIPC
 
PF_TIPC


	)

147 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

148 
	#AF_IUCV
 
PF_IUCV


	)

149 
	#AF_RXRPC
 
PF_RXRPC


	)

150 
	#AF_ISDN
 
PF_ISDN


	)

151 
	#AF_PHONET
 
PF_PHONET


	)

152 
	#AF_IEEE802154
 
PF_IEEE802154


	)

153 
	#AF_MAX
 
PF_MAX


	)

159 
	#SOL_RAW
 255

	)

160 
	#SOL_DECNET
 261

	)

161 
	#SOL_X25
 262

	)

162 
	#SOL_PACKET
 263

	)

163 
	#SOL_ATM
 264

	)

164 
	#SOL_AAL
 265

	)

165 
	#SOL_IRDA
 266

	)

168 
	#SOMAXCONN
 128

	)

171 
	~<bôs/sockaddr.h
>

174 
	ssockaddr


176 
__SOCKADDR_COMMON
 (
ß_
);

177 
	mß_d©a
[14];

183 
	#__ss_Æig¡y≥
 

	)

184 
	#_SS_SIZE
 128

	)

185 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

187 
	ssockaddr_°‹age


189 
__SOCKADDR_COMMON
 (
ss_
);

190 
__ss_Æig¡y≥
 
	m__ss_Æign
;

191 
	m__ss_∑ddög
[
_SS_PADSIZE
];

198 
	mMSG_OOB
 = 0x01,

199 
	#MSG_OOB
 
MSG_OOB


	)

200 
	mMSG_PEEK
 = 0x02,

201 
	#MSG_PEEK
 
MSG_PEEK


	)

202 
	mMSG_DONTROUTE
 = 0x04,

203 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

204 #ifde‡
__USE_GNU


206 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

207 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

209 
	mMSG_CTRUNC
 = 0x08,

210 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

211 
	mMSG_PROXY
 = 0x10,

212 
	#MSG_PROXY
 
MSG_PROXY


	)

213 
	mMSG_TRUNC
 = 0x20,

214 
	#MSG_TRUNC
 
MSG_TRUNC


	)

215 
	mMSG_DONTWAIT
 = 0x40,

216 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

217 
	mMSG_EOR
 = 0x80,

218 
	#MSG_EOR
 
MSG_EOR


	)

219 
	mMSG_WAITALL
 = 0x100,

220 
	#MSG_WAITALL
 
MSG_WAITALL


	)

221 
	mMSG_FIN
 = 0x200,

222 
	#MSG_FIN
 
MSG_FIN


	)

223 
	mMSG_SYN
 = 0x400,

224 
	#MSG_SYN
 
MSG_SYN


	)

225 
	mMSG_CONFIRM
 = 0x800,

226 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

227 
	mMSG_RST
 = 0x1000,

228 
	#MSG_RST
 
MSG_RST


	)

229 
	mMSG_ERRQUEUE
 = 0x2000,

230 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

231 
	mMSG_NOSIGNAL
 = 0x4000,

232 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

233 
	mMSG_MORE
 = 0x8000,

234 
	#MSG_MORE
 
MSG_MORE


	)

235 
	mMSG_WAITFORONE
 = 0x10000,

236 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

238 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

241 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

247 
	smsghdr


249 *
	mmsg_«me
;

250 
sockÀn_t
 
	mmsg_«mñí
;

252 
iovec
 *
	mmsg_iov
;

253 
size_t
 
	mmsg_iovÀn
;

255 *
	mmsg_c⁄åﬁ
;

256 
size_t
 
	mmsg_c⁄åﬁÀn
;

261 
	mmsg_Êags
;

264 #ifde‡
__USE_GNU


266 
	smmsghdr


268 
msghdr
 
	mmsg_hdr
;

269 
	mmsg_Àn
;

274 
	scmsghdr


276 
size_t
 
	mcmsg_Àn
;

281 
	mcmsg_Àvñ
;

282 
	mcmsg_ty≥
;

283 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

284 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

289 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

290 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

292 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

294 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

295 
	#CMSG_FIRSTHDR
(
mhdr
) \

296 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

297 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

298 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

299 & (
size_t
Ë~( (size_tË- 1))

	)

300 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

301 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

302 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

304 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

305 
cmsghdr
 *
__cmsg
Ë
__THROW
;

306 #ifde‡
__USE_EXTERN_INLINES


307 #i‚de‡
_EXTERN_INLINE


308 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

310 
_EXTERN_INLINE
 
cmsghdr
 *

311 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

313 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

317 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

318 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

319 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


320 + 
__mhdr
->
msg_c⁄åﬁÀn
)

321 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

322 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

325  
__cmsg
;

326 
	}
}

333 
	mSCM_RIGHTS
 = 0x01

334 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

335 #ifde‡
__USE_GNU


336 , 
	mSCM_CREDENTIALS
 = 0x02

337 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

341 #ifde‡
__USE_GNU


343 
	su¸ed


345 
pid_t
 
	mpid
;

346 
uid_t
 
	muid
;

347 
gid_t
 
	mgid
;

352 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


353 #i‚de‡
FIOGETOWN


354 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

356 #i‚de‡
FIOSETOWN


357 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

359 #i‚de‡
SIOCATMARK


360 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

362 #i‚de‡
SIOCGPGRP


363 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

365 #i‚de‡
SIOCGSTAMP


366 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

368 #i‚de‡
SIOCGSTAMPNS


369 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

371 #i‚de‡
SIOCSPGRP


372 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

377 
	~<asm/sockë.h
>

379 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


380 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


381 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


382 #unde‡
FIOGETOWN


384 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


385 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


386 #unde‡
FIOSETOWN


388 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


389 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


390 #unde‡
SIOCATMARK


392 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


393 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


394 #unde‡
SIOCGPGRP


396 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


397 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


398 #unde‡
SIOCGSTAMP


400 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


401 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


402 #unde‡
SIOCGSTAMPNS


404 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


405 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


406 #unde‡
SIOCSPGRP


411 
	slögî


413 
	ml_⁄off
;

414 
	ml_lögî
;

418 
__BEGIN_DECLS


425 
ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

426 
__vÀn
, 
__Êags
,

427 
__c⁄°
 
time•ec
 *
__tmo
);

429 
	g__END_DECLS


	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

28 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

30 
__Êags
), 
__ªcv_chk
)

31 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

34 
__exã∫_Æways_ölöe
 
ssize_t


35 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

40  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

42 i‡(
__n
 > 
	`__bos0
 (
__buf
))

43  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

45  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

46 
	}
}

48 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

49 
size_t
 
__buÊí
, 
__Êags
,

50 
__SOCKADDR_ARG
 
__addr
,

51 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

52 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

53 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

54 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

55 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

56 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

57 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

58 
size_t
 
__buÊí
, 
__Êags
,

59 
__SOCKADDR_ARG
 
__addr
,

60 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

61 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

64 
__exã∫_Æways_ölöe
 
ssize_t


65 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

66 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

68 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

71  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

72 
__addr
, 
__addr_Àn
);

73 i‡(
__n
 > 
	`__bos0
 (
__buf
))

74  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

75 
__addr
, 
__addr_Àn
);

77  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

78 
	}
}

	@/usr/include/bits/stat.h

19 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_STAT_H


24 
	#_BITS_STAT_H
 1

	)

27 
	#_STAT_VER_KERNEL
 0

	)

29 #i‡
__WORDSIZE
 == 32

30 
	#_STAT_VER_SVR4
 2

	)

31 
	#_STAT_VER_LINUX
 3

	)

34 
	#_MKNOD_VER_LINUX
 1

	)

35 
	#_MKNOD_VER_SVR4
 2

	)

36 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‡
__WORDSIZE
 == 32

50 
	m__∑d1
;

52 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‡
__WORDSIZE
 == 32

58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #i‡
__WORDSIZE
 == 64

67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‡
__WORDSIZE
 == 32

71 
	m__∑d2
;

73 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
	m°_˘imí£c
;

105 #i‡
__WORDSIZE
 == 64

106 
	m__unu£d
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__unu£d4
;

110 
	m__unu£d5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #i‡
__WORDSIZE
 == 64

123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #i‡
__WORDSIZE
 == 64

135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

155 
	#°_©ime
 
°_©im
.
tv_£c


	)

156 
	#°_mtime
 
°_mtim
.
tv_£c


	)

157 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

159 
__time_t
 
	m°_©ime
;

160 
	m°_©imí£c
;

161 
__time_t
 
	m°_mtime
;

162 
	m°_mtimí£c
;

163 
__time_t
 
	m°_˘ime
;

164 
	m°_˘imí£c
;

166 #i‡
__WORDSIZE
 == 64

167 
	m__unu£d
[3];

169 
__öo64_t
 
	m°_öo
;

175 
	#_STATBUF_ST_BLKSIZE


	)

176 
	#_STATBUF_ST_RDEV


	)

178 
	#_STATBUF_ST_NSEC


	)

182 
	#__S_IFMT
 0170000

	)

185 
	#__S_IFDIR
 0040000

	)

186 
	#__S_IFCHR
 0020000

	)

187 
	#__S_IFBLK
 0060000

	)

188 
	#__S_IFREG
 0100000

	)

189 
	#__S_IFIFO
 0010000

	)

190 
	#__S_IFLNK
 0120000

	)

191 
	#__S_IFSOCK
 0140000

	)

195 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

196 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

197 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

201 
	#__S_ISUID
 04000

	)

202 
	#__S_ISGID
 02000

	)

203 
	#__S_ISVTX
 01000

	)

204 
	#__S_IREAD
 0400

	)

205 
	#__S_IWRITE
 0200

	)

206 
	#__S_IEXEC
 0100

	)

208 #ifde‡
__USE_ATFILE


209 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

210 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

61 
	#TIMER_ABSTIME
 1

	)

67 #ifde‡
__√ed_timevÆ


68 #unde‡
__√ed_timevÆ


69 #i‚de‡
_STRUCT_TIMEVAL


70 
	#_STRUCT_TIMEVAL
 1

	)

71 
	~<bôs/ty≥s.h
>

75 
	stimevÆ


77 
__time_t
 
	mtv_£c
;

78 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

96 #unde‡
__USE_ISOC99


97 #unde‡
__USE_ISOC95


98 #unde‡
__USE_POSIX


99 #unde‡
__USE_POSIX2


100 #unde‡
__USE_POSIX199309


101 #unde‡
__USE_POSIX199506


102 #unde‡
__USE_XOPEN


103 #unde‡
__USE_XOPEN_EXTENDED


104 #unde‡
__USE_UNIX98


105 #unde‡
__USE_XOPEN2K


106 #unde‡
__USE_XOPEN2KXSI


107 #unde‡
__USE_XOPEN2K8


108 #unde‡
__USE_XOPEN2K8XSI


109 #unde‡
__USE_LARGEFILE


110 #unde‡
__USE_LARGEFILE64


111 #unde‡
__USE_FILE_OFFSET64


112 #unde‡
__USE_BSD


113 #unde‡
__USE_SVID


114 #unde‡
__USE_MISC


115 #unde‡
__USE_ATFILE


116 #unde‡
__USE_GNU


117 #unde‡
__USE_REENTRANT


118 #unde‡
__USE_FORTIFY_LEVEL


119 #unde‡
__FAVOR_BSD


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

129 
	#__USE_ANSI
 1

	)

138 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


139 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

140 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

142 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

147 #i‡
deföed
 
_BSD_SOURCE
 && \

148 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

149 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

150 
	#__FAVOR_BSD
 1

	)

154 #ifde‡
_GNU_SOURCE


155 #unde‡
_ISOC95_SOURCE


156 
	#_ISOC95_SOURCE
 1

	)

157 #unde‡
_ISOC99_SOURCE


158 
	#_ISOC99_SOURCE
 1

	)

159 #unde‡
_POSIX_SOURCE


160 
	#_POSIX_SOURCE
 1

	)

161 #unde‡
_POSIX_C_SOURCE


162 
	#_POSIX_C_SOURCE
 200809L

	)

163 #unde‡
_XOPEN_SOURCE


164 
	#_XOPEN_SOURCE
 700

	)

165 #unde‡
_XOPEN_SOURCE_EXTENDED


166 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

167 #unde‡
_LARGEFILE64_SOURCE


168 
	#_LARGEFILE64_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

180 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

181 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

182 
	#_BSD_SOURCE
 1

	)

183 
	#_SVID_SOURCE
 1

	)

190 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

191 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

192 
	#__USE_ISOC99
 1

	)

196 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

197 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

198 
	#__USE_ISOC95
 1

	)

203 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

204 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

205 
	#_POSIX_SOURCE
 1

	)

206 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

207 
	#_POSIX_C_SOURCE
 2

	)

208 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

209 
	#_POSIX_C_SOURCE
 199506L

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

211 
	#_POSIX_C_SOURCE
 200112L

	)

213 
	#_POSIX_C_SOURCE
 200809L

	)

215 
	#__USE_POSIX_IMPLICITLY
 1

	)

218 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


219 
	#__USE_POSIX
 1

	)

222 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


223 
	#__USE_POSIX2
 1

	)

226 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

227 
	#__USE_POSIX199309
 1

	)

230 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

231 
	#__USE_POSIX199506
 1

	)

234 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

235 
	#__USE_XOPEN2K
 1

	)

236 #unde‡
__USE_ISOC95


237 
	#__USE_ISOC95
 1

	)

238 #unde‡
__USE_ISOC99


239 
	#__USE_ISOC99
 1

	)

242 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

243 
	#__USE_XOPEN2K8
 1

	)

244 #unde‡
_ATFILE_SOURCE


245 
	#_ATFILE_SOURCE
 1

	)

248 #ifdef 
_XOPEN_SOURCE


249 
	#__USE_XOPEN
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

251 
	#__USE_XOPEN_EXTENDED
 1

	)

252 
	#__USE_UNIX98
 1

	)

253 #unde‡
_LARGEFILE_SOURCE


254 
	#_LARGEFILE_SOURCE
 1

	)

255 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

257 
	#__USE_XOPEN2K8
 1

	)

258 
	#__USE_XOPEN2K8XSI
 1

	)

260 
	#__USE_XOPEN2K
 1

	)

261 
	#__USE_XOPEN2KXSI
 1

	)

262 #unde‡
__USE_ISOC95


263 
	#__USE_ISOC95
 1

	)

264 #unde‡
__USE_ISOC99


265 
	#__USE_ISOC99
 1

	)

268 #ifde‡
_XOPEN_SOURCE_EXTENDED


269 
	#__USE_XOPEN_EXTENDED
 1

	)

274 #ifde‡
_LARGEFILE_SOURCE


275 
	#__USE_LARGEFILE
 1

	)

278 #ifde‡
_LARGEFILE64_SOURCE


279 
	#__USE_LARGEFILE64
 1

	)

282 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

283 
	#__USE_FILE_OFFSET64
 1

	)

286 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


287 
	#__USE_MISC
 1

	)

290 #ifdef 
_BSD_SOURCE


291 
	#__USE_BSD
 1

	)

294 #ifdef 
_SVID_SOURCE


295 
	#__USE_SVID
 1

	)

298 #ifdef 
_ATFILE_SOURCE


299 
	#__USE_ATFILE
 1

	)

302 #ifdef 
_GNU_SOURCE


303 
	#__USE_GNU
 1

	)

306 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


307 
	#__USE_REENTRANT
 1

	)

310 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

311 && 
deföed
 
__OPTIMIZE__
 && __OPTIMIZE__ > 0

312 #i‡!
__GNUC_PREREQ
 (4, 1)

313 #ifde‡
__GNUC_RH_RELEASE__


314 #w¨nög 
_FORTIFY_SOURCE
 
suµ‹ãd
 
⁄ly
 
wôh
 
GCC
 4.1 
™d
 
œãr


316 
	#__USE_FORTIFY_LEVEL
 0

	)

317 #ñi‡
_FORTIFY_SOURCE
 > 1

318 
	#__USE_FORTIFY_LEVEL
 2

	)

320 
	#__USE_FORTIFY_LEVEL
 1

	)

323 
	#__USE_FORTIFY_LEVEL
 0

	)

327 
	#__STDC_IEC_559__
 1

	)

328 
	#__STDC_IEC_559_COMPLEX__
 1

	)

331 
	#__STDC_ISO_10646__
 200009L

	)

339 #unde‡
__GNU_LIBRARY__


340 
	#__GNU_LIBRARY__
 6

	)

344 
	#__GLIBC__
 2

	)

345 
	#__GLIBC_MINOR__
 12

	)

347 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

348 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

351 #i‡
deföed
 
__GNUC__
 \

352 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

353 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

354 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

355 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

359 #i‚de‡
__ASSEMBLER__


360 #i‚de‡
_SYS_CDEFS_H


361 
	~<sys/cdefs.h
>

366 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


367 
	#__USE_LARGEFILE
 1

	)

368 
	#__USE_LARGEFILE64
 1

	)

374 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

375 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

376 && 
deföed
 
	g__exã∫_ölöe


377 
	#__USE_EXTERN_INLINES
 1

	)

385 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

400 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

401 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

402 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

403 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

405 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

406 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

407 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

408 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

409 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

411 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

413 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

414 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

415 =
	`ht⁄l
 (0x„800000))

	)

417 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

418 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

419 =
	`ht⁄l
 (0x„c00000))

	)

421 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

426 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

427 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

428 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

429 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

430 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

432 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

433 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

434 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

435 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

436 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

438 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


440 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

443 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

444 
__THROW
;

448 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

449 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

450 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

452 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

453 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

454 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

456 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

457 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

458 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

460 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

461 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

462 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

464 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

465 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

466 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

469 #ifde‡
__USE_GNU


471 
	sö6_pktöfo


473 
ö6_addr
 
ùi6_addr
;

474 
ùi6_ifödex
;

478 
	sù6_mtuöfo


480 
sockaddr_ö6
 
ù6m_addr
;

481 
uöt32_t
 
ù6m_mtu
;

486 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

487 
__THROW
 
__©åibuã_dïªˇãd__
;

488 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

489 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

490 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

491 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

492 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

493 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

494 
__mu…x
, 
__∂usy
)

495 
__THROW
 
__©åibuã_dïªˇãd__
;

496 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

497 
uöt8_t
 **
__çåp
)

498 
__THROW
 
__©åibuã_dïªˇãd__
;

499 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

500 
uöt8_t
 **
__çåp
, 
__ty≥
)

501 
__THROW
 
__©åibuã_dïªˇãd__
;

505 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

506 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

507 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

508 **
__d©abuÂ
Ë
__THROW
;

509 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

510 
__THROW
;

511 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

512 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

513 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

514 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

515 **
__d©abuÂ
Ë
__THROW
;

516 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

517 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

518 **
__d©abuÂ
Ë
__THROW
;

519 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

520 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

524 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

525 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

526 
__£gmíts
Ë
__THROW
;

527 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

528 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

529 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

530 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

531 
__THROW
;

537 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

538 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

539 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

540 
__THROW
;

543 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

544 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

545 
uöt32_t
 
__num§c
,

546 
__c⁄°
 
ö_addr
 *
__¶i°
)

547 
__THROW
;

551 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

552 
__c⁄°
 
sockaddr
 *
__group
,

553 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

554 
uöt32_t
 *
__num§c
,

555 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

558 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

559 
__c⁄°
 
sockaddr
 *
__group
,

560 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

561 
uöt32_t
 
__num§c
,

562 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

565 
__END_DECLS


	@/usr/include/slurm/slurm_errno.h

40 #i‚de‡
_SLURM_ERRNO_H


41 
	#_SLURM_ERRNO_H


	)

46 #unde‡
BEGIN_C_DECLS


47 #unde‡
END_C_DECLS


48 #ifde‡
__˝lu•lus


49 
	#BEGIN_C_DECLS
 "C" {

	)

50 
	#END_C_DECLS
 }

	)

52 
	#BEGIN_C_DECLS


	)

53 
	#END_C_DECLS


	)

59 #unde‡
PARAMS


60 #i‡
deföed
 (
__STDC__
Ë|| deföed (
_AIX
) \

61 || (
deföed
 (
__mùs
Ë&& deföed (
_SYSTYPE_SVR4
)) \

62 || 
deföed
(
WIN32
Ë|| 
	$deföed
(
__˝lu•lus
)

63 
	#PARAMS
(
¥Ÿos
Ë
	)
protos

65 
	#PARAMS
(
¥Ÿos
Ë()

	)

68 
BEGIN_C_DECLS


70 
	~<î∫o.h
>

73 
	#¶urm_£ãºno_ªt
(
î∫um
) do { \

74 
	`¶urm_£ãºno
(
î∫um
); \

75  (
î∫um
 ? -1 : 0); \

76 
	}
} 0)

	)

79 
	#SLURM_SUCCESS
 0

	)

80 
	#SLURM_ERROR
 -1

	)

81 
	#SLURM_FAILURE
 -1

	)

84 
	#SLURM_SOCKET_ERROR
 -1

	)

85 
	#SLURM_PROTOCOL_SUCCESS
 0

	)

86 
	#SLURM_PROTOCOL_ERROR
 -1

	)

90 
SLURM_UNEXPECTED_MSG_ERROR
 = 1000,

91 
SLURM_COMMUNICATIONS_CONNECTION_ERROR
,

92 
SLURM_COMMUNICATIONS_SEND_ERROR
,

93 
SLURM_COMMUNICATIONS_RECEIVE_ERROR
,

94 
SLURM_COMMUNICATIONS_SHUTDOWN_ERROR
,

95 
SLURM_PROTOCOL_VERSION_ERROR
,

96 
SLURM_PROTOCOL_IO_STREAM_VERSION_ERROR
,

97 
SLURM_PROTOCOL_AUTHENTICATION_ERROR
,

98 
SLURM_PROTOCOL_INSANE_MSG_LENGTH
,

99 
SLURM_MPI_PLUGIN_NAME_INVALID
,

100 
SLURM_MPI_PLUGIN_PRELAUNCH_SETUP_FAILED
,

101 
SLURM_PLUGIN_NAME_INVALID
,

102 
SLURM_UNKNOWN_FORWARD_ADDR
,

105 
SLURMCTLD_COMMUNICATIONS_CONNECTION_ERROR
 = 1800,

106 
SLURMCTLD_COMMUNICATIONS_SEND_ERROR
,

107 
SLURMCTLD_COMMUNICATIONS_RECEIVE_ERROR
,

108 
SLURMCTLD_COMMUNICATIONS_SHUTDOWN_ERROR
,

111 
SLURM_NO_CHANGE_IN_DATA
 = 1900,

114 
ESLURM_INVALID_PARTITION_NAME
 = 2000,

115 
ESLURM_DEFAULT_PARTITION_NOT_SET
,

116 
ESLURM_ACCESS_DENIED
,

117 
ESLURM_JOB_MISSING_REQUIRED_PARTITION_GROUP
,

118 
ESLURM_REQUESTED_NODES_NOT_IN_PARTITION
,

119 
ESLURM_TOO_MANY_REQUESTED_CPUS
,

120 
ESLURM_INVALID_NODE_COUNT
,

121 
ESLURM_ERROR_ON_DESC_TO_RECORD_COPY
,

122 
ESLURM_JOB_MISSING_SIZE_SPECIFICATION
,

123 
ESLURM_JOB_SCRIPT_MISSING
,

124 
ESLURM_USER_ID_MISSING
 = 2010,

125 
ESLURM_DUPLICATE_JOB_ID
,

126 
ESLURM_PATHNAME_TOO_LONG
,

127 
ESLURM_NOT_TOP_PRIORITY
,

128 
ESLURM_REQUESTED_NODE_CONFIG_UNAVAILABLE
,

129 
ESLURM_REQUESTED_PART_CONFIG_UNAVAILABLE
,

130 
ESLURM_NODES_BUSY
,

131 
ESLURM_INVALID_JOB_ID
,

132 
ESLURM_INVALID_NODE_NAME
,

133 
ESLURM_WRITING_TO_FILE
,

134 
ESLURM_TRANSITION_STATE_NO_UPDATE
 = 2020,

135 
ESLURM_ALREADY_DONE
,

136 
ESLURM_INTERCONNECT_FAILURE
,

137 
ESLURM_BAD_DIST
,

138 
ESLURM_JOB_PENDING
,

139 
ESLURM_BAD_TASK_COUNT
,

140 
ESLURM_INVALID_JOB_CREDENTIAL
,

141 
ESLURM_IN_STANDBY_MODE
,

142 
ESLURM_INVALID_NODE_STATE
,

143 
ESLURM_INVALID_FEATURE
,

144 
ESLURM_INVALID_AUTHTYPE_CHANGE
 = 2030,

145 
ESLURM_INVALID_CHECKPOINT_TYPE_CHANGE
,

146 
ESLURM_INVALID_SCHEDTYPE_CHANGE
,

147 
ESLURM_INVALID_SELECTTYPE_CHANGE
,

148 
ESLURM_INVALID_SWITCHTYPE_CHANGE
,

149 
ESLURM_FRAGMENTATION
,

150 
ESLURM_NOT_SUPPORTED
,

151 
ESLURM_DISABLED
,

152 
ESLURM_DEPENDENCY
,

153 
ESLURM_BATCH_ONLY
,

154 
ESLURM_TASKDIST_ARBITRARY_UNSUPPORTED
 = 2040,

155 
ESLURM_TASKDIST_REQUIRES_OVERCOMMIT
,

156 
ESLURM_JOB_HELD
,

157 
ESLURM_INVALID_CRYPTO_TYPE_CHANGE
,

158 
ESLURM_INVALID_TASK_MEMORY
,

159 
ESLURM_INVALID_ACCOUNT
,

160 
ESLURM_INVALID_PARENT_ACCOUNT
,

161 
ESLURM_SAME_PARENT_ACCOUNT
,

162 
ESLURM_INVALID_LICENSES
,

163 
ESLURM_NEED_RESTART
,

164 
ESLURM_ACCOUNTING_POLICY
 = 2050,

165 
ESLURM_INVALID_TIME_LIMIT
,

166 
ESLURM_RESERVATION_ACCESS
,

167 
ESLURM_RESERVATION_INVALID
,

168 
ESLURM_INVALID_TIME_VALUE
,

169 
ESLURM_RESERVATION_BUSY
,

170 
ESLURM_RESERVATION_NOT_USABLE
,

171 
ESLURM_INVALID_WCKEY
,

172 
ESLURM_RESERVATION_OVERLAP
,

173 
ESLURM_PORTS_BUSY
,

174 
ESLURM_PORTS_INVALID
 = 2060,

175 
ESLURM_PROLOG_RUNNING
,

176 
ESLURM_NO_STEPS
,

177 
ESLURM_INVALID_BLOCK_STATE
,

178 
ESLURM_INVALID_BLOCK_LAYOUT
,

179 
ESLURM_INVALID_BLOCK_NAME
,

180 
ESLURM_INVALID_QOS
,

181 
ESLURM_QOS_PREEMPTION_LOOP
,

182 
ESLURM_NODE_NOT_AVAIL
,

183 
ESLURM_INVALID_CPU_COUNT
,

184 
ESLURM_PARTITION_NOT_AVAIL
 = 2070,

185 
ESLURM_CIRCULAR_DEPENDENCY
,

186 
ESLURM_INVALID_GRES
,

187 
ESLURM_JOB_NOT_PENDING
,

188 
ESLURM_QOS_THRES
,

189 
ESLURM_PARTITION_IN_USE
,

190 
ESLURM_STEP_LIMIT
,

191 
ESLURM_JOB_SUSPENDED
,

194 
ESLURM_SWITCH_MIN
 = 3000,

195 
ESLURM_SWITCH_MAX
 = 3099,

196 
ESLURM_JOBCOMP_MIN
 = 3100,

197 
ESLURM_JOBCOMP_MAX
 = 3199,

198 
ESLURM_SCHED_MIN
 = 3200,

199 
ESLURM_SCHED_MAX
 = 3299,

203 
ESLRUMD_PIPE_ERROR_ON_TASK_SPAWN
 = 4000,

204 
ESLURMD_KILL_TASK_FAILED
,

205 
ESLURMD_KILL_JOB_ALREADY_COMPLETE
,

206 
ESLURMD_INVALID_ACCT_FREQ
,

207 
ESLURMD_INVALID_JOB_CREDENTIAL
,

208 
ESLURMD_UID_NOT_FOUND
,

209 
ESLURMD_GID_NOT_FOUND
,

210 
ESLURMD_CREDENTIAL_EXPIRED
,

211 
ESLURMD_CREDENTIAL_REVOKED
,

212 
ESLURMD_CREDENTIAL_REPLAYED
,

213 
ESLURMD_CREATE_BATCH_DIR_ERROR
,

214 
ESLURMD_MODIFY_BATCH_DIR_ERROR
,

215 
ESLURMD_CREATE_BATCH_SCRIPT_ERROR
,

216 
ESLURMD_MODIFY_BATCH_SCRIPT_ERROR
,

217 
ESLURMD_SETUP_ENVIRONMENT_ERROR
,

218 
ESLURMD_SHARED_MEMORY_ERROR
,

219 
ESLURMD_SET_UID_OR_GID_ERROR
,

220 
ESLURMD_SET_SID_ERROR
,

221 
ESLURMD_CANNOT_SPAWN_IO_THREAD
,

222 
ESLURMD_FORK_FAILED
,

223 
ESLURMD_EXECVE_FAILED
,

224 
ESLURMD_IO_ERROR
,

225 
ESLURMD_PROLOG_FAILED
,

226 
ESLURMD_EPILOG_FAILED
,

227 
ESLURMD_SESSION_KILLED
,

228 
ESLURMD_TOOMANYSTEPS
,

229 
ESLURMD_STEP_EXISTS
,

230 
ESLURMD_JOB_NOTRUNNING
,

231 
ESLURMD_STEP_SUSPENDED
,

232 
ESLURMD_STEP_NOTSUSPENDED
,

235 
ESCRIPT_CHDIR_FAILED
 = 4100,

236 
ESCRIPT_OPEN_OUTPUT_FAILED
,

237 
ESCRIPT_NON_ZERO_RETURN
,

240 
SLURM_PROTOCOL_SOCKET_IMPL_ZERO_RECV_LENGTH
 = 5000,

241 
SLURM_PROTOCOL_SOCKET_IMPL_NEGATIVE_RECV_LENGTH
,

242 
SLURM_PROTOCOL_SOCKET_IMPL_NOT_ALL_DATA_SENT
,

243 
ESLURM_PROTOCOL_INCOMPLETE_PACKET
 ,

244 
SLURM_PROTOCOL_SOCKET_IMPL_TIMEOUT
 ,

245 
SLURM_PROTOCOL_SOCKET_ZERO_BYTES_SENT
,

248 
ESLURM_AUTH_CRED_INVALID
 = 6000,

249 
ESLURM_AUTH_FOPEN_ERROR
,

250 
ESLURM_AUTH_NET_ERROR
,

251 
ESLURM_AUTH_UNABLE_TO_SIGN
,

254 
ESLURM_DB_CONNECTION
 = 7000,

255 
ESLURM_JOBS_RUNNING_ON_ASSOC
,

256 
ESLURM_CLUSTER_DELETED
,

257 
ESLURM_ONE_CHANGE
,

258 
ESLURM_BAD_NAME


262 * 
¶urm_°ªº‹
 
PARAMS
((
î∫um
));

265 
¶urm_£ãºno
 
PARAMS
((
î∫um
));

268 
¶urm_gë_î∫o
 
PARAMS
(());

271 
¶urm_≥º‹
 
PARAMS
((*
msg
));

273 
	gEND_C_DECLS


	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3) \

136 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
	g__GNUC__
 == 4 \

137 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

138 && 
__GNUC_RH_RELEASE__
 >= 31)

139 
	#__w¨nde˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

141 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

142 
	#__îr‹de˛
(
«me
, 
msg
) \

143 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

145 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

146 
	#__w¨«âr
(
msg
)

	)

147 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

151 #i‡
__GNUC_PREREQ
 (2,97)

153 
	#__Êex¨r
 []

	)

155 #ifde‡
__GNUC__


156 
	#__Êex¨r
 [0]

	)

158 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

159 
	#__Êex¨r
 []

	)

162 
	#__Êex¨r
 [1]

	)

178 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

180 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 #ifde‡
__˝lu•lus


182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

188 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

189 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

202 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

203 
	#__©åibuã__
(
xyz
Ë

	)

209 #i‡
__GNUC_PREREQ
 (2,96)

210 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

212 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (2,96)

219 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

221 
	#__©åibuã_puª__


	)

227 #i‡
__GNUC_PREREQ
 (3,1)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

229 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

231 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

232 
	#__©åibuã_noölöe__


	)

236 #i‡
__GNUC_PREREQ
 (3,2)

237 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

239 
	#__©åibuã_dïªˇãd__


	)

248 #i‡
__GNUC_PREREQ
 (2,8)

249 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

251 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

258 #i‡
__GNUC_PREREQ
 (2,97)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

260 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

262 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

267 #i‡
__GNUC_PREREQ
 (3,3)

268 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

270 
	#__n⁄nuŒ
(
∑øms
)

	)

275 #i‡
__GNUC_PREREQ
 (3,4)

276 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

277 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

278 #i‡
__USE_FORTIFY_LEVEL
 > 0

279 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

282 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

284 #i‚de‡
__wur


285 
	#__wur


	)

289 #i‡
__GNUC_PREREQ
 (3,2)

290 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

292 
	#__Æways_ölöe
 
__ölöe


	)

297 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

298 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

299 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

300 && 
__GNUC_RH_RELEASE__
 >= 31)

301 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


302 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

303 #i‡
__GNUC_PREREQ
 (4,3) \

304 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

305 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

306 && 
__GNUC_RH_RELEASE__
 >= 31)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 \

311 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

314 
	#__exã∫_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__exã∫_Æways_ölöe
 \

317 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

319 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

326 #i‡
__GNUC_PREREQ
 (4,3) \

327 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

328 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

329 && 
__GNUC_RH_RELEASE__
 >= 31)

330 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

331 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

338 #i‡!
__GNUC_PREREQ
 (2,8)

339 
	#__exãnsi⁄__


	)

343 #i‡!
__GNUC_PREREQ
 (2,92)

344 
	#__ª°ri˘


	)

350 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


351 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

353 #ifde‡
__GNUC__


354 
	#__ª°ri˘_¨r


	)

356 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

357 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

360 
	#__ª°ri˘_¨r


	)

365 
	~<bôs/w‹dsize.h
>

367 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


368 
	#__LDBL_COMPAT
 1

	)

369 #ifde‡
__REDIRECT


370 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

371 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

372 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

373 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

374 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

375 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

376 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

377 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

378 
	#__LDBL_REDIR_DECL
(
«me
) \

379 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

380 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

381 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

386 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


387 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

388 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

389 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

390 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

391 
	#__LDBL_REDIR_DECL
(
«me
)

	)

392 #ifde‡
__REDIRECT


393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

394 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

395 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/statvfs.h

20 #i‚def 
_SYS_STATVFS_H


21 
	#_SYS_STATVFS_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/°©vfs.h
>

28 #i‚de‡
__USE_FILE_OFFSET64


29 #i‚de‡
__fsblk˙t_t_deföed


30 
__fsblk˙t_t
 
	tfsblk˙t_t
;

31 
	#__fsblk˙t_t_deföed


	)

33 #i‚de‡
__fsfû˙t_t_deföed


34 
__fsfû˙t_t
 
	tfsfû˙t_t
;

35 
	#__fsfû˙t_t_deföed


	)

38 #i‚de‡
__fsblk˙t_t_deföed


39 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

40 
	#__fsblk˙t_t_deföed


	)

42 #i‚de‡
__fsfû˙t_t_deföed


43 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

44 
	#__fsfû˙t_t_deföed


	)

48 
	g__BEGIN_DECLS


51 #i‚de‡
__USE_FILE_OFFSET64


52 
	$°©vfs
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

53 
°©vfs
 *
__ª°ri˘
 
__buf
)

54 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

56 #ifde‡
__REDIRECT_NTH


57 
	`__REDIRECT_NTH
 (
°©vfs
,

58 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

59 
°©vfs
 *
__ª°ri˘
 
__buf
), 
°©vfs64
)

60 
	`__n⁄nuŒ
 ((1, 2));

62 
	#°©vfs
 
°©vfs64


	)

65 #ifde‡
__USE_LARGEFILE64


66 
	$°©vfs64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

67 
°©vfs64
 *
__ª°ri˘
 
__buf
)

68 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

73 #i‚de‡
__USE_FILE_OFFSET64


74 
	$f°©vfs
 (
__fûdes
, 
°©vfs
 *
__buf
)

75 
__THROW
 
	`__n⁄nuŒ
 ((2));

77 #ifde‡
__REDIRECT_NTH


78 
	`__REDIRECT_NTH
 (
f°©vfs
, (
__fûdes
, 
°©vfs
 *
__buf
),

79 
f°©vfs64
Ë
	`__n⁄nuŒ
 ((2));

81 
	#f°©vfs
 
f°©vfs64


	)

84 #ifde‡
__USE_LARGEFILE64


85 
	$f°©vfs64
 (
__fûdes
, 
°©vfs64
 *
__buf
)

86 
__THROW
 
	`__n⁄nuŒ
 ((2));

89 
__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
	$ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

41 
__wur
;

51 
ssize_t
 
	$wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

52 
__wur
;

55 #ifde‡
__USE_BSD


56 #i‚de‡
__USE_FILE_OFFSET64


66 
ssize_t
 
	$¥ódv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

67 
__off_t
 
__off£t
Ë
__wur
;

78 
ssize_t
 
	$pwrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

79 
__off_t
 
__off£t
Ë
__wur
;

81 #ifde‡
__REDIRECT


82 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

83 
__cou¡
, 
__off64_t
 
__off£t
),

84 
¥ódv64
Ë
__wur
;

85 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

86 
__cou¡
, 
__off64_t
 
__off£t
),

87 
pwrôev64
Ë
__wur
;

89 
	#¥ódv
 
¥ódv64


	)

90 
	#pwrôev
 
pwrôev64


	)

94 #ifde‡
__USE_LARGEFILE64


104 
ssize_t
 
	$¥ódv64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

105 
__off64_t
 
__off£t
Ë
__wur
;

116 
ssize_t
 
	$pwrôev64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

117 
__off64_t
 
__off£t
Ë
__wur
;

121 
__END_DECLS


	@/usr/include/utime.h

23 #i‚def 
_UTIME_H


24 
	#_UTIME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


33 
	#__√ed_time_t


	)

34 
	~<time.h
>

38 
	sutimbuf


40 
__time_t
 
	ma˘ime
;

41 
__time_t
 
	mmodtime
;

46 
	$utime
 (
__c⁄°
 *
__fûe
,

47 
__c⁄°
 
utimbuf
 *
__fûe_times
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1));

50 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (Ë(
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (Ë(
x
); \

51 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

56 
	#__bsw≠_c⁄°™t_32
(
x
) \

57 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

58 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

60 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

61 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

62 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

63 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

64 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

65 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

66 || 
deföed
 
	g__amdÁm10__
)

69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

76 
__v
; }))

	)

78 
	#__bsw≠_32
(
x
) \

79 (
__exãnsi⁄__
 \

80 ({ 
__v
, 
__x
 = (
x
); \

81 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

82 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

84 
	`__asm__
 ("rorw $8, %w0;" \

87 : "Ù" (
__v
) \

88 : "0" (
__x
) \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

99 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

101 
	#__bsw≠_c⁄°™t_64
(
x
) \

102 ((((
x
) & 0xff00000000000000ull) >> 56) \

103 | (((
x
) & 0x00ff000000000000ull) >> 40) \

104 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

105 | (((
x
) & 0x000000ff00000000ull) >> 8) \

106 | (((
x
) & 0x00000000ff000000ull) << 8) \

107 | (((
x
) & 0x0000000000ff0000ull) << 24) \

108 | (((
x
) & 0x000000000000ff00ull) << 40) \

109 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

111 #i‡
__WORDSIZE
 == 64

112 
	#__bsw≠_64
(
x
) \

113 (
__exãnsi⁄__
 \

114 ({ 
__v
, 
__x
 = (
x
); \

115 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

116 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

118 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

119 
__v
; }))

	)

121 
	#__bsw≠_64
(
x
) \

122 (
__exãnsi⁄__
 \

123 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

124 
__l
[2]; } 
__w
, 
__r
; \

125 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

126 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

129 
__w
.
__Œ
 = (
x
); \

130 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

131 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

133 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


47 
	#MCAST_JOIN_GROUP
 42

	)

48 
	#MCAST_BLOCK_SOURCE
 43

	)

49 
	#MCAST_UNBLOCK_SOURCE
 44

	)

50 
	#MCAST_LEAVE_GROUP
 45

	)

51 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

52 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

53 
	#MCAST_MSFILTER
 48

	)

55 
	#MCAST_EXCLUDE
 0

	)

56 
	#MCAST_INCLUDE
 1

	)

59 
	#IP_ROUTER_ALERT
 5

	)

60 
	#IP_PKTINFO
 8

	)

61 
	#IP_PKTOPTIONS
 9

	)

62 
	#IP_PMTUDISC
 10

	)

63 
	#IP_MTU_DISCOVER
 10

	)

64 
	#IP_RECVERR
 11

	)

65 
	#IP_RECVTTL
 12

	)

66 
	#IP_RECVTOS
 13

	)

67 
	#IP_MTU
 14

	)

68 
	#IP_FREEBIND
 15

	)

69 
	#IP_IPSEC_POLICY
 16

	)

70 
	#IP_XFRM_POLICY
 17

	)

71 
	#IP_PASSSEC
 18

	)

72 
	#IP_TRANSPARENT
 19

	)

73 
	#IP_MULTICAST_ALL
 49

	)

76 
	#IP_ORIGDSTADDR
 20

	)

77 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

79 
	#IP_MINTTL
 21

	)

83 
	#IP_PMTUDISC_DONT
 0

	)

84 
	#IP_PMTUDISC_WANT
 1

	)

85 
	#IP_PMTUDISC_DO
 2

	)

86 
	#IP_PMTUDISC_PROBE
 3

	)

89 
	#SOL_IP
 0

	)

91 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

92 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

93 
	#IP_MAX_MEMBERSHIPS
 20

	)

95 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


99 
	sù_›ts


101 
ö_addr
 
	mù_d°
;

102 
	mù_›ts
[40];

106 
	sù_mªqn


108 
ö_addr
 
	mimr_mu…üddr
;

109 
ö_addr
 
	mimr_addªss
;

110 
	mimr_ifödex
;

114 
	sö_pktöfo


116 
	mùi_ifödex
;

117 
ö_addr
 
	mùi_•ec_d°
;

118 
ö_addr
 
	mùi_addr
;

125 
	#IPV6_ADDRFORM
 1

	)

126 
	#IPV6_2292PKTINFO
 2

	)

127 
	#IPV6_2292HOPOPTS
 3

	)

128 
	#IPV6_2292DSTOPTS
 4

	)

129 
	#IPV6_2292RTHDR
 5

	)

130 
	#IPV6_2292PKTOPTIONS
 6

	)

131 
	#IPV6_CHECKSUM
 7

	)

132 
	#IPV6_2292HOPLIMIT
 8

	)

134 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

136 
	#IPV6_NEXTHOP
 9

	)

137 
	#IPV6_AUTHHDR
 10

	)

138 
	#IPV6_UNICAST_HOPS
 16

	)

139 
	#IPV6_MULTICAST_IF
 17

	)

140 
	#IPV6_MULTICAST_HOPS
 18

	)

141 
	#IPV6_MULTICAST_LOOP
 19

	)

142 
	#IPV6_JOIN_GROUP
 20

	)

143 
	#IPV6_LEAVE_GROUP
 21

	)

144 
	#IPV6_ROUTER_ALERT
 22

	)

145 
	#IPV6_MTU_DISCOVER
 23

	)

146 
	#IPV6_MTU
 24

	)

147 
	#IPV6_RECVERR
 25

	)

148 
	#IPV6_V6ONLY
 26

	)

149 
	#IPV6_JOIN_ANYCAST
 27

	)

150 
	#IPV6_LEAVE_ANYCAST
 28

	)

151 
	#IPV6_IPSEC_POLICY
 34

	)

152 
	#IPV6_XFRM_POLICY
 35

	)

154 
	#IPV6_RECVPKTINFO
 49

	)

155 
	#IPV6_PKTINFO
 50

	)

156 
	#IPV6_RECVHOPLIMIT
 51

	)

157 
	#IPV6_HOPLIMIT
 52

	)

158 
	#IPV6_RECVHOPOPTS
 53

	)

159 
	#IPV6_HOPOPTS
 54

	)

160 
	#IPV6_RTHDRDSTOPTS
 55

	)

161 
	#IPV6_RECVRTHDR
 56

	)

162 
	#IPV6_RTHDR
 57

	)

163 
	#IPV6_RECVDSTOPTS
 58

	)

164 
	#IPV6_DSTOPTS
 59

	)

166 
	#IPV6_RECVTCLASS
 66

	)

167 
	#IPV6_TCLASS
 67

	)

170 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

171 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

172 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

173 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

176 
	#IPV6_PMTUDISC_DONT
 0

	)

177 
	#IPV6_PMTUDISC_WANT
 1

	)

178 
	#IPV6_PMTUDISC_DO
 2

	)

179 
	#IPV6_PMTUDISC_PROBE
 3

	)

182 
	#SOL_IPV6
 41

	)

183 
	#SOL_ICMPV6
 58

	)

186 
	#IPV6_RTHDR_LOOSE
 0

	)

187 
	#IPV6_RTHDR_STRICT
 1

	)

189 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/statvfs.h

19 #i‚de‡
_SYS_STATVFS_H


23 
	~<bôs/ty≥s.h
>

25 #i‡
__WORDSIZE
 == 32

26 
	#_STATVFSBUF_F_UNUSED


	)

29 
	s°©vfs


31 
	mf_bsize
;

32 
	mf_‰size
;

33 #i‚de‡
__USE_FILE_OFFSET64


34 
__fsblk˙t_t
 
	mf_blocks
;

35 
__fsblk˙t_t
 
	mf_b‰ì
;

36 
__fsblk˙t_t
 
	mf_bavaû
;

37 
__fsfû˙t_t
 
	mf_fûes
;

38 
__fsfû˙t_t
 
	mf_f‰ì
;

39 
__fsfû˙t_t
 
	mf_Ávaû
;

41 
__fsblk˙t64_t
 
	mf_blocks
;

42 
__fsblk˙t64_t
 
	mf_b‰ì
;

43 
__fsblk˙t64_t
 
	mf_bavaû
;

44 
__fsfû˙t64_t
 
	mf_fûes
;

45 
__fsfû˙t64_t
 
	mf_f‰ì
;

46 
__fsfû˙t64_t
 
	mf_Ávaû
;

48 
	mf_fsid
;

49 #ifde‡
_STATVFSBUF_F_UNUSED


50 
	m__f_unu£d
;

52 
	mf_Êag
;

53 
	mf_«memax
;

54 
	m__f_•¨e
[6];

57 #ifde‡
__USE_LARGEFILE64


58 
	s°©vfs64


60 
	mf_bsize
;

61 
	mf_‰size
;

62 
__fsblk˙t64_t
 
	mf_blocks
;

63 
__fsblk˙t64_t
 
	mf_b‰ì
;

64 
__fsblk˙t64_t
 
	mf_bavaû
;

65 
__fsfû˙t64_t
 
	mf_fûes
;

66 
__fsfû˙t64_t
 
	mf_f‰ì
;

67 
__fsfû˙t64_t
 
	mf_Ávaû
;

68 
	mf_fsid
;

69 #ifde‡
_STATVFSBUF_F_UNUSED


70 
	m__f_unu£d
;

72 
	mf_Êag
;

73 
	mf_«memax
;

74 
	m__f_•¨e
[6];

82 
	mST_RDONLY
 = 1,

83 
	#ST_RDONLY
 
ST_RDONLY


	)

84 
	mST_NOSUID
 = 2

85 
	#ST_NOSUID
 
ST_NOSUID


	)

86 #ifde‡
__USE_GNU


88 
	mST_NODEV
 = 4,

89 
	#ST_NODEV
 
ST_NODEV


	)

90 
	mST_NOEXEC
 = 8,

91 
	#ST_NOEXEC
 
ST_NOEXEC


	)

92 
	mST_SYNCHRONOUS
 = 16,

93 
	#ST_SYNCHRONOUS
 
ST_SYNCHRONOUS


	)

94 
	mST_MANDLOCK
 = 64,

95 
	#ST_MANDLOCK
 
ST_MANDLOCK


	)

96 
	mST_WRITE
 = 128,

97 
	#ST_WRITE
 
ST_WRITE


	)

98 
	mST_APPEND
 = 256,

99 
	#ST_APPEND
 
ST_APPEND


	)

100 
	mST_IMMUTABLE
 = 512,

101 
	#ST_IMMUTABLE
 
ST_IMMUTABLE


	)

102 
	mST_NOATIME
 = 1024,

103 
	#ST_NOATIME
 
ST_NOATIME


	)

104 
	mST_NODIRATIME
 = 2048,

105 
	#ST_NODIRATIME
 
ST_NODIRATIME


	)

106 
	mST_RELATIME
 = 4096

107 
	#ST_RELATIME
 
ST_RELATIME


	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

5 #i‚de‡
HZ


6 
	#HZ
 100

	)

9 #i‚de‡
EXEC_PAGESIZE


10 
	#EXEC_PAGESIZE
 4096

	)

13 #i‚de‡
NOGROUP


14 
	#NOGROUP
 (-1)

	)

17 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

25 
	#SO_REUSEPORT
 15

	)

27 #i‚de‡
SO_PASSCRED


28 
	#SO_PASSCRED
 16

	)

29 
	#SO_PEERCRED
 17

	)

30 
	#SO_RCVLOWAT
 18

	)

31 
	#SO_SNDLOWAT
 19

	)

32 
	#SO_RCVTIMEO
 20

	)

33 
	#SO_SNDTIMEO
 21

	)

37 
	#SO_SECURITY_AUTHENTICATION
 22

	)

38 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

39 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

41 
	#SO_BINDTODEVICE
 25

	)

44 
	#SO_ATTACH_FILTER
 26

	)

45 
	#SO_DETACH_FILTER
 27

	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

66 
	#SO_RXQ_OVFL
 40

	)

68 
	#SO_BPF_EXTENSIONS
 48

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

562 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

563 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

567 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

568 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROW
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROW
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROW
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_MISC


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_MISC


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
__END_DECLS


97 #i‡!
deföed
 
__deföed_sched∑øm
 \

98 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

99 
	#__deföed_sched∑øm
 1

	)

101 
	s__sched_∑øm


103 
__sched_¥i‹ôy
;

105 #unde‡
__√ed_sched∑øm


109 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


110 
	#__˝u_£t_t_deföed


	)

112 
	#__CPU_SETSIZE
 1024

	)

113 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

116 
	t__˝u_mask
;

119 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

120 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

125 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

126 } 
	t˝u_£t_t
;

129 #i‡
	`__GNUC_PREREQ
 (2, 91)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

131 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 
size_t
 
__i
; \

136 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

137 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

138 
__i
 = 0; __ò< 
__imax
; ++__i) \

139 
__bôs
[
__i
] = 0; \

140 
	}
} 0)

	)

142 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

143 (
__exãnsi⁄__
 \

144 ({ 
size_t
 
__˝u
 = (
˝u
); \

145 
__˝u
 < 8 * (
£tsize
) \

146 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

147 |
	`__CPUMASK
 (
__˝u
)) \

148 : 0; }))

	)

149 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

150 (
__exãnsi⁄__
 \

151 ({ 
size_t
 
__˝u
 = (
˝u
); \

152 
__˝u
 < 8 * (
£tsize
) \

153 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

154 &~
	`__CPUMASK
 (
__˝u
)) \

155 : 0; }))

	)

156 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

157 (
__exãnsi⁄__
 \

158 ({ 
size_t
 
__˝u
 = (
˝u
); \

159 
__˝u
 < 8 * (
£tsize
) \

160 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

161 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

162 : 0; }))

	)

164 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

165 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

167 #i‡
__GNUC_PREREQ
 (2, 91)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
__exãnsi⁄__
 \

173 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

174 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

175 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

176 
size_t
 
__i
; \

177 
__i
 = 0; __ò< 
__imax
; ++__i) \

178 i‡(
__bôs
[
__i
] != __bits[__i]) \

180 
__i
 =
__imax
; }))

	)

183 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

184 (
__exãnsi⁄__
 \

185 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

186 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

187 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

188 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

189 
size_t
 
__i
; \

190 
__i
 = 0; __ò< 
__imax
; ++__i) \

191 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

192 
__de°
; }))

	)

194 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

195 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

196 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

197 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

199 
__BEGIN_DECLS


201 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

202 
__THROW
;

203 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

204 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

206 
__END_DECLS


	@
1
.
1
/usr/include
218
5574
inc/linkage/fuse.h
inc/linkage/selinux.h
inc/linkage/slurm.h
inc/rmfs.h
inc/rmfs/backingstore.h
inc/rmfs/conf.h
inc/rmfs/misc.h
inc/rmfs/param.h
inc/rmfs/rnode.h
inc/rmfs/types.h
lib/collect/calcul.c
lib/collect/collect_backingstore.c
lib/collect/collect_cp.c
lib/collect/collect_default.c
lib/collect/collect_env.c
lib/collect/collect_fuse.c
lib/collect/collect_macconf.c
lib/collect/collect_os.c
lib/collect/collect_predecessor.c
lib/collect/collect_slurm.c
lib/collect/collect_slurm_job.c
lib/collect/collect_slurm_node.c
lib/collect/collect_slurm_part.c
lib/collect/collect_slurm_step.c
lib/collect/typ_slurm.c
lib/conf/cp/cp_Debug.c
lib/conf/cp/cp_effluviate.c
lib/conf/cp/cp_get.c
lib/conf/cp/cp_subr.c
lib/conf/cp/cp_tab.c
lib/conf/misc/.djb_strtohash.c
lib/conf/misc/djb_hash.c
lib/conf/misc/misc_subr.c
lib/conf/setval/set_val_bool.c
lib/conf/setval/set_val_charptr.c
lib/conf/setval/set_val_l.c
lib/conf/setval/set_val_pid.c
lib/conf/setval/set_val_ptr.c
lib/conf/setval/set_val_truth.c
lib/conf/setval/set_val_ui.c
lib/conf/setval/set_val_uid.c
lib/conf/setval/set_val_ul.c
lib/conf/typ/typ_alpha.c
lib/conf/typ/typ_alphanum.c
lib/conf/typ/typ_always_fails.c
lib/conf/typ/typ_check.c
lib/conf/typ/typ_context.c
lib/conf/typ/typ_dir.c
lib/conf/typ/typ_file.c
lib/conf/typ/typ_host.c
lib/conf/typ/typ_inout.c
lib/conf/typ/typ_numeric.c
lib/conf/typ/typ_numericchar.c
lib/conf/typ/typ_opaque.c
lib/conf/typ/typ_path.c
lib/conf/typ/typ_slurm.c
lib/conf/typ/typ_table.c
lib/conf/typ/typ_truth.c
lib/conf/typ/typ_xattr.c
lib/fuseops/namer.c
lib/fuseops/rmfs_access.c
lib/fuseops/rmfs_fuseops_tab.c
lib/fuseops/rmfs_getattr.c
lib/fuseops/rmfs_init.c
lib/fuseops/rmfs_mayaccess.c
lib/fuseops/rmfs_open.c
lib/fuseops/rmfs_poll.c
lib/fuseops/rmfs_read.c
lib/fuseops/rmfs_readdir.c
lib/fuseops/rmfs_statfs.c
lib/fuseops/rmfs_trunc.c
lib/fuseops/rmfs_write.c
lib/fuseops/rmfs_xattr.c
lib/rnode/rmfs_param.c
lib/rnode/rn_README.c
lib/rnode/rn_alloc.c
lib/rnode/rn_cast.c
lib/rnode/rn_ctljobid.c
lib/rnode/rn_ctlroot.c
lib/rnode/rn_mkattr.c
lib/rnode/rn_mkcname.c
lib/rnode/rn_mkctl.c
lib/rnode/rn_mkfsroot.c
lib/rnode/rn_mkjob.c
lib/rnode/rn_mknode.c
lib/rnode/rn_mkpart.c
lib/rnode/rn_mkstep.c
lib/rnode/rn_provision.c
lib/rnode/rn_public.c
lib/rnode/rn_subr.c
lib/rnode/rn_tab.c
slu_rmfs/.ingest.c
slu_rmfs/.mount.c
slu_rmfs/.slu_rmfs.c
slu_rmfs/.usage.c
slu_rmfs/ingest.c
slu_rmfs/mount.c
slu_rmfs/slu_rmfs.c
slu_rmfs/usage.c
x.c
/usr/include/assert.h
/usr/include/attr/xattr.h
/usr/include/bsd/string.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/fuse/fuse.h
/usr/include/fuse/fuse_opt.h
/usr/include/inttypes.h
/usr/include/libgen.h
/usr/include/limits.h
/usr/include/selinux/selinux.h
/usr/include/signal.h
/usr/include/slurm/slurm.h
/usr/include/slurm/spank.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/mman.h
/usr/include/sys/param.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/types.h
/usr/include/sysexits.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/mman.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/netinet/in.h
/usr/include/slurm/slurm_errno.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/statvfs.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/sys/uio.h
/usr/include/utime.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/param.h
/usr/include/asm/socket.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/in.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/select.h
/usr/include/bits/sockaddr.h
/usr/include/bits/statvfs.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/asm-generic/param.h
/usr/include/asm-generic/socket.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm/sockios.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/sockios.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/bits/sched.h
