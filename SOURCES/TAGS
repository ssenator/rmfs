
/usr/include/fuse/fuse.h,3503
#define _FUSE_H_10,216
#define FUSE_USE_VERSION 23,599
typedef int (*fuse_fill_dir_t)fuse_fill_dir_t58,1432
typedef struct fuse_dirhandle *fuse_dirh_t;fuse_dirh_t62,1577
typedef int (*fuse_dirfil_t)fuse_dirfil_t63,1621
struct fuse_operations 88,2647
	int (*getattr)getattr95,2867
	int (*readlink)readlink105,3240
	int (*getdir)getdir108,3331
	int (*mknod)mknod116,3603
	int (*mkdir)mkdir124,3865
	int (*unlink)unlink127,3926
	int (*rmdir)rmdir130,3985
	int (*symlink)symlink133,4047
	int (*rename)rename136,4116
	int (*link)link139,4199
	int (*chmod)chmod142,4288
	int (*chown)chown145,4372
	int (*truncate)truncate148,4451
	int (*utime)utime154,4599
	int (*open)open173,5321
	int (*read)read186,5795
	int (*write)write197,6133
	int (*statfs)statfs207,6424
	int (*flush)flush232,7464
	int (*release)release248,8058
	int (*fsync)fsync257,8296
	int (*setxattr)setxattr260,8389
	int (*getxattr)getxattr263,8496
	int (*listxattr)listxattr266,8593
	int (*removexattr)removexattr269,8679
	int (*opendir)opendir281,9086
	int (*readdir)readdir304,9949
	int (*releasedir)releasedir311,10104
	int (*fsyncdir)fsyncdir320,10352
	void *(*init)init332,10667
	void (*destroy)destroy341,10817
	int (*access)access354,11137
	int (*create)create368,11501
	int (*ftruncate)ftruncate382,11924
	int (*fgetattr)fgetattr396,12340
	int (*lock)lock430,13740
	int (*utimens)utimens444,14098
	int (*bmap)bmap454,14374
	unsigned int flag_nullpath_ok:flag_nullpath_ok466,14817
	unsigned int flag_nopath:flag_nopath480,15318
	unsigned int flag_utime_omit_ok:flag_utime_omit_ok486,15476
	unsigned int flag_reserved:flag_reserved491,15553
	int (*ioctl)ioctl505,16004
	int (*poll)poll525,16659
	int (*write_buf)write_buf536,17001
	int (*read_buf)read_buf555,17672
	int (*flock)flock577,18432
	int (*fallocate)fallocate589,18838
struct fuse_context 598,19072
	struct fuse *fuse;fuse600,19129
	uid_t uid;603,19189
	gid_t gid;606,19242
	pid_t pid;609,19296
	void *private_data;private_data612,19341
	mode_t umask;615,19428
#define fuse_main(645,20439
struct fuse_module 917,29866
	const char *name;name921,29920
	struct fuse_fs *(*factory)factory937,30392
	struct fuse_module *next;next940,30475
	struct fusemod_so *so;so941,30502
	int ctr;942,30526
#define FUSE_REGISTER_MODULE(959,30857
typedef void (*fuse_processor_t)fuse_processor_t976,31502
#  undef fuse_main1013,32847
#    define fuse_main(1015,32895
#    define fuse_new 1017,32994
#    define fuse_setup 1018,33033
#    define fuse_teardown 1019,33076
#    define fuse_operations 1020,33125
#    define fuse_main(1022,33209
#    define fuse_new 1024,33308
#    define fuse_setup 1025,33347
#    define fuse_teardown 1026,33390
#    define fuse_operations 1027,33439
#    define fuse_file_info 1028,33492
#    define fuse_dirfil_t 1032,33650
#    define __fuse_read_cmd 1033,33697
#    define __fuse_process_cmd 1034,33739
#    define __fuse_loop_mt 1035,33787
#      define fuse_operations 1037,33863
#      define fuse_main 1038,33917
#      define fuse_new 1039,33959
#      define __fuse_setup 1040,33999
#      define __fuse_teardown 1041,34045
#      define __fuse_exited 1042,34098
#      define __fuse_set_getcontext_func 1043,34138
#      define fuse_statfs 1045,34214
#      define fuse_operations 1046,34260
#      define fuse_main 1047,34314
#      define fuse_new 1048,34356
#      define FUSE_DEBUG 1049,34396

/usr/include/selinux/context.h,130
#define _SELINUX_CONTEXT_H_2,28
		void *ptr;ptr13,182
	} context_s_t;14,195
	typedef context_s_t *context_t;context_t16,212

/usr/include/selinux/selinux.h,1449
#define _SELINUX_H_2,20
typedef char *security_context_t;security_context_t17,436
typedef unsigned int access_vector_t;125,4953
typedef unsigned short security_class_t;126,4991
struct av_decision 128,5033
	access_vector_t allowed;129,5054
	access_vector_t decided;130,5080
	access_vector_t auditallow;131,5106
	access_vector_t auditdeny;132,5135
	unsigned int seqno;133,5163
	unsigned int flags;134,5184
#define SELINUX_AVD_FLAGS_PERMISSIVE	138,5248
struct selinux_opt 141,5363
	int type;142,5384
	const char *value;value143,5395
union selinux_callback 147,5445
	(*func_log)func_log154,5642
	int (*func_audit)func_audit157,5800
	int (*func_validate)func_validate160,5960
	int (*func_setenforce)func_setenforce162,6043
	int (*func_policyload)func_policyload164,6131
#define SELINUX_CB_LOG	167,6172
#define SELINUX_CB_AUDIT	168,6198
#define SELINUX_CB_VALIDATE	169,6225
#define SELINUX_CB_SETENFORCE	170,6255
#define SELINUX_CB_POLICYLOAD	171,6287
#define SELINUX_ERROR	177,6512
#define SELINUX_WARNING	178,6544
#define SELINUX_INFO	179,6571
#define SELINUX_AVC	180,6595
#define SELINUX_TRANS_DIR	181,6618
	char *name;name303,11346
	int value;304,11359
} SELboolean;305,11371
struct security_class_mapping 356,13091
	const char *name;name357,13123
	const char *perms[perms358,13142
#define MATCHPATHCON_BASEONLY 427,16318
#define MATCHPATHCON_NOTRANS 428,16398
#define MATCHPATHCON_VALIDATE 429,16476

/usr/include/slurm/slurm.h,84268
#define _SLURM_H45,2512
#define SYSTEM_DIMENSIONS 48,2572
#define HIGHEST_DIMENSIONS 49,2600
typedef struct sockaddr_in slurm_addr_t;66,3080
#  define __slurmdb_cluster_rec_t_defined69,3162
typedef struct slurmdb_cluster_rec slurmdb_cluster_rec_t;70,3204
#  define __slurm_cred_t_defined74,3301
typedef struct slurm_job_credential slurm_cred_t;75,3334
#  define  __switch_jobinfo_t_defined80,3507
typedef struct switch_jobinfo switch_jobinfo_t;81,3545
#  define  __job_resources_t_defined	87,3740
typedef struct job_resources job_resources_t;88,3814
#  define  __select_jobinfo_t_defined	94,4005
typedef struct select_jobinfo select_jobinfo_t;95,4080
typedef struct select_nodeinfo select_nodeinfo_t;96,4148
#  define  __jobacctinfo_t_defined101,4335
typedef struct jobacctinfo jobacctinfo_t;102,4370
#  define  __allocation_msg_thread_t_defined108,4579
typedef struct allocation_msg_thread allocation_msg_thread_t;109,4624
#  define  __sbcast_cred_t_defined113,4726
typedef struct sbcast_cred sbcast_cred_t;114,4761
#define SLURM_VERSION_NUMBER 128,5396
#define SLURM_VERSION_NUM(129,5434
#define SLURM_VERSION_MAJOR(130,5500
#define SLURM_VERSION_MINOR(131,5554
#define SLURM_VERSION_MICRO(132,5608
#define	INFINITE8 140,5989
#define	INFINITE16 141,6015
#define	INFINITE 142,6043
#define	INFINITE64 143,6075
#define NO_VAL8 144,6115
#define NO_VAL16 145,6141
#define NO_VAL 146,6169
#define NO_VAL64 147,6201
#define MAX_TASKS_PER_NODE 148,6241
#define MAX_JOB_ID 149,6272
#define MAX_FED_CLUSTERS 150,6320
#define SLURM_PENDING_STEP 153,6397
#define SLURM_BATCH_SCRIPT 155,6472
#define SLURM_EXTERN_CONT 157,6560
#define DEFAULT_EIO_SHUTDOWN_WAIT 162,6751
#define SLURM_ID_HASH(175,7103
#define SLURM_ID_HASH_JOB_ID(177,7192
#define SLURM_ID_HASH_STEP_ID(178,7271
#define SLURM_ID_HASH_LEGACY(184,7450
enum job_states 190,7710
	JOB_PENDING,191,7728
	JOB_RUNNING,192,7779
	JOB_SUSPENDED,193,7834
	JOB_COMPLETE,194,7898
	JOB_CANCELLED,195,7953
	JOB_FAILED,196,7994
	JOB_TIMEOUT,197,8049
	JOB_NODE_FAIL,198,8104
	JOB_PREEMPTED,199,8154
	JOB_BOOT_FAIL,200,8206
	JOB_DEADLINE,201,8265
	JOB_OOM,202,8310
	JOB_END	203,8359
#define	JOB_STATE_BASE	205,8417
#define	JOB_STATE_FLAGS	206,8485
#define JOB_LAUNCH_FAILED 208,8556
#define JOB_UPDATE_DB 209,8593
#define JOB_REQUEUE 210,8669
#define JOB_REQUEUE_HOLD 211,8744
#define JOB_SPECIAL_EXIT 212,8811
#define	JOB_RESIZING	213,8882
#define	JOB_CONFIGURING	216,9042
#define	JOB_COMPLETING	217,9109
#define JOB_STOPPED 218,9181
#define JOB_RECONFIG_FAIL 220,9287
#define	JOB_POWER_UP_NODE 222,9407
#define JOB_REVOKED 224,9511
#define JOB_REQUEUE_FED 225,9574
#define JOB_RESV_DEL_HOLD 226,9653
#define JOB_SIGNALING 227,9708
#define JOB_STAGE_OUT 228,9778
#define READY_JOB_FATAL	230,9854
#define READY_JOB_ERROR 231,9902
#define READY_NODE_STATE 232,9953
#define READY_JOB_STATE 233,10003
#define MAIL_JOB_BEGIN 235,10064
#define MAIL_JOB_END 236,10127
#define MAIL_JOB_FAIL 237,10188
#define MAIL_JOB_REQUEUE 238,10248
#define MAIL_JOB_TIME100 239,10311
#define MAIL_JOB_TIME90 240,10389
#define MAIL_JOB_TIME80 241,10466
#define MAIL_JOB_TIME50 242,10543
#define MAIL_JOB_STAGE_OUT 243,10620
#define MAIL_ARRAY_TASKS 245,10715
#define ARRAY_TASK_REQUEUED 252,11001
#define NICE_OFFSET 254,11075
enum job_state_reason 259,11312
	WAIT_NO_REASON 261,11372
	WAIT_PRIORITY,262,11426
	WAIT_DEPENDENCY,263,11476
	WAIT_RESOURCES,264,11532
	WAIT_PART_NODE_LIMIT,265,11589
	WAIT_PART_TIME_LIMIT,266,11655
	WAIT_PART_DOWN,267,11721
	WAIT_PART_INACTIVE,268,11773
	WAIT_HELD,269,11832
	WAIT_TIME,270,11880
	WAIT_LICENSES,271,11935
	WAIT_ASSOC_JOB_LIMIT,272,11986
	WAIT_ASSOC_RESOURCE_LIMIT,273,12043
	WAIT_ASSOC_TIME_LIMIT,274,12109
	WAIT_RESERVATION,275,12169
	WAIT_NODE_NOT_AVAIL,276,12220
	WAIT_HELD_USER,277,12281
	WAIT_FRONT_END,278,12325
	FAIL_DOWN_PARTITION,279,12374
	FAIL_DOWN_NODE,280,12428
	FAIL_BAD_CONSTRAINTS,281,12487
	FAIL_SYSTEM,282,12549
	FAIL_LAUNCH,283,12591
	FAIL_EXIT_CODE,284,12633
	FAIL_TIMEOUT,285,12680
	FAIL_INACTIVE_LIMIT,286,12728
	FAIL_ACCOUNT,287,12784
	FAIL_QOS,288,12822
	WAIT_QOS_THRES,289,12853
	WAIT_QOS_JOB_LIMIT,290,12925
	WAIT_QOS_RESOURCE_LIMIT,291,12974
	WAIT_QOS_TIME_LIMIT,292,13032
	WAIT_BLOCK_MAX_ERR,293,13083
	WAIT_BLOCK_D_ACTION,295,13191
	WAIT_CLEANING,297,13283
	WAIT_PROLOG,299,13389
	WAIT_QOS,300,13428
	WAIT_ACCOUNT,301,13463
	WAIT_DEP_INVALID,302,13506
	WAIT_QOS_GRP_CPU,305,13600
	WAIT_QOS_GRP_CPU_MIN,306,13663
	WAIT_QOS_GRP_CPU_RUN_MIN,307,13730
	WAIT_QOS_GRP_JOB,308,13800
	WAIT_QOS_GRP_MEM,309,13857
	WAIT_QOS_GRP_NODE,310,13923
	WAIT_QOS_GRP_SUB_JOB,311,13987
	WAIT_QOS_GRP_WALL,312,14050
	WAIT_QOS_MAX_CPU_PER_JOB,313,14107
	WAIT_QOS_MAX_CPU_MINS_PER_JOB,314,14176
	WAIT_QOS_MAX_NODE_PER_JOB,315,14250
	WAIT_QOS_MAX_WALL_PER_JOB,316,14320
	WAIT_QOS_MAX_CPU_PER_USER,317,14391
	WAIT_QOS_MAX_JOB_PER_USER,318,14461
	WAIT_QOS_MAX_NODE_PER_USER,319,14525
	WAIT_QOS_MAX_SUB_JOB,320,14596
	WAIT_QOS_MIN_CPU,321,14666
	WAIT_ASSOC_GRP_CPU,322,14738
	WAIT_ASSOC_GRP_CPU_MIN,323,14803
	WAIT_ASSOC_GRP_CPU_RUN_MIN,324,14872
	WAIT_ASSOC_GRP_JOB,325,14944
	WAIT_ASSOC_GRP_MEM,326,15003
	WAIT_ASSOC_GRP_NODE,327,15071
	WAIT_ASSOC_GRP_SUB_JOB,328,15137
	WAIT_ASSOC_GRP_WALL,329,15202
	WAIT_ASSOC_MAX_JOBS,330,15261
	WAIT_ASSOC_MAX_CPU_PER_JOB,331,15320
	WAIT_ASSOC_MAX_CPU_MINS_PER_JOB,332,15391
	WAIT_ASSOC_MAX_NODE_PER_JOB,334,15477
	WAIT_ASSOC_MAX_WALL_PER_JOB,335,15549
	WAIT_ASSOC_MAX_SUB_JOB,337,15634
	WAIT_MAX_REQUEUE,339,15707
	WAIT_ARRAY_TASK_LIMIT,340,15769
	WAIT_BURST_BUFFER_RESOURCE,341,15834
	WAIT_BURST_BUFFER_STAGING,342,15893
	FAIL_BURST_BUFFER_OP,343,15956
	WAIT_POWER_NOT_AVAIL,344,16021
	WAIT_POWER_RESERVED,345,16084
	WAIT_ASSOC_GRP_UNK,347,16197
	WAIT_ASSOC_GRP_UNK_MIN,349,16278
	WAIT_ASSOC_GRP_UNK_RUN_MIN,351,16363
	WAIT_ASSOC_MAX_UNK_PER_JOB,353,16451
	WAIT_ASSOC_MAX_UNK_PER_NODE,355,16538
	WAIT_ASSOC_MAX_UNK_MINS_PER_JOB,357,16628
	WAIT_ASSOC_MAX_CPU_PER_NODE,359,16718
	WAIT_ASSOC_GRP_MEM_MIN,360,16791
	WAIT_ASSOC_GRP_MEM_RUN_MIN,362,16875
	WAIT_ASSOC_MAX_MEM_PER_JOB,364,16962
	WAIT_ASSOC_MAX_MEM_PER_NODE,365,17036
	WAIT_ASSOC_MAX_MEM_MINS_PER_JOB,366,17109
	WAIT_ASSOC_GRP_NODE_MIN,368,17198
	WAIT_ASSOC_GRP_NODE_RUN_MIN,369,17268
	WAIT_ASSOC_MAX_NODE_MINS_PER_JOB,370,17341
	WAIT_ASSOC_GRP_ENERGY,372,17430
	WAIT_ASSOC_GRP_ENERGY_MIN,374,17511
	WAIT_ASSOC_GRP_ENERGY_RUN_MIN,376,17596
	WAIT_ASSOC_MAX_ENERGY_PER_JOB,378,17684
	WAIT_ASSOC_MAX_ENERGY_PER_NODE,380,17771
	WAIT_ASSOC_MAX_ENERGY_MINS_PER_JOB,382,17859
	WAIT_ASSOC_GRP_GRES,384,17954
	WAIT_ASSOC_GRP_GRES_MIN,385,18021
	WAIT_ASSOC_GRP_GRES_RUN_MIN,386,18092
	WAIT_ASSOC_MAX_GRES_PER_JOB,387,18166
	WAIT_ASSOC_MAX_GRES_PER_NODE,388,18239
	WAIT_ASSOC_MAX_GRES_MINS_PER_JOB,389,18313
	WAIT_ASSOC_GRP_LIC,391,18402
	WAIT_ASSOC_GRP_LIC_MIN,393,18483
	WAIT_ASSOC_GRP_LIC_RUN_MIN,395,18568
	WAIT_ASSOC_MAX_LIC_PER_JOB,397,18656
	WAIT_ASSOC_MAX_LIC_MINS_PER_JOB,399,18743
	WAIT_ASSOC_GRP_BB,401,18833
	WAIT_ASSOC_GRP_BB_MIN,403,18917
	WAIT_ASSOC_GRP_BB_RUN_MIN,405,19005
	WAIT_ASSOC_MAX_BB_PER_JOB,407,19096
	WAIT_ASSOC_MAX_BB_PER_NODE,409,19186
	WAIT_ASSOC_MAX_BB_MINS_PER_JOB,411,19277
	WAIT_QOS_GRP_UNK,413,19370
	WAIT_QOS_GRP_UNK_MIN,414,19436
	WAIT_QOS_GRP_UNK_RUN_MIN,415,19506
	WAIT_QOS_MAX_UNK_PER_JOB,416,19579
	WAIT_QOS_MAX_UNK_PER_NODE,417,19651
	WAIT_QOS_MAX_UNK_PER_USER,418,19724
	WAIT_QOS_MAX_UNK_MINS_PER_JOB,419,19797
	WAIT_QOS_MIN_UNK,421,19888
	WAIT_QOS_MAX_CPU_PER_NODE,422,19960
	WAIT_QOS_GRP_MEM_MIN,423,20029
	WAIT_QOS_GRP_MEM_RUN_MIN,425,20109
	WAIT_QOS_MAX_MEM_MINS_PER_JOB,427,20192
	WAIT_QOS_MAX_MEM_PER_JOB,429,20282
	WAIT_QOS_MAX_MEM_PER_NODE,430,20350
	WAIT_QOS_MAX_MEM_PER_USER,431,20419
	WAIT_QOS_MIN_MEM,432,20488
	WAIT_QOS_GRP_ENERGY,433,20562
	WAIT_QOS_GRP_ENERGY_MIN,434,20627
	WAIT_QOS_GRP_ENERGY_RUN_MIN,435,20696
	WAIT_QOS_MAX_ENERGY_PER_JOB,436,20769
	WAIT_QOS_MAX_ENERGY_PER_NODE,437,20841
	WAIT_QOS_MAX_ENERGY_PER_USER,438,20914
	WAIT_QOS_MAX_ENERGY_MINS_PER_JOB,439,20987
	WAIT_QOS_MIN_ENERGY,441,21076
	WAIT_QOS_GRP_NODE_MIN,442,21150
	WAIT_QOS_GRP_NODE_RUN_MIN,443,21216
	WAIT_QOS_MAX_NODE_MINS_PER_JOB,444,21285
	WAIT_QOS_MIN_NODE,446,21372
	WAIT_QOS_GRP_GRES,447,21444
	WAIT_QOS_GRP_GRES_MIN,448,21507
	WAIT_QOS_GRP_GRES_RUN_MIN,449,21574
	WAIT_QOS_MAX_GRES_PER_JOB,450,21644
	WAIT_QOS_MAX_GRES_PER_NODE,451,21713
	WAIT_QOS_MAX_GRES_PER_USER,452,21783
	WAIT_QOS_MAX_GRES_MINS_PER_JOB,454,21864
	WAIT_QOS_MIN_GRES,456,21947
	WAIT_QOS_GRP_LIC,457,22018
	WAIT_QOS_GRP_LIC_MIN,458,22084
	WAIT_QOS_GRP_LIC_RUN_MIN,459,22154
	WAIT_QOS_MAX_LIC_PER_JOB,460,22227
	WAIT_QOS_MAX_LIC_PER_USER,461,22299
	WAIT_QOS_MAX_LIC_MINS_PER_JOB,462,22372
	WAIT_QOS_MIN_LIC,464,22463
	WAIT_QOS_GRP_BB,466,22549
	WAIT_QOS_GRP_BB_MIN,468,22631
	WAIT_QOS_GRP_BB_RUN_MIN,470,22717
	WAIT_QOS_MAX_BB_PER_JOB,472,22806
	WAIT_QOS_MAX_BB_PER_NODE,474,22892
	WAIT_QOS_MAX_BB_PER_USER,476,22979
	WAIT_QOS_MAX_BB_MINS_PER_JOB,478,23066
	WAIT_QOS_MIN_BB,480,23160
	FAIL_DEADLINE,482,23249
	WAIT_QOS_MAX_BB_PER_ACCT,484,23330
	WAIT_QOS_MAX_CPU_PER_ACCT,485,23389
	WAIT_QOS_MAX_ENERGY_PER_ACCT,486,23440
	WAIT_QOS_MAX_GRES_PER_ACCT,487,23493
	WAIT_QOS_MAX_NODE_PER_ACCT,488,23544
	WAIT_QOS_MAX_LIC_PER_ACCT,489,23596
	WAIT_QOS_MAX_MEM_PER_ACCT,490,23651
	WAIT_QOS_MAX_UNK_PER_ACCT,491,23704
	WAIT_QOS_MAX_JOB_PER_ACCT,493,23782
	WAIT_QOS_MAX_SUB_JOB_PER_ACCT,494,23849
	WAIT_PART_CONFIG,495,23923
	WAIT_ACCOUNT_POLICY,496,23993
	WAIT_FED_JOB_LOCK,498,24064
	FAIL_OOM,499,24124
	WAIT_PN_MEM_LIMIT,500,24165
	WAIT_ASSOC_GRP_BILLING,503,24263
	WAIT_ASSOC_GRP_BILLING_MIN,504,24324
	WAIT_ASSOC_GRP_BILLING_RUN_MIN,505,24385
	WAIT_ASSOC_MAX_BILLING_PER_JOB,506,24446
	WAIT_ASSOC_MAX_BILLING_PER_NODE,507,24507
	WAIT_ASSOC_MAX_BILLING_MINS_PER_JOB,508,24568
	WAIT_QOS_GRP_BILLING,510,24630
	WAIT_QOS_GRP_BILLING_MIN,511,24691
	WAIT_QOS_GRP_BILLING_RUN_MIN,512,24752
	WAIT_QOS_MAX_BILLING_PER_JOB,513,24813
	WAIT_QOS_MAX_BILLING_PER_NODE,514,24874
	WAIT_QOS_MAX_BILLING_PER_USER,515,24935
	WAIT_QOS_MAX_BILLING_MINS_PER_JOB,516,24996
	WAIT_QOS_MAX_BILLING_PER_ACCT,517,25057
	WAIT_QOS_MIN_BILLING,518,25118
	WAIT_RESV_DELETED	520,25180
enum job_acct_types 523,25239
	JOB_START,524,25261
	JOB_STEP,525,25273
	JOB_SUSPEND,526,25284
	JOB_TERMINATED527,25298
#define PARTITION_SUBMIT	531,25346
#define PARTITION_SCHED 532,25416
#define PARTITION_DOWN	535,25539
#define PARTITION_UP	536,25582
#define PARTITION_DRAIN	537,25641
#define PARTITION_INACTIVE	538,25684
#define PARTITION_ENFORCE_NONE 541,25756
#define PARTITION_ENFORCE_ALL 542,25789
#define PARTITION_ENFORCE_ANY 544,25879
enum auth_plugin_type 548,26015
	AUTH_PLUGIN_NONE	549,26039
	AUTH_PLUGIN_MUNGE	550,26064
enum select_plugin_type 554,26137
	SELECT_PLUGIN_CONS_RES 556,26207
	SELECT_PLUGIN_LINEAR 557,26278
	SELECT_PLUGIN_SERIAL 561,26531
	SELECT_PLUGIN_CRAY_LINEAR 562,26581
	SELECT_PLUGIN_CRAY_CONS_RES 563,26648
	SELECT_PLUGIN_CONS_TRES 564,26717
	SELECT_PLUGIN_CRAY_CONS_TRES 565,26789
enum switch_plugin_type 569,26906
	SWITCH_PLUGIN_NONE 570,26932
	SWITCH_PLUGIN_GENERIC 571,26978
	SWITCH_PLUGIN_CRAY 572,27027
enum select_jobdata_type 576,27121
	SELECT_JOBDATA_PAGG_ID	577,27148
	SELECT_JOBDATA_PTR	578,27217
	SELECT_JOBDATA_CLEANING	579,27282
	SELECT_JOBDATA_NETWORK	581,27383
	SELECT_JOBDATA_RELEASED	582,27446
enum select_nodedata_type 585,27523
	SELECT_NODEDATA_SUBCNT 586,27551
	SELECT_NODEDATA_PTR 587,27603
	SELECT_NODEDATA_MEM_ALLOC 588,27671
	SELECT_NODEDATA_TRES_ALLOC_FMT_STR 589,27726
	SELECT_NODEDATA_TRES_ALLOC_WEIGHTED 591,27813
enum select_print_mode 594,27880
	SELECT_PRINT_HEAD,595,27905
	SELECT_PRINT_DATA,596,27953
	SELECT_PRINT_MIXED,597,27999
	SELECT_PRINT_MIXED_SHORT,598,28046
	SELECT_PRINT_BG_ID,599,28103
	SELECT_PRINT_NODES,600,28151
	SELECT_PRINT_CONNECTION,601,28197
	SELECT_PRINT_ROTATE,602,28259
	SELECT_PRINT_GEOMETRY,603,28312
	SELECT_PRINT_START,604,28361
	SELECT_PRINT_BLRTS_IMAGE,605,28418
	SELECT_PRINT_LINUX_IMAGE,606,28477
	SELECT_PRINT_MLOADER_IMAGE,607,28536
	SELECT_PRINT_RAMDISK_IMAGE,608,28599
	SELECT_PRINT_REBOOT,609,28662
	SELECT_PRINT_RESV_ID,610,28712
	SELECT_PRINT_START_LOC	611,28778
enum select_node_cnt 614,28842
	SELECT_GET_NODE_SCALING,615,28865
	SELECT_GET_NODE_CPU_CNT,616,28937
	SELECT_GET_MP_CPU_CNT,617,29007
	SELECT_APPLY_NODE_MIN_OFFSET,619,29100
	SELECT_APPLY_NODE_MAX_OFFSET,620,29166
	SELECT_SET_NODE_CNT,621,29232
	SELECT_SET_MP_CNT 622,29287
enum acct_gather_profile_info 626,29390
	ACCT_GATHER_PROFILE_DIR,627,29422
	ACCT_GATHER_PROFILE_DEFAULT,628,29493
	ACCT_GATHER_PROFILE_RUNNING 630,29590
#define ACCT_GATHER_PROFILE_NOT_SET 636,29755
#define ACCT_GATHER_PROFILE_NONE 637,29802
#define ACCT_GATHER_PROFILE_ENERGY 638,29849
#define ACCT_GATHER_PROFILE_TASK 639,29896
#define ACCT_GATHER_PROFILE_LUSTRE 640,29943
#define ACCT_GATHER_PROFILE_NETWORK 641,29990
#define ACCT_GATHER_PROFILE_ALL 642,30037
enum jobacct_data_type 645,30110
	JOBACCT_DATA_TOTAL,646,30135
	JOBACCT_DATA_PIPE,647,30185
	JOBACCT_DATA_RUSAGE,648,30239
	JOBACCT_DATA_TOT_VSIZE 650,30347
	JOBACCT_DATA_TOT_RSS 651,30404
enum acct_energy_type 654,30463
	ENERGY_DATA_JOULES_TASK,655,30487
	ENERGY_DATA_STRUCT,656,30513
	ENERGY_DATA_RECONFIG,657,30534
	ENERGY_DATA_PROFILE,658,30557
	ENERGY_DATA_LAST_POLL,659,30579
	ENERGY_DATA_SENSOR_CNT,660,30603
	ENERGY_DATA_NODE_ENERGY,661,30628
	ENERGY_DATA_NODE_ENERGY_UP662,30654
typedef enum task_dist_states 682,31451
	SLURM_DIST_CYCLIC 684,31536
	SLURM_DIST_CYCLIC               = 0x0001,x0001684,31536
	SLURM_DIST_BLOCK 685,31579
	SLURM_DIST_BLOCK                = 0x0002,x0002685,31579
	SLURM_DIST_ARBITRARY 686,31622
	SLURM_DIST_ARBITRARY            = 0x0003,x0003686,31622
	SLURM_DIST_PLANE 687,31665
	SLURM_DIST_PLANE                = 0x0004,x0004687,31665
	SLURM_DIST_CYCLIC_CYCLIC 688,31708
	SLURM_DIST_CYCLIC_CYCLIC        = 0x0011,x0011688,31708
	SLURM_DIST_CYCLIC_BLOCK 689,31751
	SLURM_DIST_CYCLIC_BLOCK         = 0x0021,x0021689,31751
	SLURM_DIST_CYCLIC_CFULL 690,31794
	SLURM_DIST_CYCLIC_CFULL         = 0x0031,x0031690,31794
	SLURM_DIST_BLOCK_CYCLIC 691,31837
	SLURM_DIST_BLOCK_CYCLIC         = 0x0012,x0012691,31837
	SLURM_DIST_BLOCK_BLOCK 692,31880
	SLURM_DIST_BLOCK_BLOCK          = 0x0022,x0022692,31880
	SLURM_DIST_BLOCK_CFULL 693,31923
	SLURM_DIST_BLOCK_CFULL          = 0x0032,x0032693,31923
	SLURM_DIST_CYCLIC_CYCLIC_CYCLIC 694,31966
	SLURM_DIST_CYCLIC_CYCLIC_CYCLIC = 0x0111,x0111694,31966
	SLURM_DIST_CYCLIC_CYCLIC_BLOCK 695,32009
	SLURM_DIST_CYCLIC_CYCLIC_BLOCK  = 0x0211,x0211695,32009
	SLURM_DIST_CYCLIC_CYCLIC_CFULL 696,32052
	SLURM_DIST_CYCLIC_CYCLIC_CFULL  = 0x0311,x0311696,32052
	SLURM_DIST_CYCLIC_BLOCK_CYCLIC 697,32095
	SLURM_DIST_CYCLIC_BLOCK_CYCLIC  = 0x0121,x0121697,32095
	SLURM_DIST_CYCLIC_BLOCK_BLOCK 698,32138
	SLURM_DIST_CYCLIC_BLOCK_BLOCK   = 0x0221,x0221698,32138
	SLURM_DIST_CYCLIC_BLOCK_CFULL 699,32181
	SLURM_DIST_CYCLIC_BLOCK_CFULL   = 0x0321,x0321699,32181
	SLURM_DIST_CYCLIC_CFULL_CYCLIC 700,32224
	SLURM_DIST_CYCLIC_CFULL_CYCLIC  = 0x0131,x0131700,32224
	SLURM_DIST_CYCLIC_CFULL_BLOCK 701,32267
	SLURM_DIST_CYCLIC_CFULL_BLOCK   = 0x0231,x0231701,32267
	SLURM_DIST_CYCLIC_CFULL_CFULL 702,32310
	SLURM_DIST_CYCLIC_CFULL_CFULL   = 0x0331,x0331702,32310
	SLURM_DIST_BLOCK_CYCLIC_CYCLIC 703,32353
	SLURM_DIST_BLOCK_CYCLIC_CYCLIC  = 0x0112,x0112703,32353
	SLURM_DIST_BLOCK_CYCLIC_BLOCK 704,32396
	SLURM_DIST_BLOCK_CYCLIC_BLOCK   = 0x0212,x0212704,32396
	SLURM_DIST_BLOCK_CYCLIC_CFULL 705,32439
	SLURM_DIST_BLOCK_CYCLIC_CFULL   = 0x0312,x0312705,32439
	SLURM_DIST_BLOCK_BLOCK_CYCLIC 706,32482
	SLURM_DIST_BLOCK_BLOCK_CYCLIC   = 0x0122,x0122706,32482
	SLURM_DIST_BLOCK_BLOCK_BLOCK 707,32525
	SLURM_DIST_BLOCK_BLOCK_BLOCK    = 0x0222,x0222707,32525
	SLURM_DIST_BLOCK_BLOCK_CFULL 708,32568
	SLURM_DIST_BLOCK_BLOCK_CFULL    = 0x0322,x0322708,32568
	SLURM_DIST_BLOCK_CFULL_CYCLIC 709,32611
	SLURM_DIST_BLOCK_CFULL_CYCLIC   = 0x0132,x0132709,32611
	SLURM_DIST_BLOCK_CFULL_BLOCK 710,32654
	SLURM_DIST_BLOCK_CFULL_BLOCK    = 0x0232,x0232710,32654
	SLURM_DIST_BLOCK_CFULL_CFULL 711,32697
	SLURM_DIST_BLOCK_CFULL_CFULL    = 0x0332,x0332711,32697
	SLURM_DIST_NODECYCLIC 713,32742
	SLURM_DIST_NODECYCLIC           = 0x0001,x0001713,32742
	SLURM_DIST_NODEBLOCK 714,32785
	SLURM_DIST_NODEBLOCK            = 0x0002,x0002714,32785
	SLURM_DIST_SOCKCYCLIC 715,32829
	SLURM_DIST_SOCKCYCLIC           = 0x0010,x0010715,32829
	SLURM_DIST_SOCKBLOCK 716,32872
	SLURM_DIST_SOCKBLOCK            = 0x0020,x0020716,32872
	SLURM_DIST_SOCKCFULL 717,32915
	SLURM_DIST_SOCKCFULL            = 0x0030,x0030717,32915
	SLURM_DIST_CORECYCLIC 718,32958
	SLURM_DIST_CORECYCLIC           = 0x0100,x0100718,32958
	SLURM_DIST_COREBLOCK 719,33001
	SLURM_DIST_COREBLOCK            = 0x0200,x0200719,33001
	SLURM_DIST_CORECFULL 720,33044
	SLURM_DIST_CORECFULL            = 0x0300,x0300720,33044
	SLURM_DIST_NO_LLLP 722,33088
	SLURM_DIST_NO_LLLP              = 0x1000,x1000722,33088
	SLURM_DIST_UNKNOWN 723,33131
	SLURM_DIST_UNKNOWN              = 0x2000x2000723,33131
} task_dist_states_t;724,33173
#define SLURM_DIST_STATE_BASE	726,33196
#define SLURM_DIST_STATE_FLAGS	727,33236
#define SLURM_DIST_PACK_NODES	728,33277
#define SLURM_DIST_NO_PACK_NODES	729,33317
#define SLURM_DIST_NODEMASK 731,33360
#define SLURM_DIST_SOCKMASK 732,33409
#define SLURM_DIST_COREMASK 733,33458
#define SLURM_DIST_NODESOCKMASK 734,33507
#define OPEN_MODE_APPEND	737,33627
#define OPEN_MODE_TRUNCATE	738,33654
typedef enum cpu_bind_type 740,33684
	CPU_BIND_VERBOSE 742,33802
	CPU_BIND_VERBOSE    = 0x0001,x0001742,33802
	CPU_BIND_TO_THREADS 744,33906
	CPU_BIND_TO_THREADS = 0x0002,x0002744,33906
	CPU_BIND_TO_CORES 745,33952
	CPU_BIND_TO_CORES   = 0x0004,x0004745,33952
	CPU_BIND_TO_SOCKETS 746,33996
	CPU_BIND_TO_SOCKETS = 0x0008,x0008746,33996
	CPU_BIND_TO_LDOMS 747,34042
	CPU_BIND_TO_LDOMS   = 0x0010,x0010747,34042
	CPU_BIND_TO_BOARDS 748,34096
	CPU_BIND_TO_BOARDS  = 0x1000,x1000748,34096
	CPU_BIND_NONE	751,34278
	CPU_BIND_NONE	    = 0x0020,x0020751,34278
	CPU_BIND_RANK 752,34317
	CPU_BIND_RANK  	    = 0x0040,x0040752,34317
	CPU_BIND_MAP	753,34360
	CPU_BIND_MAP	    = 0x0080,x0080753,34360
	CPU_BIND_MASK	754,34421
	CPU_BIND_MASK	    = 0x0100,x0100754,34421
	CPU_BIND_LDRANK 755,34486
	CPU_BIND_LDRANK     = 0x0200,x0200755,34486
	CPU_BIND_LDMAP	756,34545
	CPU_BIND_LDMAP	    = 0x0400,x0400756,34545
	CPU_BIND_LDMASK	757,34618
	CPU_BIND_LDMASK	    = 0x0800,x0800757,34618
	CPU_BIND_ONE_THREAD_PER_CORE 761,34793
	CPU_BIND_ONE_THREAD_PER_CORE = 0x2000,x2000761,34793
	CPU_BIND_CPUSETS 766,34983
	CPU_BIND_CPUSETS   = 0x8000,x8000766,34983
	CPU_AUTO_BIND_TO_THREADS 769,35068
	CPU_AUTO_BIND_TO_THREADS = 0x04000,x04000769,35068
	CPU_AUTO_BIND_TO_CORES 770,35105
	CPU_AUTO_BIND_TO_CORES   = 0x10000,x10000770,35105
	CPU_AUTO_BIND_TO_SOCKETS 771,35142
	CPU_AUTO_BIND_TO_SOCKETS = 0x20000,x20000771,35142
	SLURMD_OFF_SPEC 775,35276
	SLURMD_OFF_SPEC            = 0x40000,x40000775,35276
	CPU_BIND_OFF 776,35315
	CPU_BIND_OFF               = 0x80000	x80000776,35315
} cpu_bind_type_t;777,35375
#define CPU_FREQ_RANGE_FLAG	781,35511
#define CPU_FREQ_LOW	782,35551
#define CPU_FREQ_MEDIUM	783,35585
#define CPU_FREQ_HIGH	784,35622
#define CPU_FREQ_HIGHM1	785,35657
#define CPU_FREQ_CONSERVATIVE	786,35694
#define CPU_FREQ_ONDEMAND	787,35736
#define CPU_FREQ_PERFORMANCE	788,35774
#define CPU_FREQ_POWERSAVE	789,35815
#define CPU_FREQ_USERSPACE	790,35854
#define CPU_FREQ_GOV_MASK 791,35893
#define CPU_FREQ_PERFORMANCE_OLD	793,35992
#define CPU_FREQ_POWERSAVE_OLD	794,36036
#define CPU_FREQ_USERSPACE_OLD	795,36079
#define CPU_FREQ_ONDEMAND_OLD	796,36122
#define CPU_FREQ_CONSERVATIVE_OLD	797,36164
typedef enum mem_bind_type 799,36210
	MEM_BIND_VERBOSE=801,36334
	MEM_BIND_VERBOSE= 0x01,x01801,36334
	MEM_BIND_NONE 804,36499
	MEM_BIND_NONE   = 0x02,x02804,36499
	MEM_BIND_RANK 805,36534
	MEM_BIND_RANK   = 0x04,x04805,36534
	MEM_BIND_MAP 806,36571
	MEM_BIND_MAP    = 0x08,x08806,36571
	MEM_BIND_MASK 807,36630
	MEM_BIND_MASK   = 0x10,x10807,36630
	MEM_BIND_LOCAL 808,36692
	MEM_BIND_LOCAL  = 0x20,x20808,36692
	MEM_BIND_SORT	810,36785
	MEM_BIND_SORT	= 0x40,x40810,36785
	MEM_BIND_PREFER 811,36820
	MEM_BIND_PREFER = 0x80	x80811,36820
} mem_bind_type_t;812,36858
typedef enum accel_bind_type 814,36878
	ACCEL_BIND_VERBOSE 815,36957
	ACCEL_BIND_VERBOSE         = 0x01,x01815,36957
	ACCEL_BIND_CLOSEST_GPU 816,37011
	ACCEL_BIND_CLOSEST_GPU     = 0x02,x02816,37011
	ACCEL_BIND_CLOSEST_MIC 817,37084
	ACCEL_BIND_CLOSEST_MIC     = 0x04,x04817,37084
	ACCEL_BIND_CLOSEST_NIC 818,37153
	ACCEL_BIND_CLOSEST_NIC     = 0x08 x08818,37153
} accel_bind_type_t;819,37222
enum node_states 826,37566
	NODE_STATE_UNKNOWN,827,37585
	NODE_STATE_DOWN,828,37642
	NODE_STATE_IDLE,829,37691
	NODE_STATE_ALLOCATED,830,37747
	NODE_STATE_ERROR,831,37809
	NODE_STATE_MIXED,832,37869
	NODE_STATE_FUTURE,833,37917
	NODE_STATE_END	834,37977
#define NODE_STATE_BASE 836,38023
#define NODE_STATE_FLAGS 837,38064
#define NODE_STATE_NET 838,38105
#define NODE_STATE_RES 842,38261
#define NODE_STATE_UNDRAIN 846,38433
#define NODE_STATE_CLOUD 847,38508
#define NODE_RESUME 848,38577
#define NODE_STATE_DRAIN 852,38774
#define NODE_STATE_COMPLETING 853,38847
#define NODE_STATE_NO_RESPOND 854,38927
#define NODE_STATE_POWER_SAVE 855,38997
#define NODE_STATE_FAIL 856,39074
#define NODE_STATE_POWER_UP 858,39172
#define NODE_STATE_MAINT 860,39272
#define NODE_STATE_REBOOT 861,39351
#define NODE_STATE_CANCEL_REBOOT 862,39420
#define NODE_STATE_POWERING_DOWN 863,39492
#define SLURM_SSL_SIGNATURE_LENGTH 868,39686
#define SHOW_ALL	872,39820
#define SHOW_DETAIL	873,39884
#define SHOW_MIXED	875,40002
#define SHOW_LOCAL	876,40069
#define SHOW_SIBLING	878,40163
#define SHOW_FEDERATION	879,40238
#define SHOW_FUTURE	881,40354
enum ctx_keys 884,40469
	SLURM_STEP_CTX_STEPID,885,40485
	SLURM_STEP_CTX_TASKS,886,40543
	SLURM_STEP_CTX_TID,887,40609
	SLURM_STEP_CTX_RESP,888,40677
	SLURM_STEP_CTX_CRED,889,40742
	SLURM_STEP_CTX_SWITCH_JOB,890,40764
	SLURM_STEP_CTX_NUM_HOSTS,891,40792
	SLURM_STEP_CTX_HOST,892,40819
	SLURM_STEP_CTX_JOBID,893,40841
	SLURM_STEP_CTX_USER_MANAGED_SOCKETS,894,40864
	SLURM_STEP_CTX_NODE_LIST,895,40902
	SLURM_STEP_CTX_TIDS,896,40964
	SLURM_STEP_CTX_DEF_CPU_BIND_TYPE897,41028
#define CR_CPU	903,41266
#define CR_SOCKET	906,41432
#define CR_CORE	909,41571
#define CR_BOARD	912,41705
#define CR_MEMORY	915,41841
#define CR_OTHER_CONS_RES 917,41962
#define CR_ONE_TASK_PER_CORE 925,42293
#define CR_PACK_NODES 929,42439
#define CR_OTHER_CONS_TRES 932,42524
#define CR_CORE_DEFAULT_DIST_BLOCK 936,42730
#define CR_LLN	937,42772
#define MEM_PER_CPU 939,42835
#define SHARED_FORCE 940,42875
#define PRIVATE_DATA_JOBS	942,42904
#define PRIVATE_DATA_NODES	943,42970
#define PRIVATE_DATA_PARTITIONS	944,43033
#define PRIVATE_DATA_USAGE	945,43106
#define PRIVATE_DATA_USERS	946,43181
#define PRIVATE_DATA_ACCOUNTS	947,43255
#define PRIVATE_DATA_RESERVATIONS 948,43334
#define PRIVATE_CLOUD_NODES	949,43409
#define PRIVATE_DATA_EVENTS	950,43485
#define PRIORITY_RESET_NONE	952,43548
#define PRIORITY_RESET_NOW	953,43601
#define PRIORITY_RESET_DAILY	954,43677
#define PRIORITY_RESET_WEEKLY	955,43743
#define PRIORITY_RESET_MONTHLY	956,43815
#define PRIORITY_RESET_QUARTERLY 957,43891
#define PRIORITY_RESET_YEARLY	958,43971
#define PROP_PRIO_OFF	960,44046
#define PROP_PRIO_ON	961,44115
#define PROP_PRIO_NICER	962,44176
#define PRIORITY_FLAGS_ACCRUE_ALWAYS	965,44291
#define PRIORITY_FLAGS_MAX_TRES 969,44463
#define PRIORITY_FLAGS_SIZE_RELATIVE	973,44629
#define PRIORITY_FLAGS_DEPTH_OBLIVIOUS	976,44762
#define PRIORITY_FLAGS_CALCULATE_RUNNING 980,44927
#define PRIORITY_FLAGS_FAIR_TREE	983,45077
#define PRIORITY_FLAGS_INCR_ONLY	985,45181
#define PRIORITY_FLAGS_NO_NORMAL_ASSOC	989,45308
#define PRIORITY_FLAGS_NO_NORMAL_PART	990,45358
#define PRIORITY_FLAGS_NO_NORMAL_QOS	991,45407
#define PRIORITY_FLAGS_NO_NORMAL_TRES	992,45455
#define KILL_INV_DEP 995,45570
#define NO_KILL_INV_DEP 996,45645
#define HAS_STATE_DIR 997,45726
#define BACKFILL_TEST 998,45807
#define GRES_ENFORCE_BIND 999,45877
#define TEST_NOW_ONLY 1000,45946
#define NODE_MEM_CALC 1001,46022
#define NODE_REBOOT 1002,46099
#define SPREAD_JOB 1003,46167
#define USE_MIN_NODES 1004,46244
#define JOB_KILL_HURRY 1005,46314
#define TRES_STR_CALC 1006,46387
#define SIB_JOB_FLUSH 1008,46493
#define JOB_PACK_FLAG 1009,46569
#define JOB_NTASKS_SET 1010,46647
#define JOB_CPUS_SET 1011,46715
#define BF_WHOLE_NODE_TEST 1012,46791
#define TOP_PRIO_TMP 1013,46861
#define JOB_ACCRUE_OVER 1015,46959
#define GRES_DISABLE_BIND 1017,47055
#define JOB_WAS_RUNNING 1018,47124
#define RESET_ACCRUE_TIME 1019,47185
#define INVALID_DEPEND 1020,47259
#define JOB_MEM_SET 1021,47336
#define JOB_RESIZED 1022,47414
#define USE_DEFAULT_ACCT 1023,47490
#define USE_DEFAULT_PART 1024,47567
#define USE_DEFAULT_QOS 1025,47646
#define USE_DEFAULT_WCKEY 1026,47721
#define JOB_DEPENDENT 1027,47798
#define X11_FORWARD_ALL	1029,47875
#define X11_FORWARD_BATCH	1030,47944
#define X11_FORWARD_FIRST	1031,48004
#define X11_FORWARD_LAST	1032,48063
#  define __hostlist_t_defined1044,48520
typedef struct hostlist * hostlist_t;1045,48551
#  define __list_datatypes_defined1179,52804
typedef struct xlist * List;1180,52839
typedef struct listIterator * ListIterator;1185,52903
typedef void (*ListDelF)ListDelF1190,52991
typedef int (*ListCmpF)ListCmpF1197,53233
typedef int (*ListFindF)ListFindF1204,53435
typedef int (*ListForF)ListForF1210,53595
#  define __bitstr_datatypes_defined1315,56890
typedef int64_t bitstr_t;1317,56928
#define BITSTR_SHIFT 1318,56954
typedef bitstr_t bitoff_t;1320,56998
#define ALLOC_SID_ADMIN_HOLD	1324,57034
#define ALLOC_SID_USER_HOLD	1325,57095
#define JOB_SHARED_NONE 1327,57155
#define JOB_SHARED_OK 1328,57194
#define JOB_SHARED_USER 1329,57233
#define JOB_SHARED_MCS 1330,57272
#define SLURM_POWER_FLAGS_LEVEL 1332,57312
typedef struct dynamic_plugin_data 1337,57587
	void *data;data1338,57624
	uint32_t plugin_id;1339,57637
} dynamic_plugin_data_t;1340,57658
typedef struct acct_gather_energy 1342,57684
	uint32_t ave_watts;1343,57720
	uint64_t base_consumed_energy;1344,57789
	uint64_t consumed_energy;1345,57821
	uint32_t current_watts;1346,57895
	uint64_t previous_consumed_energy;1347,57968
	time_t poll_time;1348,58004
} acct_gather_energy_t;1349,58073
typedef struct ext_sensors_data 1351,58098
	uint64_t consumed_energy;1352,58132
	uint32_t temperature;1353,58201
	time_t   energy_update_time;1354,58259
	uint32_t current_watts;1355,58332
} ext_sensors_data_t;1356,58404
typedef struct power_mgmt_data 1358,58427
	uint32_t cap_watts;1359,58460
	uint32_t current_watts;1360,58529
	uint64_t joule_counter;1361,58596
	uint32_t new_cap_watts;1362,58671
	uint32_t max_watts;1363,58748
	uint32_t min_watts;1364,58819
	time_t new_job_time;1365,58890
	uint16_t state;1367,59003
	uint64_t time_usec;1368,59051
} power_mgmt_data_t;1370,59139
#define CORE_SPEC_THREAD 1372,59161
typedef struct job_descriptor 1379,59327
	char *account;account1380,59407
	char *acctg_freq;acctg_freq1381,59458
	char *admin_comment;admin_comment1382,59522
	char *alloc_node;alloc_node1383,59598
	uint16_t alloc_resp_port;1386,59741
	uint32_t alloc_sid;1387,59814
	uint32_t argc;1392,60034
	char **argv;argv1393,60091
	char *array_inx;array_inx1394,60136
	void *array_bitmap;array_bitmap1395,60183
	char *batch_features;batch_features1396,60233
	time_t begin_time;1397,60304
	uint32_t bitflags;1398,60363
	char *burst_buffer;burst_buffer1399,60403
	uint16_t ckpt_interval;1400,60458
	char *ckpt_dir;ckpt_dir1401,60522
	char *clusters;clusters1402,60584
	char *cluster_features;cluster_features1403,60650
	char *comment;comment1405,60741
	uint16_t contiguous;1406,60782
	uint16_t core_spec;1408,60875
	char *cpu_bind;cpu_bind1410,60961
	uint16_t cpu_bind_type;1414,61136
	uint32_t cpu_freq_min;1418,61309
	uint32_t cpu_freq_max;1419,61363
	uint32_t cpu_freq_gov;1420,61417
	char *cpus_per_tres;cpus_per_tres1421,61471
	time_t deadline;1422,61541
	uint32_t delay_boot;1423,61574
	char *dependency;dependency1424,61636
	time_t end_time;1425,61703
	char **environment;environment1428,61847
	uint32_t env_size;1430,61951
	char *extra;extra1431,62006
	char *exc_nodes;exc_nodes1432,62034
	char *features;features1434,62140
	uint64_t fed_siblings_active;1436,62216
	uint64_t fed_siblings_viable;1437,62286
	uint32_t group_id;1438,62356
	uint16_t immediate;1439,62415
	uint32_t job_id;1441,62528
	char * job_id_str;1442,62581
	uint16_t kill_on_node_fail;1443,62647
	char *licenses;licenses1445,62746
	uint16_t mail_type;1446,62799
	char *mail_user;mail_user1447,62858
	char *mcs_label;mcs_label1448,62911
	char *mem_bind;mem_bind1449,62966
	uint16_t mem_bind_type;1450,63019
	char *mem_per_tres;mem_per_tres1451,63070
	char *name;name1452,63139
	char *network;network1453,63187
	uint32_t nice;1454,63227
	uint32_t num_tasks;1456,63309
	uint8_t open_mode;1458,63389
	char *origin_cluster;origin_cluster1460,63476
	uint16_t other_port;1461,63542
	uint8_t overcommit;1462,63611
	uint32_t pack_job_offset;1463,63679
	char *partition;partition1464,63727
	uint16_t plane_size;1466,63811
	uint8_t power_flags;1468,63891
	uint32_t priority;1470,63973
	uint32_t profile;1473,64105
	char *qos;qos1474,64172
	uint16_t reboot;1475,64210
	char *resp_host;resp_host1476,64267
	uint16_t restart_cnt;1477,64314
	char *req_nodes;req_nodes1478,64365
	uint16_t requeue;1480,64448
	char *reservation;reservation1481,64510
	char *script;script1482,64563
	void *script_buf;script_buf1483,64621
	uint16_t shared;1484,64669
	uint32_t site_factor;1490,64967
	char **spank_job_env;spank_job_env1491,65027
	uint32_t spank_job_env_size;1493,65139
	uint32_t task_dist;1494,65202
	uint32_t time_limit;1495,65254
	uint32_t time_min;1497,65345
	char *tres_bind;tres_bind1499,65429
	char *tres_freq;tres_freq1500,65485
	char *tres_per_job;tres_per_job1501,65535
	char *tres_per_node;tres_per_node1502,65604
	char *tres_per_socket;tres_per_socket1503,65674
	char *tres_per_task;tres_per_task1504,65746
	uint32_t user_id;1505,65816
	uint16_t wait_all_nodes;1507,65928
	uint16_t warn_flags;1510,66087
	uint16_t warn_signal;1512,66173
	uint16_t warn_time;1513,66243
	char *work_dir;work_dir1514,66311
	uint16_t cpus_per_task;1517,66390
	uint32_t min_cpus;1519,66472
	uint32_t max_cpus;1521,66554
	uint32_t min_nodes;1523,66636
	uint32_t max_nodes;1525,66721
	uint16_t boards_per_node;1527,66804
	uint16_t sockets_per_board;1528,66870
	uint16_t sockets_per_node;1529,66938
	uint16_t cores_per_socket;1530,67004
	uint16_t threads_per_core;1531,67070
	uint16_t ntasks_per_node;1532,67136
	uint16_t ntasks_per_socket;1533,67207
	uint16_t ntasks_per_core;1535,67292
	uint16_t ntasks_per_board;1536,67363
	uint16_t pn_min_cpus;1537,67436
	uint64_t pn_min_memory;1538,67503
	uint32_t pn_min_tmp_disk;1541,67639
	uint32_t req_switch;1544,67717
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo1545,67775
	char *std_err;std_err1547,67873
	char *std_in;std_in1548,67915
	char *std_out;std_out1549,67955
	uint64_t *tres_req_cnt;tres_req_cnt1550,67997
	uint32_t wait4switch;1552,68080
	char *wckey;wckey1553,68153
	uint16_t x11;1554,68198
	char *x11_magic_cookie;x11_magic_cookie1555,68232
	char *x11_target;x11_target1556,68301
	uint16_t x11_target_port;1557,68371
} job_desc_msg_t;1558,68447
typedef struct job_info 1560,68466
	char *account;account1561,68492
	time_t accrue_time;1562,68543
	char *admin_comment;admin_comment1563,68603
	char    *alloc_node;alloc_node1564,68665
	uint32_t alloc_sid;1565,68726
	void *array_bitmap;array_bitmap1566,68785
	uint32_t array_job_id;1567,68832
	uint32_t array_task_id;1568,68896
	uint32_t array_max_tasks;1569,68950
	char *array_task_str;array_task_str1570,69015
	uint32_t assoc_id;1571,69089
	char *batch_features;batch_features1572,69138
	uint16_t batch_flag;1573,69209
	char *batch_host;batch_host1574,69272
	uint32_t bitflags;1575,69331
	uint16_t boards_per_node;1576,69380
	char *burst_buffer;burst_buffer1577,69448
	char *burst_buffer_state;burst_buffer_state1578,69503
	char *cluster;cluster1579,69560
	char *cluster_features;cluster_features1580,69618
	char *command;command1582,69706
	char *comment;comment1584,69820
	uint16_t contiguous;1585,69861
	uint16_t core_spec;1586,69924
	uint16_t cores_per_socket;1587,69974
	double billable_tres;1588,70042
	uint16_t cpus_per_task;1589,70112
	uint32_t cpu_freq_min;1591,70194
	uint32_t cpu_freq_max;1592,70248
	uint32_t cpu_freq_gov;1593,70302
	char *cpus_per_tres;cpus_per_tres1594,70356
	time_t deadline;1595,70426
	uint32_t delay_boot;1596,70459
	char *dependency;dependency1597,70521
	uint32_t derived_ec;1598,70588
	time_t eligible_time;1599,70651
	time_t end_time;1600,70713
	char *exc_nodes;exc_nodes1601,70777
	int32_t *exc_node_inx;exc_node_inx1602,70840
	uint32_t exit_code;1605,70978
	char *features;features1606,71047
	char *fed_origin_str;fed_origin_str1607,71113
	uint64_t fed_siblings_active;1608,71164
	char *fed_siblings_active_str;fed_siblings_active_str1609,71235
	uint64_t fed_siblings_viable;1610,71304
	char *fed_siblings_viable_str;fed_siblings_viable_str1611,71375
	uint32_t gres_detail_cnt;1612,71444
	char **gres_detail_str;gres_detail_str1614,71541
	uint32_t group_id;1615,71615
	uint32_t job_id;1616,71664
	job_resources_t *job_resrcs;job_resrcs1617,71695
	uint32_t job_state;1618,71763
	time_t last_sched_eval;1619,71828
	char *licenses;licenses1620,71902
	uint32_t max_cpus;1621,71955
	uint32_t max_nodes;1622,72018
	char *mcs_label;mcs_label1623,72083
	char *mem_per_tres;mem_per_tres1624,72138
	char *name;name1625,72207
	char *network;network1626,72243
	char *nodes;nodes1627,72288
	uint32_t nice;1628,72340
	int32_t *node_inx;node_inx1629,72391
	uint16_t ntasks_per_core;1632,72527
	uint16_t ntasks_per_node;1633,72598
	uint16_t ntasks_per_socket;1634,72669
	uint16_t ntasks_per_board;1635,72743
	uint32_t num_cpus;1636,72817
	uint32_t num_nodes;1637,72882
	uint32_t num_tasks;1638,72949
	uint32_t pack_job_id;1639,72997
	char *pack_job_id_set;pack_job_id_set1640,73057
	uint32_t pack_job_offset;1641,73114
	char *partition;partition1642,73162
	uint64_t pn_min_memory;1643,73213
	uint16_t pn_min_cpus;1644,73284
	uint32_t pn_min_tmp_disk;1645,73350
	uint8_t power_flags;1646,73420
	time_t preempt_time;1648,73502
	time_t preemptable_time;1649,73553
	time_t pre_sus_time;1651,73639
	uint32_t priority;1652,73702
	uint32_t profile;1654,73803
	char *qos;qos1655,73870
	uint8_t reboot;1656,73908
	char *req_nodes;req_nodes1657,73967
	int32_t *req_node_inx;req_node_inx1658,74030
	uint32_t req_switch;1661,74168
	uint16_t requeue;1662,74226
	time_t resize_time;1663,74294
	uint16_t restart_cnt;1664,74348
	char *resv_name;resv_name1665,74399
	char *sched_nodes;sched_nodes1666,74440
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo1667,74509
	uint16_t shared;1671,74636
	uint16_t show_flags;1672,74701
	uint32_t site_factor;1673,74764
	uint16_t sockets_per_board;1674,74824
	uint16_t sockets_per_node;1675,74892
	time_t start_time;1676,74960
	uint16_t start_protocol_ver;1677,75028
	char *state_desc;state_desc1680,75182
	uint16_t state_reason;1681,75241
	char *std_err;std_err1683,75348
	char *std_in;std_in1684,75401
	char *std_out;std_out1685,75452
	time_t submit_time;1686,75505
	time_t suspend_time;1687,75555
	char *system_comment;system_comment1688,75618
	uint32_t time_limit;1689,75677
	uint32_t time_min;1690,75745
	uint16_t threads_per_core;1691,75811
	char *tres_bind;tres_bind1692,75879
	char *tres_freq;tres_freq1693,75935
	char *tres_per_job;tres_per_job1694,75985
	char *tres_per_node;tres_per_node1695,76054
	char *tres_per_socket;tres_per_socket1696,76124
	char *tres_per_task;tres_per_task1697,76196
	char *tres_req_str;tres_req_str1698,76266
	char *tres_alloc_str;tres_alloc_str1699,76319
	uint32_t user_id;1700,76371
	char *user_name;user_name1701,76417
	uint32_t wait4switch;1704,76546
	char *wckey;wckey1705,76619
	char *work_dir;work_dir1706,76664
} slurm_job_info_t;1707,76718
typedef struct priority_factors_object 1709,76739
	char *cluster_name;cluster_name1710,76780
	uint32_t job_id;1711,76843
	char *partition;partition1712,76861
	uint32_t user_id;1713,76879
	double	 priority_age;1715,76899
	double	 priority_assoc;1716,76922
	double	 priority_fs;1717,76947
	double	 priority_js;1718,76969
	double	 priority_part;1719,76991
	double	 priority_qos;1720,77015
	uint32_t priority_site;1721,77038
	double   *priority_tres;priority_tres1723,77064
	uint32_t  tres_cnt;1724,77133
	char    **tres_names;tres_names1725,77202
	double   *tres_weights;tres_weights1726,77264
	uint32_t nice;1728,77335
} priority_factors_object_t;1729,77351
typedef struct priority_factors_response_msg 1731,77381
	List	 priority_factors_list;1732,77428
} priority_factors_response_msg_t;1733,77495
typedef slurm_job_info_t job_info_t;1744,78026
typedef struct job_info_msg 1747,78071
	time_t last_update;1748,78101
	uint32_t record_count;1749,78148
	slurm_job_info_t *job_array;job_array1750,78196
} job_info_msg_t;1751,78248
typedef struct step_update_request_msg 1753,78267
	time_t end_time;1754,78308
	uint32_t exit_code;1755,78346
	uint32_t job_id;1756,78415
	jobacctinfo_t *jobacct;jobacct1757,78433
	char *name;name1758,78458
	time_t start_time;1759,78499
	uint32_t step_id;1760,78541
	uint32_t time_limit;1761,78560
} step_update_request_msg_t;1762,78599
	char *node_list;node_list1765,78646
	uint16_t *cpus_per_node;cpus_per_node1766,78708
	uint32_t *cpu_count_reps;cpu_count_reps1767,78754
	uint32_t num_hosts;1768,78822
	uint32_t num_tasks;1769,78873
	uint16_t *cpus_per_task;cpus_per_task1770,78947
	uint32_t *cpus_task_reps;cpus_task_reps1771,79003
	uint32_t task_dist;1772,79076
	uint16_t plane_size;1773,79137
} slurm_step_layout_req_t;1774,79211
typedef struct slurm_step_layout 1776,79239
	char *front_end;front_end1777,79274
	uint32_t node_cnt;1780,79399
	char *node_list;node_list1781,79436
	uint16_t plane_size;1782,79489
	uint16_t start_protocol_ver;1784,79569
	uint16_t *tasks;tasks1789,79846
	uint32_t task_cnt;1790,79864
	uint32_t task_dist;1791,79924
	uint32_t **tids;tids1795,80129
} slurm_step_layout_t;1796,80180
typedef struct slurm_step_io_fds 1798,80204
		int fd;1800,80249
		uint32_t taskid;1801,80259
		uint32_t nodeid;1802,80278
	} input,1803,80297
	} input, out,1803,80297
	} input, out, err;1803,80297
} slurm_step_io_fds_t;1804,80317
#define SLURM_STEP_IO_FDS_INITIALIZER 1806,80341
typedef struct launch_tasks_response_msg 1810,80490
	uint32_t job_id;1811,80533
	uint32_t step_id;1812,80551
	uint32_t return_code;1813,80570
	char    *node_name;node_name1814,80593
	uint32_t srun_node_id;1815,80614
	uint32_t count_of_pids;1816,80638
	uint32_t *local_pids;local_pids1817,80663
	uint32_t *task_ids;task_ids1818,80686
} launch_tasks_response_msg_t;1819,80743
typedef struct task_ext_msg 1821,80775
	uint32_t num_tasks;1822,80805
	uint32_t *task_id_list;task_id_list1823,80826
	uint32_t return_code;1824,80851
	uint32_t job_id;1825,80874
	uint32_t step_id;1826,80892
} task_exit_msg_t;1827,80911
	uint32_t job_id;1830,80948
	uint32_t flags;1831,80985
	uint16_t port;1832,81015
	char *target;target1833,81054
} net_forward_msg_t;1834,81103
typedef struct srun_ping_msg 1836,81125
	uint32_t job_id;1837,81156
	uint32_t step_id;1838,81193
} srun_ping_msg_t;1839,81236
typedef struct srun_job_complete_msg 1841,81256
	uint32_t job_id;1842,81295
	uint32_t step_id;1843,81339
} srun_job_complete_msg_t;1844,81388
typedef struct srun_timeout_msg 1846,81416
	uint32_t job_id;1847,81450
	uint32_t step_id;1848,81487
	time_t   timeout;1849,81530
} srun_timeout_msg_t;1850,81587
typedef struct srun_user_msg 1852,81610
	uint32_t job_id;1853,81641
	char *msg;msg1854,81678
} srun_user_msg_t;1855,81720
typedef struct srun_node_fail_msg 1857,81740
	uint32_t job_id;1858,81776
	char *nodelist;nodelist1859,81813
	uint32_t step_id;1860,81860
} srun_node_fail_msg_t;1861,81903
typedef struct srun_step_missing_msg 1863,81928
	uint32_t job_id;1864,81967
	char *nodelist;nodelist1865,82004
	uint32_t step_id;1866,82062
} srun_step_missing_msg_t;1867,82105
enum suspend_opts 1869,82133
	SUSPEND_JOB,1870,82153
	RESUME_JOB	1871,82192
typedef struct suspend_msg 1875,82294
	uint16_t op;1876,82323
	uint32_t job_id;1877,82385
	char *   job_id_str;1878,82431
} suspend_msg_t;1879,82481
typedef struct top_job_msg 1882,82561
	uint16_t op;1883,82590
	uint32_t job_id;1884,82652
	char *   job_id_str;1885,82698
} top_job_msg_t;1886,82748
	uint16_t ckpt_interval;1889,82783
	uint32_t cpu_count;1890,82845
	uint32_t cpu_freq_min;1891,82902
	uint32_t cpu_freq_max;1892,82955
	uint32_t cpu_freq_gov;1893,83008
	char *cpus_per_tres;cpus_per_tres1894,83061
	uint16_t exclusive;1895,83131
	char *features;features1896,83196
	uint16_t immediate;1897,83257
	uint32_t job_id;1899,83370
	uint64_t pn_min_memory;1900,83401
	char *ckpt_dir;ckpt_dir1903,83539
	char *name;name1904,83605
	char *network;network1905,83646
	uint32_t profile;1906,83686
	uint8_t no_kill;1907,83753
	uint32_t min_nodes;1908,83806
	uint32_t max_nodes;1910,83891
	char *mem_per_tres;mem_per_tres1912,83974
	char *node_list;node_list1913,84043
	bool overcommit;1914,84090
	uint16_t plane_size;1918,84287
	uint16_t relative;1920,84367
	uint16_t resv_port_cnt;1921,84431
	uint32_t step_id;1922,84483
	uint32_t task_count;1923,84534
	uint32_t task_dist;1924,84587
	uint32_t time_limit;1926,84676
	char *tres_bind;tres_bind1927,84720
	char *tres_freq;tres_freq1928,84776
	char *tres_per_step;tres_per_step1929,84826
	char *tres_per_node;tres_per_node1930,84896
	char *tres_per_socket;tres_per_socket1931,84966
	char *tres_per_task;tres_per_task1932,85038
	uid_t uid;1933,85108
	uint16_t verbose_level;1934,85135
} slurm_step_ctx_params_t;1936,85220
	char *alias_list;alias_list1939,85265
	uint32_t argc;1940,85325
	char **argv;argv1941,85341
	uint32_t envc;1942,85355
	char **env;env1943,85371
	char *cwd;cwd1944,85384
	bool user_managed_io;1945,85396
	uint32_t msg_timeout;1946,85419
	uint16_t ntasks_per_board;1947,85480
	uint16_t ntasks_per_core;1948,85553
	uint16_t ntasks_per_socket;1949,85625
	bool buffered_stdio;1953,85764
	bool labelio;1954,85786
	char *remote_output_filename;remote_output_filename1955,85801
	char *remote_error_filename;remote_error_filename1956,85832
	char *remote_input_filename;remote_input_filename1957,85862
	slurm_step_io_fds_t local_fds;1958,85892
	uint32_t gid;1961,85978
	bool multi_prog;1962,85993
	bool no_alloc;1963,86011
	uint32_t slurmd_debug;1964,86027
	uint32_t node_offset;1965,86084
	uint32_t pack_jobid;1966,86144
	uint32_t pack_nnodes;1967,86194
	uint32_t pack_ntasks;1968,86260
	uint32_t pack_step_cnt;1969,86326
	uint16_t *pack_task_cnts;pack_task_cnts1970,86394
	uint32_t **pack_tids;pack_tids1971,86468
	uint32_t *pack_tid_offsets;pack_tid_offsets1972,86531
	uint32_t pack_offset;1973,86605
	uint32_t pack_task_offset;1974,86660
	char *pack_node_list;pack_node_list1975,86725
	bool parallel_debug;1976,86774
	uint32_t profile;1977,86796
	char *task_prolog;task_prolog1978,86863
	char *task_epilog;task_epilog1979,86883
	uint16_t cpu_bind_type;1980,86903
	char *cpu_bind;cpu_bind1981,86954
	uint32_t cpu_freq_min;1982,86971
	uint32_t cpu_freq_max;1983,87024
	uint32_t cpu_freq_gov;1984,87077
	uint16_t mem_bind_type;1985,87130
	char *mem_bind;mem_bind1986,87181
	uint16_t accel_bind_type;1987,87198
	uint16_t max_sockets;1989,87246
	uint16_t max_cores;1990,87269
	uint16_t max_threads;1991,87290
	uint16_t cpus_per_task;1992,87313
	uint32_t task_dist;1993,87338
	char *partition;partition1994,87359
	bool preserve_env;1995,87377
	char *mpi_plugin_name;mpi_plugin_name1997,87398
	uint8_t open_mode;1998,87422
	char *acctg_freq;acctg_freq1999,87442
	bool pty;2000,87461
	char *ckpt_dir;ckpt_dir2001,87472
	char *restart_dir;restart_dir2002,87489
	char **spank_job_env;spank_job_env2003,87509
	uint32_t spank_job_env_size;2005,87621
	char *tres_bind;tres_bind2006,87684
	char *tres_freq;tres_freq2007,87702
} slurm_step_launch_params_t;2008,87720
	void (*step_complete)step_complete2011,87768
	void (*step_signal)step_signal2012,87819
	void (*step_timeout)step_timeout2013,87846
	void (*task_start)task_start2014,87891
	void (*task_finish)task_finish2015,87943
} slurm_step_launch_callbacks_t;2016,87984
	void (*ping)ping2019,88035
	void (*job_complete)job_complete2020,88069
	void (*timeout)timeout2021,88119
	void (*user_msg)user_msg2022,88159
	void (*node_fail)node_fail2023,88197
	void (*job_suspend)job_suspend2024,88241
} slurm_allocation_callbacks_t;2025,88280
	void (*acct_full)acct_full2028,88330
	void (*dbd_fail)dbd_fail2029,88352
	void (*dbd_resumed)dbd_resumed2030,88373
	void (*db_fail)db_fail2031,88397
	void (*db_resumed)db_resumed2032,88417
} slurm_trigger_callbacks_t;2033,88440
	uint32_t array_job_id;2036,88487
	uint32_t array_task_id;2037,88551
	char *ckpt_dir;ckpt_dir2038,88605
	uint16_t ckpt_interval;2039,88666
	char *cluster;cluster2040,88728
	uint32_t cpu_freq_min;2041,88788
	uint32_t cpu_freq_max;2042,88841
	uint32_t cpu_freq_gov;2043,88894
	char *cpus_per_tres;cpus_per_tres2044,88947
	uint32_t job_id;2045,89013
	char *mem_per_tres;mem_per_tres2046,89044
	char *name;name2047,89109
	char *network;network2048,89146
	char *nodes;nodes2049,89196
	int32_t *node_inx;node_inx2050,89253
	uint32_t num_cpus;2053,89389
	uint32_t num_tasks;2054,89452
	char *partition;partition2055,89495
	char *resv_ports;resv_ports2056,89546
	time_t run_time;2057,89595
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo2058,89660
	char *srun_host;srun_host2062,89787
	uint32_t srun_pid;2063,89832
	time_t start_time;2064,89878
	uint16_t start_protocol_ver;2065,89920
	uint32_t state;2068,90074
	uint32_t step_id;2069,90137
	uint32_t task_dist;2070,90170
	uint32_t time_limit;2071,90222
	char *tres_alloc_str;tres_alloc_str2072,90266
	char *tres_bind;tres_bind2073,90318
	char *tres_freq;tres_freq2074,90374
	char *tres_per_step;tres_per_step2075,90424
	char *tres_per_node;tres_per_node2076,90490
	char *tres_per_socket;tres_per_socket2077,90556
	char *tres_per_task;tres_per_task2078,90624
	uint32_t user_id;2079,90690
} job_step_info_t;2080,90736
typedef struct job_step_info_response_msg 2082,90756
	time_t last_update;2083,90800
	uint32_t job_step_count;2084,90848
	job_step_info_t *job_steps;job_steps2085,90898
} job_step_info_response_msg_t;2086,90954
   	char *node_name;node_name2089,91004
	uint32_t *pid;pid2090,91025
	uint32_t pid_cnt;2091,91041
} job_step_pids_t;2092,91060
	uint32_t job_id;2095,91097
	List pid_list;2096,91115
	uint32_t step_id;2097,91165
} job_step_pids_response_msg_t;2098,91184
	jobacctinfo_t *jobacct;jobacct2101,91234
	uint32_t num_tasks;2102,91259
   	uint32_t return_code;2103,91280
	job_step_pids_t *step_pids;step_pids2104,91306
} job_step_stat_t;2105,91335
	uint32_t job_id;2108,91372
	List stats_list;2109,91403
	uint32_t step_id;2110,91455
} job_step_stat_response_msg_t;2111,91474
typedef struct node_info 2113,91507
	char *arch;arch2114,91534
	uint16_t boards;2115,91576
	time_t boot_time;2116,91640
	char *cluster_name;cluster_name2117,91683
	uint16_t cores;2118,91746
	uint16_t core_spec_cnt;2119,91810
	uint32_t cpu_bind;2120,91877
	uint32_t cpu_load;2121,91924
	uint64_t free_mem;2122,91965
	uint16_t cpus;2123,92010
	char *cpu_spec_list;cpu_spec_list2125,92085
	acct_gather_energy_t *energy;energy2126,92137
	ext_sensors_data_t *ext_sensors;ext_sensors2127,92187
	power_mgmt_data_t *power;power2128,92248
	char *features;features2129,92310
	char *features_act;features_act2130,92370
	char *gres;gres2132,92473
	char *gres_drain;gres_drain2133,92528
	char *gres_used;gres_used2134,92574
	char *mcs_label;mcs_label2135,92626
	uint64_t mem_spec_limit;2136,92681
	char *name;name2137,92748
	uint32_t next_state;2138,92787
	char *node_addr;node_addr2139,92853
	char *node_hostname;node_hostname2140,92907
	uint32_t node_state;2141,92962
	char *os;os2142,93011
	uint32_t owner;2143,93064
	char *partitions;partitions2144,93128
	uint16_t port;2147,93277
	uint64_t real_memory;2148,93330
	char *reason;reason2149,93400
	time_t reason_time;2150,93461
	uint32_t reason_uid;2152,93555
	dynamic_plugin_data_t *select_nodeinfo;select_nodeinfo2154,93647
	time_t slurmd_start_time;2158,93799
	uint16_t sockets;2159,93854
	uint16_t threads;2160,93918
	uint32_t tmp_disk;2161,93976
	uint32_t weight;2162,94040
	char *tres_fmt_str;tres_fmt_str2163,94106
	char *version;version2164,94174
} node_info_t;2165,94219
typedef struct node_info_msg 2167,94235
	time_t last_update;2168,94266
	uint32_t record_count;2169,94314
	node_info_t *node_array;node_array2170,94363
} node_info_msg_t;2171,94412
typedef struct front_end_info 2173,94432
	char *allow_groups;allow_groups2174,94464
	char *allow_users;allow_users2175,94513
	time_t boot_time;2176,94560
	char *deny_groups;deny_groups2178,94635
	char *deny_users;deny_users2179,94682
	char *name;name2180,94727
	uint32_t node_state;2181,94758
	char *reason;reason2182,94808
	time_t reason_time;2184,94878
	uint32_t reason_uid;2186,94974
	time_t slurmd_start_time;2188,95068
	char *version;version2189,95124
} front_end_info_t;2190,95169
typedef struct front_end_info_msg 2192,95190
	time_t last_update;2193,95226
	uint32_t record_count;2194,95274
	front_end_info_t *front_end_array;front_end_array2195,95323
} front_end_info_msg_t;2196,95387
typedef struct topo_info 2198,95412
	uint16_t level;2199,95439
	uint32_t link_speed;2200,95491
	char *name;name2201,95548
	char *nodes;nodes2202,95581
	char *switches;switches2203,95635
} topo_info_t;2204,95695
typedef struct topo_info_response_msg 2206,95711
	uint32_t record_count;2207,95751
	topo_info_t *topo_array;topo_array2208,95800
} topo_info_response_msg_t;2209,95860
typedef struct job_alloc_info_msg 2211,95889
	uint32_t job_id;2212,95925
	char    *req_cluster;req_cluster2213,95956
} job_alloc_info_msg_t;2214,96006
typedef struct layout_info_msg 2216,96031
	uint32_t record_count;2217,96064
	char** records;2218,96110
} layout_info_msg_t;2219,96160
typedef struct update_layout_msg 2221,96182
	char* layout;2222,96217
	char* arg;2223,96232
} update_layout_msg_t;2224,96244
typedef struct step_alloc_info_msg 2226,96268
	uint32_t job_id;2227,96305
	uint32_t pack_job_offset;2228,96354
	uint32_t step_id;2229,96414
} step_alloc_info_msg_t;2230,96474
typedef struct powercap_info_msg 2232,96500
	uint32_t power_cap;2233,96535
	uint32_t power_floor;2234,96587
	uint32_t power_change;2235,96643
	uint32_t min_watts;2236,96713
	uint32_t cur_max_watts;2237,96780
	uint32_t adj_max_watts;2239,96866
	uint32_t max_watts;2241,96974
} powercap_info_msg_t;2242,97041
typedef struct powercap_info_msg update_powercap_msg_t;2244,97065
typedef struct acct_gather_node_resp_msg 2246,97122
	acct_gather_energy_t *energy;energy2247,97165
	char *node_name;node_name2248,97196
	uint16_t sensor_cnt;2249,97232
} acct_gather_node_resp_msg_t;2250,97254
typedef struct acct_gather_energy_req_msg 2252,97286
	uint16_t delta;2253,97330
} acct_gather_energy_req_msg_t;2254,97347
#define JOB_DEF_CPU_PER_GPU	2256,97380
#define JOB_DEF_MEM_PER_GPU	2257,97415
typedef struct job_defaults 2258,97450
	uint16_t type;2259,97480
	uint64_t value;2260,97522
} job_defaults_t;2261,97551
#define PART_FLAG_DEFAULT	2265,97681
#define PART_FLAG_HIDDEN	2266,97745
#define PART_FLAG_NO_ROOT	2267,97810
#define PART_FLAG_ROOT_ONLY	2268,97880
#define PART_FLAG_REQ_RESV	2269,97954
#define PART_FLAG_LLN	2270,98025
#define PART_FLAG_EXCLUSIVE_USER 2272,98115
#define PART_FLAG_DEFAULT_CLR	2278,98468
#define PART_FLAG_HIDDEN_CLR	2279,98540
#define PART_FLAG_NO_ROOT_CLR	2280,98610
#define PART_FLAG_ROOT_ONLY_CLR	2281,98682
#define PART_FLAG_REQ_RESV_CLR	2282,98758
#define PART_FLAG_LLN_CLR	2283,98831
#define PART_FLAG_EXC_USER_CLR	2284,98895
typedef struct partition_info 2286,98966
	char *allow_alloc_nodes;allow_alloc_nodes2287,98998
	char *allow_accounts;allow_accounts2289,99075
	char *allow_groups;allow_groups2291,99166
	char *allow_qos;allow_qos2293,99251
	char *alternate;alternate2295,99330
	char *billing_weights_str;billing_weights_str2296,99383
	char *cluster_name;cluster_name2297,99448
	uint16_t cr_type;2298,99511
	uint32_t cpu_bind;2299,99552
	uint64_t def_mem_per_cpu;2300,99599
	uint32_t default_time;2301,99668
	char *deny_accounts;deny_accounts2302,99726
	char *deny_qos;deny_qos2303,99797
	uint16_t flags;2304,99856
	uint32_t grace_time;2305,99902
	List job_defaults_list;2306,99964
	char *job_defaults_str;job_defaults_str2307,100027
	uint32_t max_cpus_per_node;2309,100124
	uint64_t max_mem_per_cpu;2310,100191
	uint32_t max_nodes;2311,100260
	uint16_t max_share;2312,100307
	uint32_t max_time;2313,100366
	uint32_t min_nodes;2314,100412
	char *name;name2315,100447
	int32_t *node_inx;node_inx2316,100489
	char *nodes;nodes2319,100614
	uint16_t over_time_limit;2320,100668
	uint16_t preempt_mode;2322,100789
	uint16_t priority_job_factor;2323,100855
	uint16_t priority_tier;2324,100919
	char *qos_char;qos_char2325,100985
	uint16_t state_up;2326,101039
	uint32_t total_cpus;2327,101093
	uint32_t total_nodes;2328,101159
	char    *tres_fmt_str;tres_fmt_str2329,101227
} partition_info_t;2330,101293
typedef struct delete_partition_msg 2332,101314
	char *name;name2333,101352
} delete_part_msg_t;2334,101403
typedef struct resource_allocation_response_msg 2336,101425
	char *account;account2337,101475
	uint32_t job_id;2338,101525
	char *alias_list;alias_list2339,101565
	uint32_t cpu_freq_min;2340,101625
	uint32_t cpu_freq_max;2341,101679
	uint32_t cpu_freq_gov;2342,101733
	uint16_t *cpus_per_node;cpus_per_node2343,101787
	uint32_t *cpu_count_reps;cpu_count_reps2344,101832
	uint32_t env_size;2345,101899
	char **environment;environment2346,101954
	uint32_t error_code;2348,102058
	char *job_submit_user_msg;job_submit_user_msg2349,102117
	slurm_addr_t *node_addr;node_addr2350,102177
	uint32_t node_cnt;2351,102228
	char *node_list;node_list2352,102269
	uint16_t ntasks_per_board;2353,102316
	uint16_t ntasks_per_core;2354,102389
	uint16_t ntasks_per_socket;2355,102461
	uint32_t num_cpu_groups;2357,102546
	char *partition;partition2358,102618
	uint64_t pn_min_memory;2359,102676
	char *qos;qos2362,102812
	char *resv_name;resv_name2363,102859
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo2364,102914
	void *working_cluster_rec;working_cluster_rec2368,103060
} resource_allocation_response_msg_t;2371,103224
typedef struct partition_info_msg 2373,103263
	time_t last_update;2374,103299
	uint32_t record_count;2375,103346
	partition_info_t *partition_array;partition_array2376,103394
} partition_info_msg_t;2377,103458
typedef struct will_run_response_msg 2379,103483
	uint32_t job_id;2380,103522
	char *job_submit_user_msg;job_submit_user_msg2381,103565
	char *node_list;node_list2382,103626
	char *part_name;part_name2383,103677
	List preemptee_job_id;2384,103732
	uint32_t proc_cnt;2385,103795
	time_t start_time;2386,103852
	double sys_usage_per;2387,103903
} will_run_response_msg_t;2388,103956
#define RESERVE_FLAG_MAINT	2396,104127
#define RESERVE_FLAG_NO_MAINT	2397,104187
#define RESERVE_FLAG_DAILY	2398,104252
#define RESERVE_FLAG_NO_DAILY	2399,104312
#define RESERVE_FLAG_WEEKLY	2400,104377
#define RESERVE_FLAG_NO_WEEKLY	2401,104439
#define RESERVE_FLAG_IGN_JOBS	2402,104506
#define RESERVE_FLAG_NO_IGN_JOB	2403,104574
#define RESERVE_FLAG_ANY_NODES	2405,104665
#define RESERVE_FLAG_NO_ANY_NODES	2407,104746
#define RESERVE_FLAG_STATIC 2409,104835
#define RESERVE_FLAG_NO_STATIC 2410,104908
#define RESERVE_FLAG_PART_NODES	2412,104997
#define RESERVE_FLAG_NO_PART_NODES	2414,105082
#define RESERVE_FLAG_OVERLAP	2416,105176
#define RESERVE_FLAG_SPEC_NODES	2418,105258
#define RESERVE_FLAG_FIRST_CORES	2420,105342
#define RESERVE_FLAG_TIME_FLOAT	2422,105436
#define RESERVE_FLAG_REPLACE	2424,105520
#define RESERVE_FLAG_ALL_NODES	2426,105615
#define RESERVE_FLAG_PURGE_COMP	2428,105696
#define RESERVE_FLAG_WEEKDAY	2430,105794
#define RESERVE_FLAG_NO_WEEKDAY	2431,105858
#define RESERVE_FLAG_WEEKEND	2432,105927
#define RESERVE_FLAG_NO_WEEKEND	2433,105991
#define RESERVE_FLAG_FLEX	2434,106060
#define RESERVE_FLAG_NO_FLEX	2435,106118
#define RESERVE_FLAG_DUR_PLUS	2436,106181
#define RESERVE_FLAG_DUR_MINUS	2440,106315
#define RESERVE_FLAG_NO_HOLD_JOBS	2444,106453
#define RESERVE_FLAG_REPLACE_DOWN	2446,106552
#define RESERVE_FLAG_NO_PURGE_COMP	2448,106643
typedef struct resv_core_spec 2456,106958
	char *node_name;node_name2457,106990
	char *core_id;core_id2458,107036
} resv_core_spec_t;2459,107081
typedef struct reserve_info 2461,107102
	char *accounts;accounts2462,107132
	char *burst_buffer;burst_buffer2463,107191
	uint32_t core_cnt;2464,107256
	uint32_t core_spec_cnt;2465,107306
	resv_core_spec_t *core_spec;core_spec2466,107364
	time_t end_time;2467,107429
	char *features;features2468,107477
	uint64_t flags;2469,107524
	char *licenses;licenses2470,107573
	char *name;name2471,107630
	uint32_t node_cnt;2472,107670
	int32_t *node_inx;node_inx2473,107720
	char *node_list;node_list2476,107856
	char *partition;partition2477,107910
	time_t start_time;2478,107963
	uint32_t resv_watts;2479,108015
	char *tres_str;tres_str2480,108074
	char *users;users2481,108140
} reserve_info_t;2482,108193
typedef struct reserve_info_msg 2484,108212
	time_t last_update;2485,108246
	uint32_t record_count;2486,108293
	reserve_info_t *reservation_array;reservation_array2487,108341
} reserve_info_msg_t;2488,108407
typedef struct resv_desc_msg 2490,108430
	char *accounts;accounts2491,108461
	char *burst_buffer;burst_buffer2492,108520
	uint32_t *core_cnt;core_cnt2493,108585
	uint32_t duration;2494,108636
	time_t end_time;2495,108697
	char *features;features2496,108745
	uint64_t flags;2497,108792
	char *licenses;licenses2498,108841
	char *name;name2499,108898
	uint32_t *node_cnt;node_cnt2500,108959
	char *node_list;node_list2505,109220
	char *partition;partition2506,109274
	time_t start_time;2507,109327
	uint32_t resv_watts;2508,109379
	char *tres_str;tres_str2509,109438
	char *users;users2510,109504
} resv_desc_msg_t;2511,109557
typedef struct reserve_response_msg 2513,109577
	char *name;name2514,109615
} reserve_response_msg_t;2515,109655
typedef struct reservation_name_msg 2517,109682
	char *name;name2518,109720
} reservation_name_msg_t;2520,109796
#define DEBUG_FLAG_SELECT_TYPE	2523,109824
#define DEBUG_FLAG_STEPS	2524,109898
#define DEBUG_FLAG_TRIGGERS	2525,109964
#define DEBUG_FLAG_CPU_BIND	2526,110036
#define DEBUG_FLAG_WIKI	2527,110101
#define DEBUG_FLAG_NO_CONF_HASH	2528,110175
#define DEBUG_FLAG_GRES	2531,110308
#define DEBUG_FLAG_TRES_NODE 2532,110380
#define DEBUG_FLAG_PRIO 2537,110645
#define DEBUG_FLAG_BACKFILL	2539,110733
#define DEBUG_FLAG_GANG	2541,110823
#define DEBUG_FLAG_RESERVATION	2542,110894
#define DEBUG_FLAG_FRONT_END	2543,110972
#define DEBUG_FLAG_NO_REALTIME	2544,111042
#define DEBUG_FLAG_SWITCH	2547,111183
#define DEBUG_FLAG_ENERGY	2548,111252
#define DEBUG_FLAG_EXT_SENSORS	2549,111327
#define DEBUG_FLAG_LICENSE	2550,111405
#define DEBUG_FLAG_PROFILE	2552,111494
#define DEBUG_FLAG_INTERCONNECT	2554,111583
#define DEBUG_FLAG_FILESYSTEM 2556,111682
#define DEBUG_FLAG_JOB_CONT 2558,111778
#define DEBUG_FLAG_TASK 2559,111852
#define DEBUG_FLAG_PROTOCOL	2560,111918
#define DEBUG_FLAG_BACKFILL_MAP	2561,111994
#define DEBUG_FLAG_TRACE_JOBS 2563,112091
#define DEBUG_FLAG_ROUTE 2565,112187
#define DEBUG_FLAG_DB_ASSOC 2566,112251
#define DEBUG_FLAG_DB_EVENT 2567,112326
#define DEBUG_FLAG_DB_JOB 2568,112395
#define DEBUG_FLAG_DB_QOS 2569,112471
#define DEBUG_FLAG_DB_QUERY 2570,112538
#define DEBUG_FLAG_DB_RESV 2571,112616
#define DEBUG_FLAG_DB_RES 2572,112691
#define DEBUG_FLAG_DB_STEP 2573,112763
#define DEBUG_FLAG_DB_USAGE 2574,112840
#define DEBUG_FLAG_DB_WCKEY 2575,112916
#define DEBUG_FLAG_BURST_BUF 2576,112994
#define DEBUG_FLAG_CPU_FREQ 2577,113071
#define DEBUG_FLAG_POWER 2578,113145
#define DEBUG_FLAG_TIME_CRAY 2579,113221
#define DEBUG_FLAG_DB_ARCHIVE	2580,113299
#define DEBUG_FLAG_DB_TRES 2581,113376
#define DEBUG_FLAG_ESEARCH 2582,113453
#define DEBUG_FLAG_NODE_FEATURES 2583,113530
#define DEBUG_FLAG_FEDR 2584,113608
#define DEBUG_FLAG_HETERO_JOBS 2585,113682
#define DEBUG_FLAG_ACCRUE 2586,113763
#define DEBUG_FLAG_POWER_SAVE 2587,113842
#define DEBUG_FLAG_AGENT	2588,113916
#define PREEMPT_MODE_OFF	2590,113983
#define PREEMPT_MODE_SUSPEND	2591,114044
#define PREEMPT_MODE_REQUEUE	2592,114110
#define PREEMPT_MODE_CHECKPOINT	2593,114184
#define PREEMPT_MODE_CANCEL	2595,114285
#define PREEMPT_MODE_GANG	2596,114348
#define RECONFIG_KEEP_PART_INFO 2598,114411
#define RECONFIG_KEEP_PART_STAT 2599,114505
#define HEALTH_CHECK_NODE_IDLE	2601,114601
#define HEALTH_CHECK_NODE_ALLOC	2602,114667
#define HEALTH_CHECK_NODE_MIXED	2603,114745
#define HEALTH_CHECK_CYCLE	2604,114827
#define HEALTH_CHECK_NODE_ANY	2605,114892
#define PROLOG_FLAG_ALLOC	2607,114963
#define PROLOG_FLAG_NOHOLD	2608,115033
#define PROLOG_FLAG_CONTAIN 2611,115183
#define PROLOG_FLAG_SERIAL 2613,115291
#define PROLOG_FLAG_X11	2614,115363
#define LOG_FMT_ISO8601_MS 2616,115438
#define LOG_FMT_ISO8601 2617,115472
#define LOG_FMT_RFC5424_MS 2618,115506
#define LOG_FMT_RFC5424 2619,115540
#define LOG_FMT_CLOCK 2620,115574
#define LOG_FMT_SHORT 2621,115608
#define LOG_FMT_THREAD_ID 2622,115642
typedef struct slurm_ctl_conf 2624,115677
	time_t last_update;2625,115709
	char *accounting_storage_tres;accounting_storage_tres2626,115777
	uint16_t accounting_storage_enforce;2627,115828
	char *accounting_storage_backup_host;accounting_storage_backup_host2629,115948
	char *accounting_storage_host;accounting_storage_host2631,116033
	char *accounting_storage_loc;accounting_storage_loc2632,116095
	char *accounting_storage_pass;accounting_storage_pass2634,116179
	uint32_t accounting_storage_port;2636,116253
	char *accounting_storage_type;accounting_storage_type2637,116325
	char *accounting_storage_user;accounting_storage_user2638,116387
	uint16_t acctng_store_job_comment;2639,116449
	void *acct_gather_conf;acct_gather_conf2640,116522
	char *acct_gather_energy_type;acct_gather_energy_type2641,116575
	char *acct_gather_profile_type;acct_gather_profile_type2642,116636
	char *acct_gather_interconnect_type;acct_gather_interconnect_type2643,116699
	char *acct_gather_filesystem_type;acct_gather_filesystem_type2644,116772
	uint16_t acct_gather_node_freq;2645,116841
	char *authalttypes;authalttypes2646,116911
	char *authinfo;authinfo2647,116969
	char *authtype;authtype2648,117013
	uint16_t batch_start_timeout;2649,117057
	char *bb_type;bb_type2650,117126
	time_t boot_time;2651,117174
	void *cgroup_conf;cgroup_conf2652,117226
	char *checkpoint_type;checkpoint_type2653,117279
	char *cli_filter_plugins;cli_filter_plugins2654,117332
	char *core_spec_plugin;core_spec_plugin2655,117399
	char *cluster_name;cluster_name2656,117462
	char *comm_params;comm_params2657,117528
	uint16_t complete_wait;2658,117583
	char **control_addr;control_addr2660,117686
	uint32_t control_cnt;2662,117771
	char **control_machine;control_machine2663,117841
	uint32_t cpu_freq_def;2665,117924
	uint32_t cpu_freq_govs;2666,117987
	char *cred_type;cred_type2667,118045
	uint64_t debug_flags;2668,118097
	uint64_t def_mem_per_cpu;2669,118160
	uint16_t disable_root_jobs;2670,118229
	uint16_t eio_timeout;2671,118301
	uint16_t enforce_part_limits;2672,118361
	char *epilog;epilog2674,118469
	uint32_t epilog_msg_time;2675,118514
	char *epilog_slurmctld;epilog_slurmctld2677,118616
	char *ext_sensors_type;ext_sensors_type2678,118687
	uint16_t ext_sensors_freq;2679,118747
	void *ext_sensors_conf;ext_sensors_conf2680,118815
	uint16_t fast_schedule;2681,118874
	char *fed_params;fed_params2683,118992
	uint32_t first_job_id;2684,119045
	uint16_t fs_dampening_factor;2685,119114
	uint16_t get_env_timeout;2686,119182
	char * gres_plugins;2687,119254
	uint16_t group_time;2688,119315
	uint16_t group_force;2689,119373
	char *gpu_freq_def;gpu_freq_def2691,119466
	uint32_t hash_val;2692,119525
	uint16_t health_check_interval;2693,119590
	uint16_t health_check_node_state;2694,119656
	char * health_check_program;2697,119795
	uint16_t inactive_limit;2698,119864
	char *job_acct_gather_freq;job_acct_gather_freq2700,119974
	char *job_acct_gather_type;job_acct_gather_type2702,120065
	char *job_acct_gather_params;job_acct_gather_params2703,120127
	uint16_t job_acct_oom_kill;2704,120197
	char *job_ckpt_dir;job_ckpt_dir2705,120265
	char *job_comp_host;job_comp_host2706,120331
	char *job_comp_loc;job_comp_loc2707,120387
	char *job_comp_pass;job_comp_pass2708,120446
	uint32_t job_comp_port;2709,120506
	char *job_comp_type;job_comp_type2710,120565
	char *job_comp_user;job_comp_user2711,120621
	char *job_container_plugin;job_container_plugin2712,120677
	char *job_credential_private_key;job_credential_private_key2713,120738
	char *job_credential_public_certificate;job_credential_public_certificate2714,120799
	List job_defaults_list;2715,120872
	uint16_t job_file_append;2716,120935
	uint16_t job_requeue;2717,121002
	char *job_submit_plugins;job_submit_plugins2718,121072
	uint16_t keep_alive_time;2719,121140
	uint16_t kill_on_bad_exit;2720,121211
	uint16_t kill_wait;2723,121360
	char *launch_params;launch_params2725,121448
	char *launch_type;launch_type2726,121505
	char *layouts;layouts2727,121560
	char *licenses;licenses2728,121622
	char *licenses_used;licenses_used2729,121681
	uint16_t log_fmt;2730,121739
	char *mail_domain;mail_domain2731,121796
	char *mail_prog;mail_prog2732,121860
	uint32_t max_array_sz;2733,121909
	uint32_t max_job_cnt;2734,121962
	uint32_t max_job_id;2735,122021
	uint64_t max_mem_per_cpu;2736,122090
	uint32_t max_step_cnt;2737,122159
	uint16_t max_tasks_per_node;2738,122221
	char *mcs_plugin;mcs_plugin2739,122280
	char *mcs_plugin_params;mcs_plugin_params2740,122321
	uint32_t min_job_age;2741,122375
	char *mpi_default;mpi_default2743,122477
	char *mpi_params;mpi_params2744,122533
	char *msg_aggr_params;msg_aggr_params2745,122573
	uint16_t msg_timeout;2746,122635
	uint16_t tcp_timeout;2747,122680
	uint32_t next_job_id;2748,122721
	void *node_features_conf;node_features_conf2749,122788
	char *node_features_plugins;node_features_plugins2750,122854
	char *node_prefix;node_prefix2751,122927
	uint16_t over_time_limit;2753,123040
	char *plugindir;plugindir2755,123161
	char *plugstack;plugstack2756,123205
	char *power_parameters;power_parameters2757,123273
	char *power_plugin;power_plugin2758,123332
	uint32_t preempt_exempt_time;2759,123388
	uint16_t preempt_mode;2760,123458
	char *preempt_type;preempt_type2761,123524
	uint32_t priority_decay_hl;2762,123583
	uint32_t priority_calc_period;2764,123665
	uint16_t priority_favor_small;2766,123753
	uint16_t priority_flags;2767,123819
	uint32_t priority_max_age;2769,123929
    	char *priority_params;priority_params2771,124032
	uint16_t priority_reset_period;2772,124093
	char *priority_type;priority_type2774,124182
	uint32_t priority_weight_age;2775,124234
	uint32_t priority_weight_assoc;2776,124293
	uint32_t priority_weight_fs;2777,124356
	uint32_t priority_weight_js;2778,124420
	uint32_t priority_weight_part;2779,124483
	uint32_t priority_weight_qos;2780,124549
	char    *priority_weight_tres;priority_weight_tres2781,124608
	uint16_t private_data;2782,124680
	char *proctrack_type;proctrack_type2784,124766
	char *prolog;prolog2785,124824
	uint16_t prolog_epilog_timeout;2786,124883
	char *prolog_slurmctld;prolog_slurmctld2787,124944
	uint16_t propagate_prio_process;2788,125015
	uint16_t prolog_flags;2790,125110
	char *propagate_rlimits;propagate_rlimits2792,125204
	char *propagate_rlimits_except;propagate_rlimits_except2793,125276
	char *reboot_program;reboot_program2794,125349
	uint16_t reconfig_flags;2795,125405
	char *requeue_exit;requeue_exit2796,125451
	char *requeue_exit_hold;requeue_exit_hold2797,125503
	char *resume_fail_program;resume_fail_program2798,125560
	char *resume_program;resume_program2799,125632
	uint16_t resume_rate;2800,125694
	uint16_t resume_timeout;2801,125760
	char *resv_epilog;resv_epilog2803,125856
	uint16_t resv_over_run;2804,125926
	char *resv_prolog;resv_prolog2806,126015
	uint16_t ret2service;2807,126085
	char *route_plugin;route_plugin2809,126167
	char *salloc_default_command;salloc_default_command2810,126211
	char *sbcast_parameters;sbcast_parameters2811,126271
	char *sched_logfile;sched_logfile2812,126326
	uint16_t sched_log_level;2813,126396
	char *sched_params;sched_params2814,126470
	uint16_t sched_time_slice;2816,126568
	char *schedtype;schedtype2817,126634
	char *select_type;select_type2818,126683
	void *select_conf_key_pairs;select_conf_key_pairs2819,126738
	uint16_t select_type_param;2821,126849
	char *site_factor_plugin;site_factor_plugin2823,126940
	char *site_factor_params;site_factor_params2824,126998
	char *slurm_conf;slurm_conf2825,127060
	uint32_t slurm_user_id;2826,127115
	char *slurm_user_name;slurm_user_name2827,127169
	uint32_t slurmd_user_id;2828,127227
	char *slurmd_user_name;slurmd_user_name2829,127282
	char *slurmctld_addr;slurmctld_addr2830,127338
	uint16_t slurmctld_debug;2832,127447
	char *slurmctld_logfile;slurmctld_logfile2833,127504
	char *slurmctld_pidfile;slurmctld_pidfile2834,127574
	char *slurmctld_plugstack;slurmctld_plugstack2835,127644
	void *slurmctld_plugstack_conf slurmctld_plugstack_conf2836,127703
	uint32_t slurmctld_port;2837,127776
	uint16_t slurmctld_port_count;2838,127850
	char *slurmctld_primary_off_prog;slurmctld_primary_off_prog2839,127919
	char *slurmctld_primary_on_prog;slurmctld_primary_on_prog2840,127994
	uint16_t slurmctld_syslog_debug;2841,128070
	uint16_t slurmctld_timeout;2843,128163
	char *slurmctld_params;slurmctld_params2845,128282
	uint16_t slurmd_debug;2846,128333
	char *slurmd_logfile;slurmd_logfile2847,128384
	char *slurmd_params;slurmd_params2848,128449
	char *slurmd_pidfile;slurmd_pidfile2849,128494
	uint32_t slurmd_port;2850,128563
	char *slurmd_spooldir;slurmd_spooldir2851,128630
	uint16_t slurmd_syslog_debug;2852,128698
	uint16_t slurmd_timeout;2854,128789
	char *srun_epilog;srun_epilog2856,128892
	uint16_t *srun_port_range;srun_port_range2857,128943
	char *srun_prolog;srun_prolog2858,128997
	char *state_save_location;state_save_location2859,129048
	char *suspend_exc_nodes;suspend_exc_nodes2861,129133
	char *suspend_exc_parts;suspend_exc_parts2862,129195
	char *suspend_program;suspend_program2863,129262
	uint16_t suspend_rate;2864,129327
	uint32_t suspend_time;2865,129396
	uint16_t suspend_timeout;2866,129473
	char *switch_type;switch_type2868,129572
	char *task_epilog;task_epilog2869,129626
	char *task_plugin;task_plugin2870,129683
	uint32_t task_plugin_param;2871,129728
	char *task_prolog;task_prolog2872,129778
	char *tmp_fs;tmp_fs2873,129835
	char *topology_param;topology_param2874,129891
	char *topology_plugin;topology_plugin2875,129948
	uint16_t track_wckey;2876,130002
	uint16_t tree_width;2877,130067
	char *unkillable_program;unkillable_program2878,130133
	uint16_t unkillable_timeout;2880,130249
	uint16_t use_pam;2883,130417
	uint16_t use_spec_resources;2884,130469
	char *version;version2886,130571
	uint16_t vsize_factor;2887,130615
	uint16_t wait_time;2888,130678
	char *x11_params;x11_params2889,130729
} slurm_ctl_conf_t;2890,130768
typedef struct slurmd_status_msg 2892,130789
	time_t booted;2893,130824
	time_t last_slurmctld_msg;2894,130872
	uint16_t slurmd_debug;2895,130937
	uint16_t actual_cpus;2896,130982
	uint16_t actual_boards;2897,131043
	uint16_t actual_sockets;2898,131107
	uint16_t actual_cores;2899,131170
	uint16_t actual_threads;2900,131232
	uint64_t actual_real_mem;2901,131293
	uint32_t actual_tmp_disk;2902,131351
	uint32_t pid;2903,131413
	char *hostname;hostname2904,131447
	char *slurmd_logfile;slurmd_logfile2905,131487
	char *step_list;step_list2906,131542
	char *version;version2907,131592
} slurmd_status_t;2908,131632
typedef struct submit_response_msg 2910,131652
	uint32_t job_id;2911,131689
	uint32_t step_id;2912,131720
	uint32_t error_code;2913,131753
	char *job_submit_user_msg;job_submit_user_msg2914,131812
} submit_response_msg_t;2915,131873
typedef struct slurm_update_node_msg 2919,132024
	uint32_t cpu_bind;2920,132063
	char *features;features2921,132114
	char *features_act;features_act2922,132169
	char *gres;gres2923,132224
	char *node_addr;node_addr2924,132275
	char *node_hostname;node_hostname2925,132329
	char *node_names;node_names2926,132384
	uint32_t node_state;2927,132429
	char *reason;reason2928,132478
	uint32_t reason_uid;2929,132539
	uint32_t weight;2931,132634
} update_node_msg_t;2932,132678
typedef struct slurm_update_front_end_msg 2934,132700
	char *name;name2935,132744
	uint32_t node_state;2936,132804
	char *reason;reason2937,132853
	uint32_t reason_uid;2938,132914
} update_front_end_msg_t;2940,133009
typedef struct partition_info update_part_msg_t;2942,133036
typedef struct job_sbcast_cred_msg 2944,133086
	uint32_t      job_id;2945,133123
	slurm_addr_t  *node_addr;node_addr2946,133169
	uint32_t      node_cnt;2947,133220
	char         *node_list;node_list2948,133267
	sbcast_cred_t *sbcast_cred;sbcast_cred2949,133322
} job_sbcast_cred_msg_t;2950,133379
typedef struct slurm_step_ctx_struct slurm_step_ctx_t;2953,133459
#define STAT_COMMAND_RESET	2955,133515
#define STAT_COMMAND_GET	2956,133549
typedef struct stats_info_request_msg 2957,133581
	uint16_t command_id;2958,133621
} stats_info_request_msg_t;2959,133643
typedef struct stats_info_response_msg 2961,133672
	uint32_t parts_packed;2962,133713
	time_t req_time;2963,133737
	time_t req_time_start;2964,133755
	uint32_t server_thread_count;2965,133779
	uint32_t agent_queue_size;2966,133810
	uint32_t agent_count;2967,133838
	uint32_t dbd_agent_queue_size;2968,133861
	uint32_t gettimeofday_latency;2969,133893
	uint32_t schedule_cycle_max;2971,133926
	uint32_t schedule_cycle_last;2972,133956
	uint32_t schedule_cycle_sum;2973,133987
	uint32_t schedule_cycle_counter;2974,134017
	uint32_t schedule_cycle_depth;2975,134051
	uint32_t schedule_queue_len;2976,134083
	uint32_t jobs_submitted;2978,134114
	uint32_t jobs_started;2979,134140
	uint32_t jobs_completed;2980,134164
	uint32_t jobs_canceled;2981,134190
	uint32_t jobs_failed;2982,134215
	uint32_t jobs_pending;2984,134239
	uint32_t jobs_running;2985,134263
	time_t   job_states_ts;2986,134287
	uint32_t bf_backfilled_jobs;2988,134313
	uint32_t bf_last_backfilled_jobs;2989,134343
	uint32_t bf_backfilled_pack_jobs;2990,134378
	uint32_t bf_cycle_counter;2991,134413
	uint64_t bf_cycle_sum;2992,134441
	uint32_t bf_cycle_last;2993,134465
	uint32_t bf_cycle_max;2994,134490
	uint32_t bf_last_depth;2995,134514
	uint32_t bf_last_depth_try;2996,134539
	uint32_t bf_depth_sum;2997,134568
	uint32_t bf_depth_try_sum;2998,134592
	uint32_t bf_queue_len;2999,134620
	uint32_t bf_queue_len_sum;3000,134644
	time_t   bf_when_last_cycle;3001,134672
	uint32_t bf_active;3002,134702
	uint32_t rpc_type_size;3004,134724
	uint16_t *rpc_type_id;rpc_type_id3005,134749
	uint32_t *rpc_type_cnt;rpc_type_cnt3006,134773
	uint64_t *rpc_type_time;rpc_type_time3007,134798
	uint32_t rpc_user_size;3009,134825
	uint32_t *rpc_user_id;rpc_user_id3010,134850
	uint32_t *rpc_user_cnt;rpc_user_cnt3011,134874
	uint64_t *rpc_user_time;rpc_user_time3012,134899
	uint32_t rpc_queue_type_count;3014,134926
	uint32_t *rpc_queue_type_id;rpc_queue_type_id3015,134958
	uint32_t *rpc_queue_count;rpc_queue_count3016,134988
	uint32_t rpc_dump_count;3018,135017
	uint32_t *rpc_dump_types;rpc_dump_types3019,135043
	char **rpc_dump_hostlist;rpc_dump_hostlist3020,135070
} stats_info_response_msg_t;3021,135097
#define TRIGGER_FLAG_PERM	3023,135127
#define TRIGGER_RES_TYPE_JOB 3025,135162
#define TRIGGER_RES_TYPE_NODE 3026,135209
#define TRIGGER_RES_TYPE_SLURMCTLD 3027,135256
#define TRIGGER_RES_TYPE_SLURMDBD 3028,135303
#define TRIGGER_RES_TYPE_DATABASE 3029,135350
#define TRIGGER_RES_TYPE_FRONT_END 3030,135397
#define TRIGGER_RES_TYPE_OTHER 3031,135444
#define TRIGGER_TYPE_UP 3033,135492
#define TRIGGER_TYPE_DOWN 3034,135543
#define TRIGGER_TYPE_FAIL 3035,135594
#define TRIGGER_TYPE_TIME 3036,135645
#define TRIGGER_TYPE_FINI 3037,135696
#define TRIGGER_TYPE_RECONFIG 3038,135747
#define TRIGGER_TYPE_IDLE 3040,135868
#define TRIGGER_TYPE_DRAINED 3041,135919
#define TRIGGER_TYPE_PRI_CTLD_FAIL 3042,135970
#define TRIGGER_TYPE_PRI_CTLD_RES_OP 3043,136021
#define TRIGGER_TYPE_PRI_CTLD_RES_CTRL 3044,136072
#define TRIGGER_TYPE_PRI_CTLD_ACCT_FULL 3045,136123
#define TRIGGER_TYPE_BU_CTLD_FAIL 3046,136174
#define TRIGGER_TYPE_BU_CTLD_RES_OP 3047,136225
#define TRIGGER_TYPE_BU_CTLD_AS_CTRL 3048,136276
#define TRIGGER_TYPE_PRI_DBD_FAIL 3049,136327
#define TRIGGER_TYPE_PRI_DBD_RES_OP 3050,136378
#define TRIGGER_TYPE_PRI_DB_FAIL 3051,136429
#define TRIGGER_TYPE_PRI_DB_RES_OP 3052,136480
#define TRIGGER_TYPE_BURST_BUFFER 3053,136531
typedef struct trigger_info 3056,136584
	uint16_t flags;3057,136614
	uint32_t trig_id;3058,136653
	uint16_t res_type;3059,136689
	char *   res_id;3060,136734
	uint32_t control_inx;3061,136770
	uint32_t trig_type;3062,136816
	uint16_t offset;3063,136858
	uint32_t user_id;3064,136918
	char *   program;3065,136967
} trigger_info_t;3066,137011
typedef struct trigger_info_msg 3068,137030
	uint32_t record_count;3069,137064
	trigger_info_t *trigger_array;trigger_array3070,137113
} trigger_info_msg_t;3071,137171
typedef struct slurm_license_info 3076,137233
	char *name;name3077,137269
	uint32_t total;3078,137310
	uint32_t in_use;3079,137373
	uint32_t available;3080,137426
	uint8_t remote;3081,137482
} slurm_license_info_t;3083,137576
typedef struct license_info_msg 3087,137665
	time_t last_update;3088,137699
	uint32_t num_lic;3089,137720
	slurm_license_info_t *lic_array;lic_array3090,137739
} license_info_msg_t;3091,137773
	uint32_t  job_array_count;3094,137813
	char    **job_array_id;job_array_id3095,137841
	uint32_t *error_code;error_code3096,137906
} job_array_resp_msg_t;3097,137929
	List assoc_list;3101,138028
	List qos_list;3102,138098
	uint32_t tres_cnt;3103,138166
	char **tres_names;tres_names3104,138186
	List user_list;3105,138206
} assoc_mgr_info_msg_t;3106,138257
#define ASSOC_MGR_INFO_FLAG_ASSOC 3108,138282
#define ASSOC_MGR_INFO_FLAG_USERS 3109,138327
#define ASSOC_MGR_INFO_FLAG_QOS 3110,138372
	List acct_list;3113,138435
	uint32_t flags;3114,138487
	List qos_list;3115,138545
	List user_list;3116,138593
} assoc_mgr_info_request_msg_t;3117,138642
typedef struct network_callerid_msg 3119,138675
	unsigned char ip_src[ip_src3120,138713
	unsigned char ip_dst[ip_dst3121,138740
	uint32_t port_src;3122,138767
	uint32_t port_dst;3123,138787
	int32_t af;3124,138807
} network_callerid_msg_t;3125,138854
typedef struct job_step_kill_msg 3371,149337
	uint32_t job_id;3372,149372
	char *sjob_id;sjob_id3373,149390
	uint32_t job_step_id;3374,149406
	uint16_t signal;3375,149429
	uint16_t flags;3376,149447
	char *sibling;sibling3377,149464
} job_step_kill_msg_t;3378,149480
#define KILL_JOB_BATCH	3383,149591
#define KILL_JOB_ARRAY	3384,149652
#define KILL_STEPS_ONLY	3385,149722
#define KILL_FULL_JOB	3386,149787
#define KILL_FED_REQUEUE 3387,149864
#define KILL_HURRY	3388,149937
#define KILL_OOM	3389,149998
#define KILL_NO_SIBS	3390,150055
#define WARN_SENT	3394,150276
#define BB_FLAG_DISABLE_PERSISTENT	4938,209026
#define BB_FLAG_ENABLE_PERSISTENT	4941,209160
#define BB_FLAG_EMULATE_CRAY	4944,209291
#define BB_FLAG_PRIVATE_DATA	4945,209360
#define BB_FLAG_TEARDOWN_FAILURE	4946,209433
#define BB_FLAG_SET_EXEC_HOST	4947,209515
#define BB_SIZE_IN_NODES	4949,209577
#define BB_STATE_PENDING	4950,209621
#define BB_STATE_ALLOCATING	4951,209691
#define BB_STATE_ALLOCATED	4952,209757
#define BB_STATE_DELETING	4953,209822
#define BB_STATE_DELETED	4954,209886
#define BB_STATE_STAGING_IN	4955,209949
#define BB_STATE_STAGED_IN	4956,210017
#define BB_STATE_PRE_RUN	4957,210085
#define BB_STATE_ALLOC_REVOKE	4958,210150
#define BB_STATE_RUNNING	4959,210219
#define BB_STATE_SUSPEND	4960,210273
#define BB_STATE_POST_RUN	4961,210338
#define BB_STATE_STAGING_OUT	4962,210405
#define BB_STATE_STAGED_OUT	4963,210475
#define BB_STATE_TEARDOWN	4964,210545
#define BB_STATE_TEARDOWN_FAIL	4965,210612
#define BB_STATE_COMPLETE	4966,210693
	uint64_t granularity;4970,210851
	char *name;name4971,210920
	uint64_t total_space;4972,210961
	uint64_t used_space;4974,211062
	uint64_t unfree_space;4975,211116
} burst_buffer_pool_t;4976,211187
	char *account;account4979,211228
	uint32_t array_job_id;4980,211283
	uint32_t array_task_id;4981,211307
	time_t create_time;4982,211332
	uint32_t job_id;4983,211376
	char *name;name4984,211394
	char *partition;partition4985,211446
	char *pool;pool4986,211504
	char *qos;qos4987,211545
	uint64_t size;4988,211592
	uint16_t state;4989,211635
	uint32_t user_id;4990,211674
} burst_buffer_resv_t;4991,211693
	uint32_t user_id;4994,211734
	uint64_t used;4995,211753
} burst_buffer_use_t;4996,211769
	char *allow_users;allow_users4999,211809
	char *default_pool;default_pool5000,211829
	char *create_buffer;create_buffer5001,211885
	char *deny_users;deny_users5002,211907
	char *destroy_buffer;destroy_buffer5003,211926
	uint32_t flags;5004,211949
	char *get_sys_state;get_sys_state5005,211994
	char *get_sys_status;get_sys_status5006,212016
	uint64_t granularity;5007,212039
	uint32_t pool_cnt;5008,212104
	burst_buffer_pool_t *pool_ptr;pool_ptr5009,212160
	char *name;name5010,212192
	uint32_t other_timeout;5011,212225
	uint32_t stage_in_timeout;5012,212273
	uint32_t stage_out_timeout;5013,212323
	char *start_stage_in;start_stage_in5014,212374
	char *start_stage_out;start_stage_out5015,212397
	char *stop_stage_in;stop_stage_in5016,212421
	char *stop_stage_out;stop_stage_out5017,212443
	uint64_t total_space;5018,212466
	uint64_t unfree_space;5019,212505
	uint64_t used_space;5020,212567
	uint32_t validate_timeout;5021,212616
	uint32_t  buffer_count;5023,212667
	burst_buffer_resv_t *burst_buffer_resv_ptr;burst_buffer_resv_ptr5024,212692
	uint32_t  use_count;5026,212738
	burst_buffer_use_t *burst_buffer_use_ptr;burst_buffer_use_ptr5027,212760
} burst_buffer_info_t;5028,212803
	burst_buffer_info_t *burst_buffer_array;burst_buffer_array5031,212844
	uint32_t  record_count;5032,212886
} burst_buffer_info_msg_t;5033,212949

/usr/include/slurm/spank.h,2560
#define SPANK_H39,2199
typedef struct spank_handle * spank_t;43,2278
typedef int (spank_f)47,2368
enum spank_item 132,5150
    S_JOB_UID,133,5168
    S_JOB_GID,134,5248
    S_JOB_ID,135,5328
    S_JOB_STEPID,136,5408
    S_JOB_NNODES,137,5488
    S_JOB_NODEID,138,5568
    S_JOB_LOCAL_TASK_COUNT,139,5648
    S_JOB_TOTAL_TASK_COUNT,140,5728
    S_JOB_NCPUS,141,5808
    S_JOB_ARGV,142,5888
    S_JOB_ENV,143,5968
    S_TASK_ID,144,6048
    S_TASK_GLOBAL_ID,145,6128
    S_TASK_EXIT_STATUS,146,6208
    S_TASK_PID,147,6288
    S_JOB_PID_TO_GLOBAL_ID,148,6368
    S_JOB_PID_TO_LOCAL_ID,149,6448
    S_JOB_LOCAL_TO_GLOBAL_ID,150,6528
    S_JOB_GLOBAL_TO_LOCAL_ID,151,6608
    S_JOB_SUPPLEMENTARY_GIDS,152,6688
    S_SLURM_VERSION,153,6768
    S_SLURM_VERSION_MAJOR,154,6848
    S_SLURM_VERSION_MINOR,155,6928
    S_SLURM_VERSION_MICRO,156,7008
    S_STEP_CPUS_PER_TASK,157,7088
    S_JOB_ALLOC_CORES,159,7244
    S_JOB_ALLOC_MEM,160,7324
    S_STEP_ALLOC_CORES,161,7404
    S_STEP_ALLOC_MEM,162,7484
    S_SLURM_RESTART_COUNT,163,7564
    S_JOB_ARRAY_ID,164,7644
    S_JOB_ARRAY_TASK_ID,165,7724
typedef enum spank_item spank_item_t;168,7808
enum spank_err 172,7874
    ESPANK_SUCCESS 173,7891
    ESPANK_ERROR 174,7971
    ESPANK_BAD_ARG 175,8051
    ESPANK_NOT_TASK 176,8131
    ESPANK_ENV_EXISTS 177,8211
    ESPANK_ENV_NOEXIST 178,8291
    ESPANK_NOSPACE 179,8371
    ESPANK_NOT_REMOTE 180,8451
    ESPANK_NOEXIST 181,8531
    ESPANK_NOT_EXECD 182,8611
    ESPANK_NOT_AVAIL 183,8691
    ESPANK_NOT_LOCAL 184,8771
typedef enum spank_err spank_err_t;187,8855
enum spank_context 192,8924
    S_CTX_ERROR,193,8945
    S_CTX_LOCAL,194,9025
    S_CTX_REMOTE,195,9105
    S_CTX_ALLOCATOR,196,9185
    S_CTX_SLURMD,197,9265
    S_CTX_JOB_SCRIPT 198,9345
#define HAVE_S_CTX_SLURMD 201,9429
#define HAVE_S_CTX_JOB_SCRIPT 202,9509
typedef enum spank_context spank_context_t;204,9590
typedef int (*spank_opt_cb_f)spank_opt_cb_f217,9995
struct spank_option 219,10069
    char *         name;220,10091
    char *         arginfo;221,10170
    char *         usage;222,10249
    int            has_arg;223,10328
    int            val;224,10407
    spank_opt_cb_f cb;225,10486
#define SPANK_OPTIONS_TABLE_END 239,10964
#define SPANK_OPTION_MAXLEN 244,11086
extern void slurm_info 413,17451
extern void slurm_error 415,17543
extern void slurm_verbose 417,17636
extern void slurm_debug 419,17731
extern void slurm_debug2 421,17824
extern void slurm_debug3 423,17918
#define SPANK_PLUGIN(434,18130

/usr/include/sys/types.h,3178
#define	_SYS_TYPES_H	23,903
typedef __u_char u_char;33,1033
typedef __u_short u_short;34,1058
typedef __u_int u_int;35,1085
typedef __u_long u_long;36,1108
typedef __quad_t quad_t;37,1133
typedef __u_quad_t u_quad_t;38,1158
typedef __fsid_t fsid_t;39,1187
#  define __u_char_defined40,1212
typedef __loff_t loff_t;44,1255
typedef __ino_t ino_t;48,1334
typedef __ino64_t ino_t;50,1364
# define __ino_t_defined52,1397
typedef __ino64_t ino64_t;55,1489
# define __ino64_t_defined56,1516
typedef __dev_t dev_t;60,1575
# define __dev_t_defined61,1598
typedef __gid_t gid_t;65,1655
# define __gid_t_defined66,1678
typedef __mode_t mode_t;70,1736
# define __mode_t_defined71,1761
typedef __nlink_t nlink_t;75,1821
# define __nlink_t_defined76,1848
typedef __uid_t uid_t;80,1907
# define __uid_t_defined81,1930
typedef __off_t off_t;86,2016
typedef __off64_t off_t;88,2046
# define __off_t_defined90,2079
typedef __off64_t off64_t;93,2171
# define __off64_t_defined94,2198
typedef __pid_t pid_t;98,2257
# define __pid_t_defined99,2280
typedef __id_t id_t;104,2420
# define __id_t_defined105,2441
typedef __ssize_t ssize_t;109,2499
# define __ssize_t_defined110,2526
typedef __daddr_t daddr_t;115,2605
typedef __caddr_t caddr_t;116,2632
#  define __daddr_t_defined117,2659
typedef __key_t key_t;122,2779
# define __key_t_defined123,2802
# define __need_clock_t127,2885
#define	__need_time_t129,2916
#define __need_timer_t130,2938
#define __need_clockid_t131,2961
typedef __useconds_t useconds_t;136,3054
#  define __useconds_t_defined137,3087
typedef __suseconds_t suseconds_t;140,3157
#  define __suseconds_t_defined141,3192
#define	__need_size_t145,3240
typedef unsigned long int ulong;150,3345
typedef unsigned short int ushort;151,3378
typedef unsigned int uint;152,3413
#  define __int8_t_defined161,3636
typedef	char int8_t;162,3663
typedef	short int int16_t;163,3684
typedef	int int32_t;164,3711
typedef long int int64_t;166,3755
__extension__ typedef long long int int64_t;168,3812
typedef	unsigned char u_int8_t;173,3937
typedef	unsigned short int u_int16_t;174,3969
typedef	unsigned int u_int32_t;175,4007
typedef unsigned long int u_int64_t;177,4061
__extension__ typedef unsigned long long int u_int64_t;179,4128
typedef int register_t;182,4193
# define __intN_t(187,4297
# define __u_intN_t(189,4385
#  define __int8_t_defined193,4513
typedef int register_t 205,4740
#define __BIT_TYPES_DEFINED__	211,4897
typedef __blksize_t blksize_t;228,5316
# define __blksize_t_defined229,5347
typedef __blkcnt_t blkcnt_t;235,5492
#  define __blkcnt_t_defined236,5566
typedef __fsblkcnt_t fsblkcnt_t;239,5633
#  define __fsblkcnt_t_defined240,5707
typedef __fsfilcnt_t fsfilcnt_t;243,5776
#  define __fsfilcnt_t_defined244,5850
typedef __blkcnt64_t blkcnt_t;248,5923
#  define __blkcnt_t_defined249,6001
typedef __fsblkcnt64_t fsblkcnt_t;252,6068
#  define __fsblkcnt_t_defined253,6144
typedef __fsfilcnt64_t fsfilcnt_t;256,6213
#  define __fsfilcnt_t_defined257,6289
typedef __blkcnt64_t blkcnt64_t;262,6361
typedef __fsblkcnt64_t fsblkcnt64_t;263,6441
typedef __fsfilcnt64_t fsfilcnt64_t;264,6519

/usr/include/assert.h,616
# undef	_ASSERT_H25,901
# undef	assert26,919
# undef __ASSERT_VOID_CAST27,934
#  undef assert_perror30,980
#define	_ASSERT_H	35,1035
# define __ASSERT_VOID_CAST 39,1126
# define __ASSERT_VOID_CAST 41,1178
# define assert(51,1381
#  define assert_perror(60,1657
extern void __assert_fail 68,1825
extern void __assert_perror_fail 73,2049
extern void __assert 80,2299
# define assert(86,2438
#  define assert_perror(92,2617
#   define __ASSERT_FUNCTION	104,3179
#   define __ASSERT_FUNCTION	107,3297
#   define __ASSERT_FUNCTION	109,3343
# undef static_assert118,3542
# define static_assert 119,3564

/usr/include/linux/xattr.h,1508
#define _LINUX_XATTR_H11,299
#define XATTR_CREATE	13,323
#define XATTR_REPLACE	14,393
#define XATTR_OS2_PREFIX 17,482
#define XATTR_OS2_PREFIX_LEN 18,514
#define XATTR_MAC_OSX_PREFIX 20,575
#define XATTR_MAC_OSX_PREFIX_LEN 21,611
#define XATTR_BTRFS_PREFIX 23,680
#define XATTR_BTRFS_PREFIX_LEN 24,716
#define XATTR_SECURITY_PREFIX	26,781
#define XATTR_SECURITY_PREFIX_LEN 27,823
#define XATTR_SYSTEM_PREFIX 29,894
#define XATTR_SYSTEM_PREFIX_LEN 30,932
#define XATTR_TRUSTED_PREFIX 32,999
#define XATTR_TRUSTED_PREFIX_LEN 33,1039
#define XATTR_USER_PREFIX 35,1108
#define XATTR_USER_PREFIX_LEN 36,1142
#define XATTR_EVM_SUFFIX 39,1230
#define XATTR_NAME_EVM 40,1261
#define XATTR_IMA_SUFFIX 42,1324
#define XATTR_NAME_IMA 43,1355
#define XATTR_SELINUX_SUFFIX 45,1418
#define XATTR_NAME_SELINUX 46,1457
#define XATTR_SMACK_SUFFIX 48,1528
#define XATTR_SMACK_IPIN 49,1565
#define XATTR_SMACK_IPOUT 50,1604
#define XATTR_SMACK_EXEC 51,1645
#define XATTR_SMACK_TRANSMUTE 52,1684
#define XATTR_SMACK_MMAP 53,1733
#define XATTR_NAME_SMACK 54,1772
#define XATTR_NAME_SMACKIPIN	55,1838
#define XATTR_NAME_SMACKIPOUT	56,1906
#define XATTR_NAME_SMACKEXEC	57,1976
#define XATTR_NAME_SMACKTRANSMUTE 58,2044
#define XATTR_NAME_SMACKMMAP 59,2122
#define XATTR_CAPS_SUFFIX 61,2191
#define XATTR_NAME_CAPS 62,2230
#define XATTR_POSIX_ACL_ACCESS 64,2295
#define XATTR_NAME_POSIX_ACL_ACCESS 65,2346
#define XATTR_POSIX_ACL_DEFAULT 66,2425
#define XATTR_NAME_POSIX_ACL_DEFAULT 67,2478

/usr/include/ctype.h,2719
#define	_CTYPE_H	24,920
#  define _ISbit(42,1422
#  define _ISbit(44,1502
  _ISupper 49,1596
  _ISupper = _ISbit 49,1596
  _ISlower 50,1639
  _ISlower = _ISbit 50,1639
  _ISalpha 51,1682
  _ISalpha = _ISbit 51,1682
  _ISdigit 52,1726
  _ISdigit = _ISbit 52,1726
  _ISxdigit 53,1767
  _ISxdigit = _ISbit 53,1767
  _ISspace 54,1821
  _ISspace = _ISbit 54,1821
  _ISprint 55,1865
  _ISprint = _ISbit 55,1865
  _ISgraph 56,1907
  _ISgraph = _ISbit 56,1907
  _ISblank 57,1950
  _ISblank = _ISbit 57,1950
  _IScntrl 58,2011
  _IScntrl = _ISbit 58,2011
  _ISpunct 59,2062
  _ISpunct = _ISbit 59,2062
  _ISalnum 60,2108
  _ISalnum = _ISbit 60,2108
extern const unsigned short int **__ctype_b_loc __ctype_b_loc80,3131
extern const __int32_t **__ctype_tolower_loc __ctype_tolower_loc82,3228
extern const __int32_t **__ctype_toupper_loc __ctype_toupper_loc84,3322
# define __isctype(89,3438
# define __isctype_f(92,3566
#define	__isascii(100,3785
#define	__toascii(101,3857
#define	__exctype(103,3920
extern int tolower 125,4474
#define __tobody(164,5498
# define isalnum(198,6339
# define isalpha(199,6384
# define iscntrl(200,6429
# define isdigit(201,6474
# define islower(202,6519
# define isgraph(203,6564
# define isprint(204,6609
# define ispunct(205,6654
# define isspace(206,6699
# define isupper(207,6744
# define isxdigit(208,6789
#   define isblank(210,6858
__NTH 222,7097
#  define tolower(229,7277
#  define toupper(230,7350
#  define isascii(234,7522
#  define toascii(235,7557
#  define _tolower(237,7593
#  define _toupper(238,7660
#  define __isctype_l(262,8619
# define __exctype_l(265,8724
extern int __tolower_l 288,9386
#  define __tolower_l(296,9725
#  define __toupper_l(298,9828
#  define tolower_l(300,9931
#  define toupper_l(301,9990
#  define __isalnum_l(306,10100
#  define __isalpha_l(307,10159
#  define __iscntrl_l(308,10218
#  define __isdigit_l(309,10277
#  define __islower_l(310,10336
#  define __isgraph_l(311,10395
#  define __isprint_l(312,10454
#  define __ispunct_l(313,10513
#  define __isspace_l(314,10572
#  define __isupper_l(315,10631
#  define __isxdigit_l(316,10690
#  define __isblank_l(318,10752
#   define __isascii_l(321,10859
#   define __toascii_l(322,10908
#  define isalnum_l(325,10967
#  define isalpha_l(326,11015
#  define iscntrl_l(327,11063
#  define isdigit_l(328,11111
#  define islower_l(329,11159
#  define isgraph_l(330,11207
#  define isprint_l(331,11255
#  define ispunct_l(332,11303
#  define isspace_l(333,11351
#  define isupper_l(334,11399
#  define isxdigit_l(335,11447
#  define isblank_l(337,11498
#   define isascii_l(340,11594
#   define toascii_l(341,11643

/usr/include/dirent.h,1301
#define	_DIRENT_H	24,905
typedef __ino_t ino_t;35,1063
typedef __ino64_t ino_t;37,1094
#  define __ino_t_defined39,1128
typedef __ino64_t ino64_t;42,1223
#  define __ino64_t_defined43,1250
# define d_ino	65,1935
# define _D_EXACT_NAMLEN(83,2721
# define _D_ALLOC_NAMLEN(84,2765
# define _D_EXACT_NAMLEN(86,2825
#  define _D_ALLOC_NAMLEN(88,2906
#  define _D_ALLOC_NAMLEN(90,2993
    DT_UNKNOWN 100,3180
# define DT_UNKNOWN	101,3200
    DT_FIFO 102,3231
# define DT_FIFO	103,3248
    DT_CHR 104,3273
# define DT_CHR	105,3289
    DT_DIR 106,3313
# define DT_DIR	107,3329
    DT_BLK 108,3353
# define DT_BLK	109,3369
    DT_REG 110,3393
# define DT_REG	111,3409
    DT_LNK 112,3433
# define DT_LNK	113,3450
    DT_SOCK 114,3474
# define DT_SOCK	115,3492
    DT_WHT 116,3517
# define DT_WHT	117,3533
# define IFTODT(121,3628
# define DTTOIF(122,3677
typedef struct __dirstream DIR;128,3831
extern DIR *opendir opendir135,4073
#  define readdir 169,5205
#   define readdir_r 196,5993
#  define dirfd(227,6925
#    define MAXNAMLEN	237,7208
#    define MAXNAMLEN	239,7248
# define __need_size_t244,7302
#   define scandir 271,8302
#    define scandirat 309,9684
#   define alphasort 335,10598
#   define getdirentries 365,11598
#   define versionsort 391,12343

/usr/include/errno.h,152
# define _ERRNO_H	27,1018
#undef	__need_Emath36,1227
typedef int error_t;68,2296
#  define __error_t_defined	69,2317
# undef __need_error_t71,2355

/usr/include/fcntl.h,1773
#define	_FCNTL_H	23,871
# define __OPEN_NEEDS_MODE(40,1313
# define __OPEN_NEEDS_MODE(43,1426
typedef __mode_t mode_t;50,1741
# define __mode_t_defined51,1766
typedef __off_t off_t;56,1853
typedef __off64_t off_t;58,1883
# define __off_t_defined60,1916
typedef __off64_t off64_t;64,2009
# define __off64_t_defined65,2036
typedef __pid_t pid_t;69,2095
# define __pid_t_defined70,2118
# define __need_timespec75,2272
# define S_IFMT	79,2341
# define S_IFDIR	80,2367
# define S_IFCHR	81,2394
# define S_IFBLK	82,2421
# define S_IFREG	83,2448
#  define S_IFIFO	85,2493
#  define S_IFLNK	88,2547
#  define S_IFSOCK	91,2659
# define S_ISUID	96,2723
# define S_ISGID	97,2789
#  define S_ISVTX	101,3005
# define S_IRUSR	104,3042
# define S_IWUSR	105,3097
# define S_IXUSR	106,3153
# define S_IRWXU	108,3253
# define S_IRGRP	110,3304
# define S_IWGRP	111,3359
# define S_IXGRP	112,3415
# define S_IRWXG	114,3515
# define S_IROTH	116,3548
# define S_IWOTH	117,3604
# define S_IXOTH	118,3661
# define S_IRWXO	120,3763
#  define R_OK	127,3956
#  define W_OK	128,4007
#  define X_OK	129,4059
#  define F_OK	130,4113
# define SEEK_SET	136,4319
# define SEEK_CUR	137,4375
# define SEEK_END	138,4430
# define AT_FDCWD	142,4518
# define AT_SYMLINK_NOFOLLOW	145,4655
# define AT_REMOVEDIR	146,4727
# define AT_SYMLINK_FOLLOW	148,4815
#  define AT_NO_AUTOMOUNT	150,4896
#  define AT_EMPTY_PATH	152,4982
# define AT_EACCESS	154,5060
extern int open 173,5769
#  define open 179,5972
#   define openat 204,6785
#  define creat 225,7411
# define F_ULOCK 242,8077
# define F_LOCK 243,8138
# define F_TLOCK 244,8197
# define F_TEST 245,8265
#   define lockf 253,8530
#   define posix_fadvise 273,9111
#   define posix_fallocate 294,9723

/usr/include/inttypes.h,5349
#define _INTTYPES_H	23,899
#  define __gwchar_t 32,1124
typedef __WCHAR_TYPE__ __gwchar_t;34,1183
#  define __need_wchar_t36,1225
typedef wchar_t __gwchar_t;38,1272
# define ____gwchar_t_defined	40,1308
#  define __PRI64_PREFIX	45,1371
#  define __PRIPTR_PREFIX	46,1400
#  define __PRI64_PREFIX	48,1437
#  define __PRIPTR_PREFIX49,1467
# define PRId8	55,1574
# define PRId16	56,1594
# define PRId32	57,1615
# define PRId64	58,1636
# define PRIdLEAST8	60,1673
# define PRIdLEAST16	61,1697
# define PRIdLEAST32	62,1722
# define PRIdLEAST64	63,1747
# define PRIdFAST8	65,1788
# define PRIdFAST16	66,1811
# define PRIdFAST32	67,1851
# define PRIdFAST64	68,1891
# define PRIi8	71,1932
# define PRIi16	72,1952
# define PRIi32	73,1973
# define PRIi64	74,1994
# define PRIiLEAST8	76,2031
# define PRIiLEAST16	77,2055
# define PRIiLEAST32	78,2080
# define PRIiLEAST64	79,2105
# define PRIiFAST8	81,2146
# define PRIiFAST16	82,2169
# define PRIiFAST32	83,2209
# define PRIiFAST64	84,2249
# define PRIo8	87,2312
# define PRIo16	88,2332
# define PRIo32	89,2353
# define PRIo64	90,2374
# define PRIoLEAST8	92,2411
# define PRIoLEAST16	93,2435
# define PRIoLEAST32	94,2460
# define PRIoLEAST64	95,2485
# define PRIoFAST8	97,2526
# define PRIoFAST16	98,2549
# define PRIoFAST32	99,2589
# define PRIoFAST64	100,2629
# define PRIu8	103,2695
# define PRIu16	104,2715
# define PRIu32	105,2736
# define PRIu64	106,2757
# define PRIuLEAST8	108,2794
# define PRIuLEAST16	109,2818
# define PRIuLEAST32	110,2843
# define PRIuLEAST64	111,2868
# define PRIuFAST8	113,2909
# define PRIuFAST16	114,2932
# define PRIuFAST32	115,2972
# define PRIuFAST64	116,3012
# define PRIx8	119,3091
# define PRIx16	120,3111
# define PRIx32	121,3132
# define PRIx64	122,3153
# define PRIxLEAST8	124,3190
# define PRIxLEAST16	125,3214
# define PRIxLEAST32	126,3239
# define PRIxLEAST64	127,3264
# define PRIxFAST8	129,3305
# define PRIxFAST16	130,3328
# define PRIxFAST32	131,3368
# define PRIxFAST64	132,3408
# define PRIX8	135,3487
# define PRIX16	136,3507
# define PRIX32	137,3528
# define PRIX64	138,3549
# define PRIXLEAST8	140,3586
# define PRIXLEAST16	141,3610
# define PRIXLEAST32	142,3635
# define PRIXLEAST64	143,3660
# define PRIXFAST8	145,3701
# define PRIXFAST16	146,3724
# define PRIXFAST32	147,3764
# define PRIXFAST64	148,3804
# define PRIdMAX	152,3900
# define PRIiMAX	153,3936
# define PRIoMAX	154,3972
# define PRIuMAX	155,4008
# define PRIxMAX	156,4044
# define PRIXMAX	157,4080
# define PRIdPTR	161,4173
# define PRIiPTR	162,4210
# define PRIoPTR	163,4247
# define PRIuPTR	164,4284
# define PRIxPTR	165,4321
# define PRIXPTR	166,4358
# define SCNd8	172,4476
# define SCNd16	173,4498
# define SCNd32	174,4520
# define SCNd64	175,4541
# define SCNdLEAST8	177,4578
# define SCNdLEAST16	178,4604
# define SCNdLEAST32	179,4630
# define SCNdLEAST64	180,4655
# define SCNdFAST8	182,4696
# define SCNdFAST16	183,4721
# define SCNdFAST32	184,4761
# define SCNdFAST64	185,4801
# define SCNi8	188,4873
# define SCNi16	189,4895
# define SCNi32	190,4917
# define SCNi64	191,4938
# define SCNiLEAST8	193,4975
# define SCNiLEAST16	194,5001
# define SCNiLEAST32	195,5027
# define SCNiLEAST64	196,5052
# define SCNiFAST8	198,5093
# define SCNiFAST16	199,5118
# define SCNiFAST32	200,5158
# define SCNiFAST64	201,5198
# define SCNu8	204,5272
# define SCNu16	205,5294
# define SCNu32	206,5316
# define SCNu64	207,5337
# define SCNuLEAST8	209,5374
# define SCNuLEAST16	210,5400
# define SCNuLEAST32	211,5426
# define SCNuLEAST64	212,5451
# define SCNuFAST8	214,5492
# define SCNuFAST16	215,5517
# define SCNuFAST32	216,5557
# define SCNuFAST64	217,5597
# define SCNo8	220,5660
# define SCNo16	221,5682
# define SCNo32	222,5704
# define SCNo64	223,5725
# define SCNoLEAST8	225,5762
# define SCNoLEAST16	226,5788
# define SCNoLEAST32	227,5814
# define SCNoLEAST64	228,5839
# define SCNoFAST8	230,5880
# define SCNoFAST16	231,5905
# define SCNoFAST32	232,5945
# define SCNoFAST64	233,5985
# define SCNx8	236,6054
# define SCNx16	237,6076
# define SCNx32	238,6098
# define SCNx64	239,6119
# define SCNxLEAST8	241,6156
# define SCNxLEAST16	242,6182
# define SCNxLEAST32	243,6208
# define SCNxLEAST64	244,6233
# define SCNxFAST8	246,6274
# define SCNxFAST16	247,6299
# define SCNxFAST32	248,6339
# define SCNxFAST64	249,6379
# define SCNdMAX	253,6475
# define SCNiMAX	254,6511
# define SCNoMAX	255,6547
# define SCNuMAX	256,6583
# define SCNxMAX	257,6619
# define SCNdPTR	260,6710
# define SCNiPTR	261,6747
# define SCNoPTR	262,6784
# define SCNuPTR	263,6821
# define SCNxPTR	264,6858
    long int quot;274,7015
    long int rem;275,7052
  } imaxdiv_t;276,7089
    long long int quot;283,7194
    long long int rem;284,7236
  } imaxdiv_t;285,7278
extern intmax_t imaxabs 291,7339
extern imaxdiv_t imaxdiv 294,7494
extern intmax_t strtoimax 298,7648
extern unsigned long int __strtoul_internal 331,8728
extern long int __wcstol_internal 343,9133
extern unsigned long int __wcstoul_internal 355,9542
extern long long int __strtoll_internal 372,10037
extern unsigned long long int __strtoull_internal 385,10440
extern long long int __wcstoll_internal 401,10892
extern unsigned long long int __wcstoull_internal 415,11320

/usr/include/libgen.h,89
#define _LIBGEN_H	19,820
extern char *dirname dirname26,945
#define basename	35,1330

/usr/include/limits.h,818
#define _LIBC_LIMITS_H_	24,931
#define MB_LEN_MAX	32,1134
#  define _LIMITS_H	43,1548
#  define CHAR_BIT	54,1818
#  define SCHAR_MIN	57,1900
#  define SCHAR_MAX	58,1927
#  define UCHAR_MAX	61,2019
#   define CHAR_MIN	65,2124
#   define CHAR_MAX	66,2146
#   define CHAR_MIN	68,2184
#   define CHAR_MAX	69,2214
#  define SHRT_MIN	73,2319
#  define SHRT_MAX	74,2347
#  define USHRT_MAX	77,2445
#  define INT_MIN	80,2531
#  define INT_MAX	81,2564
#  define UINT_MAX	84,2660
#   define LONG_MAX	88,2779
#   define LONG_MAX	90,2828
#  define LONG_MIN	92,2869
#   define ULONG_MAX	96,3000
#   define ULONG_MAX	98,3052
#   define LLONG_MAX	104,3188
#   define LLONG_MIN	105,3231
#   define ULLONG_MAX	108,3348
#  define LLONG_MIN	132,4131
#  define LLONG_MAX	135,4193
#  define ULLONG_MAX	138,4259

/usr/include/sys/mman.h,305
#define	_SYS_MMAN_H	20,874
#define __need_size_t24,943
typedef __off_t off_t;29,1039
typedef __off64_t off_t;31,1069
# define __off_t_defined33,1102
typedef __mode_t mode_t;37,1160
# define __mode_t_defined38,1185
#define MAP_FAILED	44,1294
extern void *mmap mmap57,1944
#  define mmap 66,2252

/usr/include/sys/param.h,582
#define _SYS_PARAM_H 20,876
#define __need_NULL22,903
#define NBBY	36,1254
# define NGROUPS	39,1322
# define MAXSYMLINKS	42,1406
# define CANBSIZ	45,1488
# define MAXPATHLEN	48,1566
# define NOFILE	51,1642
#  define NCARGS	55,1706
# define NCARGS	59,1855
# define NOGROUP	66,1939
# define NODEV	69,2029
#define DEV_BSIZE 74,2126
#define setbit(78,2187
#define clrbit(79,2244
#define isset(80,2304
#define isclr(81,2362
# define howmany(85,2485
# define roundup(88,2558
# define roundup(92,2786
#define powerof2(94,2851
#define MIN(97,2928
#define MAX(98,2965

/usr/include/signal.h,1052
# define _SIGNAL_H25,950
#  define __sig_atomic_t_defined38,1299
typedef __sig_atomic_t sig_atomic_t;40,1354
# undef __need_sig_atomic_t43,1419
#  define __sigset_t_defined48,1557
typedef __sigset_t sigset_t;49,1586
# undef __need_sigset_t51,1623
typedef __pid_t pid_t;61,1797
#  define __pid_t_defined62,1820
typedef __uid_t uid_t;67,1905
#  define __uid_t_defined68,1928
# define __need_timespec74,2051
typedef void (*__sighandler_t)__sighandler_t85,2291
extern __sighandler_t __sysv_signal 90,2489
#  define signal 111,3185
#   define sigpause(181,5644
# define sigmask(194,6064
# define NSIG	208,6518
typedef __sighandler_t sighandler_t;212,6563
typedef __sighandler_t sig_t;217,6672
extern int sigemptyset 223,6765
struct sigvec315,10187
    __sighandler_t sv_handler;317,10205
    int sv_mask;318,10259
    int sv_flags;320,10316
# define sv_onstack	321,10361
# define SV_ONSTACK	325,10453
# define SV_INTERRUPT	326,10525
# define SV_RESETHAND	327,10591
extern int sigvec 335,11026
# define __need_size_t349,11427

/usr/include/stdio.h,2184
# define _STDIO_H	26,968
# define __need_size_t31,1027
# define __need_NULL32,1050
# define __need_FILE36,1118
# define __need___FILE37,1139
typedef struct _IO_FILE FILE;48,1418
# define __FILE_defined	56,1683
#undef	__need_FILE58,1741
__USING_NAMESPACE_STD(__need_FILE53,1647
typedef struct _IO_FILE __FILE;64,1893
# define ____FILE_defined	66,1926
#undef	__need___FILE68,1988
#define _STDIO_USES_IOSTREAM72,2027
typedef _G_va_list va_list;79,2171
#   define _VA_LIST_DEFINED80,2199
typedef __off_t off_t;90,2357
typedef __off64_t off_t;92,2387
# define __off_t_defined94,2420
typedef __off64_t off64_t;97,2514
# define __off64_t_defined98,2541
typedef __ssize_t ssize_t;102,2604
# define __ssize_t_defined103,2631
typedef _G_fpos_t fpos_t;110,2791
typedef _G_fpos64_t fpos_t;112,2823
typedef _G_fpos64_t fpos64_t;116,2903
#define _IOFBF 120,3003
#define _IOLBF 121,3044
#define _IONBF 122,3084
# define BUFSIZ 127,3168
# define EOF 134,3307
#define SEEK_SET	140,3433
#define SEEK_CUR	141,3488
#define SEEK_END	142,3542
# define SEEK_DATA	144,3608
# define SEEK_HOLE	145,3655
# define P_tmpdir	151,3812
#define stdin 172,4618
#define stdout 173,4638
#define stderr 174,4660
extern int remove 178,4734
#  define tmpfile 200,5425
#  define fopen 291,8417
#  define freopen 292,8441
extern int vsnprintf 390,12070
extern int vasprintf 399,12422
extern int __asprintf 402,12593
extern int asprintf 405,12755
extern int vdprintf 412,12995
extern int dprintf 415,13135
extern int fscanf 425,13419
#  define fscanf 457,14850
#  define scanf 458,14883
#  define sscanf 459,14914
extern int vscanf 479,15493
extern int vsscanf 483,15682
extern int __REDIRECT 494,16164
extern int __REDIRECT 499,16369
extern int __REDIRECT_NTH 502,16533
extern int __isoc99_vfscanf 508,16749
#   define vfscanf 516,17100
#   define vscanf 517,17136
#   define vsscanf 518,17170
#define getc(543,17773
#define putc(585,19099
#   define fseeko 786,26586
#   define ftello 787,26613
#  define fgetpos 811,27321
#  define fsetpos 812,27349
extern int obstack_vprintf 902,30205
extern void flockfile 913,30551
# define __need_getopt927,31137

/usr/include/stdint.h,4576
#define _STDINT_H	23,877
# define __int8_t_defined35,1122
typedef signed char		int8_t;36,1148
typedef short int		int16_t;37,1177
typedef int			int32_t;38,1205
typedef long int		int64_t;40,1250
typedef long long int		int64_t;43,1298
typedef unsigned char		uint8_t;48,1363
typedef unsigned short int	uint16_t;49,1395
typedef unsigned int		uint32_t;51,1459
# define __uint32_t_defined52,1491
typedef unsigned long int	uint64_t;55,1547
typedef unsigned long long int	uint64_t;58,1603
typedef signed char		int_least8_t;65,1689
typedef short int		int_least16_t;66,1724
typedef int			int_least32_t;67,1758
typedef long int		int_least64_t;69,1808
typedef long long int		int_least64_t;72,1861
typedef unsigned char		uint_least8_t;76,1924
typedef unsigned short int	uint_least16_t;77,1962
typedef unsigned int		uint_least32_t;78,2005
typedef unsigned long int	uint_least64_t;80,2064
typedef unsigned long long int	uint_least64_t;83,2126
typedef signed char		int_fast8_t;90,2217
typedef long int		int_fast16_t;92,2272
typedef long int		int_fast32_t;93,2304
typedef long int		int_fast64_t;94,2336
typedef int			int_fast16_t;96,2374
typedef int			int_fast32_t;97,2402
typedef long long int		int_fast64_t;99,2444
typedef unsigned char		uint_fast8_t;103,2506
typedef unsigned long int	uint_fast16_t;105,2564
typedef unsigned long int	uint_fast32_t;106,2605
typedef unsigned long int	uint_fast64_t;107,2646
typedef unsigned int		uint_fast16_t;109,2693
typedef unsigned int		uint_fast32_t;110,2730
typedef unsigned long long int	uint_fast64_t;112,2781
typedef long int		intptr_t;119,2921
#  define __intptr_t_defined120,2949
typedef unsigned long int	uintptr_t;122,2986
typedef int			intptr_t;125,3057
#  define __intptr_t_defined126,3081
typedef unsigned int		uintptr_t;128,3118
typedef long int		intmax_t;134,3212
typedef unsigned long int	uintmax_t;135,3240
typedef long long int		intmax_t;138,3297
typedef unsigned long long int	uintmax_t;140,3344
#  define __INT64_C(145,3417
#  define __UINT64_C(146,3447
#  define __INT64_C(148,3486
#  define __UINT64_C(149,3517
# define INT8_MIN	155,3634
# define INT16_MIN	156,3660
# define INT32_MIN	157,3691
# define INT64_MIN	158,3727
# define INT8_MAX	160,3824
# define INT16_MAX	161,3849
# define INT32_MAX	162,3877
# define INT64_MAX	163,3910
# define UINT8_MAX	166,4007
# define UINT16_MAX	167,4033
# define UINT32_MAX	168,4062
# define UINT64_MAX	169,4097
# define INT_LEAST8_MIN	173,4218
# define INT_LEAST16_MIN	174,4250
# define INT_LEAST32_MIN	175,4286
# define INT_LEAST64_MIN	176,4327
# define INT_LEAST8_MAX	178,4451
# define INT_LEAST16_MAX	179,4482
# define INT_LEAST32_MAX	180,4515
# define INT_LEAST64_MAX	181,4553
# define UINT_LEAST8_MAX	184,4677
# define UINT_LEAST16_MAX	185,4708
# define UINT_LEAST32_MAX	186,4742
# define UINT_LEAST64_MAX	187,4782
# define INT_FAST8_MIN	191,4913
#  define INT_FAST16_MIN	193,4966
#  define INT_FAST32_MIN	194,5017
#  define INT_FAST16_MIN	196,5075
#  define INT_FAST32_MIN	197,5116
# define INT_FAST64_MIN	199,5165
# define INT_FAST8_MAX	201,5294
#  define INT_FAST16_MAX	203,5346
#  define INT_FAST32_MAX	204,5394
#  define INT_FAST16_MAX	206,5449
#  define INT_FAST32_MAX	207,5487
# define INT_FAST64_MAX	209,5533
# define UINT_FAST8_MAX	212,5662
#  define UINT_FAST16_MAX	214,5715
#  define UINT_FAST32_MAX	215,5766
#  define UINT_FAST16_MAX	217,5824
#  define UINT_FAST32_MAX	218,5864
# define UINT_FAST64_MAX	220,5912
#  define INTPTR_MIN	225,6063
#  define INTPTR_MAX	226,6111
#  define UINTPTR_MAX	227,6156
#  define INTPTR_MIN	229,6211
#  define INTPTR_MAX	230,6249
#  define UINTPTR_MAX	231,6284
# define INTMAX_MIN	236,6380
# define INTMAX_MAX	238,6486
# define UINTMAX_MAX	241,6592
#  define PTRDIFF_MIN	248,6747
#  define PTRDIFF_MAX	249,6796
#  define PTRDIFF_MIN	251,6849
#  define PTRDIFF_MAX	252,6888
# define SIG_ATOMIC_MIN	256,6966
# define SIG_ATOMIC_MAX	257,7007
#  define SIZE_MAX	261,7099
#   define SIZE_MAX 264,7184
#   define SIZE_MAX 266,7238
#  define WCHAR_MIN	273,7407
#  define WCHAR_MAX	274,7440
# define WINT_MIN	278,7509
# define WINT_MAX	279,7533
# define INT8_C(283,7583
# define INT16_C(284,7604
# define INT32_C(285,7626
#  define INT64_C(287,7670
#  define INT64_C(289,7705
# define UINT8_C(293,7760
# define UINT16_C(294,7782
# define UINT32_C(295,7805
#  define UINT64_C(297,7855
#  define UINT64_C(299,7892
#  define INTMAX_C(304,7975
#  define UINTMAX_C(305,8004
#  define INTMAX_C(307,8042
#  define UINTMAX_C(308,8072

/usr/include/stdlib.h,2614
#define		__need_size_t27,964
# define	__need_wchar_t29,1020
# define	__need_NULL30,1044
#define	_STDLIB_H	37,1141
#   define __WAIT_INT(50,1553
#   define __WAIT_INT(54,1691
#   define __WAIT_STATUS	63,2059
#   define __WAIT_STATUS_DEFN	64,2091
    union wait *__uptr;__uptr69,2196
    int *__iptr;__iptr70,2220
  } __WAIT_STATUS 71,2237
#   define __WAIT_STATUS_DEFN	72,2296
#  define __WAIT_INT(77,2372
#  define __WAIT_STATUS	78,2410
#  define __WAIT_STATUS_DEFN	79,2441
# define WEXITSTATUS(84,2568
# define WTERMSIG(85,2633
# define WSTOPSIG(86,2692
# define WIFEXITED(87,2751
# define WIFSIGNALED(88,2812
# define WIFSTOPPED(89,2877
#  define WIFCONTINUED(91,2963
    int quot;99,3167
    int rem;100,3200
  } div_t;101,3233
    long int quot;107,3316
    long int rem;108,3353
  } ldiv_t;109,3390
# define __ldiv_t_defined	110,3402
    long long int quot;119,3596
    long long int rem;120,3638
  } lldiv_t;121,3680
# define __lldiv_t_defined	122,3693
#define	RAND_MAX	128,3813
#define	EXIT_FAILURE	133,3962
#define	EXIT_SUCCESS	134,4013
#define	MB_CUR_MAX	138,4139
extern size_t __ctype_get_mb_cur_max 139,4186
__NTH 283,9227
__NTH 292,9446
extern char *l64a l64a305,9820
struct random_data343,11501
    int32_t *fptr;fptr345,11524
    int32_t *rptr;rptr346,11566
    int32_t *state;state347,11607
    int rand_type;348,11658
    int rand_deg;349,11718
    int rand_sep;350,11779
    int32_t *end_ptr;end_ptr351,11838
extern int random_r 354,11902
struct drand48_data412,14024
    unsigned short int __x[__x414,14048
    unsigned short int __old_x[__old_x415,14101
    unsigned short int __c;416,14154
    unsigned short int __init;417,14230
    unsigned long long int __a;418,14291
extern int drand48_r 422,14448
# define __malloc_and_calloc_defined462,16008
extern void abort 514,17943
extern int atexit 518,18073
extern void quick_exit 548,19251
extern void _Exit 556,19519
extern char *getenv getenv563,19716
#   define mkstemp 625,22150
#   define mkstemps 647,22819
#   define mkostemp 679,23959
#   define mkostemps 701,24657
# define __COMPAR_FN_T740,25838
typedef int (*__compar_fn_t)__compar_fn_t741,25861
typedef __compar_fn_t comparison_fn_t;744,25939
typedef int (*__compar_d_fn_t)__compar_d_fn_t748,26010
extern void *bsearch bsearch754,26249
extern long int labs 771,26888
__extension__ extern long long int llabs 775,27008
extern div_t div 784,27297
extern ldiv_t ldiv 786,27389
__extension__ extern lldiv_t lldiv 792,27556
extern char *ecvt ecvt807,28126
#undef __need_malloc_and_calloc962,33961

/usr/include/string.h,745
#define	_STRING_H	23,868
#define	__need_size_t30,971
#define	__need_NULL31,993
# define __CORRECT_ISO_CPP_STRING_H_PROTO36,1145
extern void *memcpy memcpy42,1254
memchr 85,2832
extern void *memchr memchr92,2949
# define strdupa(186,6736
# define strndupa(196,7111
strchr 225,7995
extern char *strchr strchr232,8095
strrchr 252,8695
extern char *strrchr strrchr259,8797
strpbrk 304,10512
extern char *strpbrk strpbrk311,10632
strstr 331,11334
extern char *strstr strstr338,11466
#   define strerror_r 429,14967
index 478,16594
extern char *index index485,16694
rindex 506,17360
extern char *rindex rindex513,17460
extern int ffsl 524,17886
__extension__ extern int ffsll 526,17972
extern int strcasecmp 532,18125

/usr/include/bsd/string.h,32
#define LIBBSD_STRING_H34,1577

/usr/include/sysexits.h,533
#define	_SYSEXITS_H 33,1658
#define EX_OK	92,4287
#define EX__BASE	94,4334
#define EX_USAGE	96,4391
#define EX_DATAERR	97,4442
#define EX_NOINPUT	98,4488
#define EX_NOUSER	99,4534
#define EX_NOHOST	100,4579
#define EX_UNAVAILABLE	101,4624
#define EX_SOFTWARE	102,4676
#define EX_OSERR	103,4729
#define EX_OSFILE	104,4787
#define EX_CANTCREAT	105,4839
#define EX_IOERR	106,4901
#define EX_TEMPFAIL	107,4946
#define EX_PROTOCOL	108,5014
#define EX_NOPERM	109,5068
#define EX_CONFIG	110,5113
#define EX__MAX	112,5161

/usr/include/sys/stat.h,2425
#define	_SYS_STAT_H	24,907
#  define __need_time_t33,1161
#  define __need_timespec36,1241
typedef __dev_t dev_t;45,1497
#  define __dev_t_defined46,1520
typedef __gid_t gid_t;50,1580
#  define __gid_t_defined51,1603
typedef __ino_t ino_t;56,1693
typedef __ino64_t ino_t;58,1724
#  define __ino_t_defined60,1758
typedef __mode_t mode_t;64,1819
#  define __mode_t_defined65,1844
typedef __nlink_t nlink_t;69,1907
#  define __nlink_t_defined70,1934
typedef __off_t off_t;75,2026
typedef __off64_t off_t;77,2057
#  define __off_t_defined79,2091
typedef __uid_t uid_t;83,2151
#  define __uid_t_defined84,2174
typedef __blkcnt_t blkcnt_t;91,2307
typedef __blkcnt64_t blkcnt_t;93,2344
#  define __blkcnt_t_defined95,2384
typedef __blksize_t blksize_t;99,2451
#  define __blksize_t_defined100,2482
# define S_IFMT	109,2647
# define S_IFDIR	110,2673
# define S_IFCHR	111,2700
# define S_IFBLK	112,2727
# define S_IFREG	113,2754
#  define S_IFIFO	115,2799
#  define S_IFLNK	118,2853
#  define S_IFSOCK	122,2989
#define	__S_ISTYPE(128,3070
#define	S_ISDIR(130,3134
#define	S_ISCHR(131,3187
#define	S_ISBLK(132,3240
#define	S_ISREG(133,3293
# define S_ISFIFO(135,3363
# define S_ISLNK(138,3442
# define S_ISLNK(142,3548
# define S_ISSOCK(147,3683
# define S_ISSOCK(149,3766
# define S_TYPEISMQ(157,4086
# define S_TYPEISSEM(158,4129
# define S_TYPEISSHM(159,4174
#define	S_ISUID 165,4253
#define	S_ISGID	166,4312
# define S_ISVTX	170,4520
#define	S_IRUSR	173,4555
#define	S_IWUSR	174,4603
#define	S_IXUSR	175,4653
#define	S_IRWXU	177,4746
# define S_IREAD	180,4840
# define S_IWRITE	181,4865
# define S_IEXEC	182,4891
#define	S_IRGRP	185,4924
#define	S_IWGRP	186,4977
#define	S_IXGRP	187,5031
#define	S_IRWXG	189,5129
#define	S_IROTH	191,5161
#define	S_IWOTH	192,5215
#define	S_IXOTH	193,5270
#define	S_IRWXO	195,5370
# define ACCESSPERMS 200,5461
# define ALLPERMS 201,5519
# define DEFFILEMODE 202,5598
# define S_BLKSIZE	204,5679
extern int stat 210,5831
#  define stat 224,6408
#  define fstat 225,6430
#   define fstatat 249,7256
#   define lstat 273,8006
# define _STAT_VER	392,12378
# define _MKNOD_VER	395,12425
#  define __fxstat 426,13650
#  define __xstat 427,13680
#  define __lxstat 428,13708
__NTH 461,14884
__NTH 468,15026
__NTH 475,15169
__NTH 484,15406
__NTH 492,15583
__NTH 503,15891
__NTH 510,16085
__NTH 517,16234
__NTH 524,16384

/usr/include/time.h,1529
# define _TIME_H	26,956
# define __need_size_t35,1081
# define __need_NULL36,1104
#   define CLK_TCK	46,1411
# define __clock_t_defined	53,1575
typedef __clock_t clock_t;59,1681
#undef	__need_clock_t66,1900
# define __time_t_defined	69,1999
__USING_NAMESPACE_STD(__time_t_defined62,1797
typedef __time_t time_t;75,2103
#undef	__need_time_t82,2316
# define __clockid_t_defined	86,2456
__USING_NAMESPACE_STD(__clockid_t_defined78,2216
typedef __clockid_t clockid_t;91,2565
#undef	__clockid_time_t94,2665
# define __timer_t_defined	98,2805
typedef __timer_t timer_t;103,2905
#undef	__need_timer_t106,2997
# define __timespec_defined	114,3221
struct timespec120,3440
    __time_t tv_sec;122,3460
    __syscall_slong_t tv_nsec;123,3498
#undef	__need_timespec127,3621
struct tm133,3720
  int tm_sec;135,3732
  int tm_min;136,3786
  int tm_hour;137,3824
  int tm_mday;138,3861
  int tm_mon;139,3897
  int tm_year;140,3933
  int tm_wday;141,3970
  int tm_yday;142,4012
  int tm_isdst;143,4056
  long int tm_gmtoff;146,4113
  const char *tm_zone;tm_zone147,4164
  long int __tm_gmtoff;149,4225
  const char *__tm_zone;__tm_zone150,4278
__USING_NAMESPACE_STD(155,4433
struct itimerspec161,4558
    struct timespec it_interval;163,4580
    struct timespec it_value;164,4613
typedef __pid_t pid_t;174,4787
#   define __pid_t_defined175,4810
# define TIME_UTC 182,4919
extern clock_t clock 189,5099
extern time_t mktime 199,5477
# define __isleap(310,9185
extern int clock_getres 339,10078

/usr/include/unistd.h,2591
#define	_UNISTD_H	23,888
# define _POSIX_VERSION	34,1184
# define _POSIX_VERSION	37,1314
# define _POSIX_VERSION	40,1444
# define _POSIX_VERSION	43,1579
# define _POSIX_VERSION	46,1688
# define __POSIX2_THIS_VERSION	53,1862
# define __POSIX2_THIS_VERSION	57,2067
# define __POSIX2_THIS_VERSION	60,2207
# define __POSIX2_THIS_VERSION	63,2321
#define _POSIX2_VERSION	67,2437
#define	_POSIX2_C_BIND	71,2566
#define	_POSIX2_C_DEV	75,2707
#define	_POSIX2_SW_DEV	79,2845
#define _POSIX2_LOCALEDEF 83,2993
# define _XOPEN_VERSION	87,3149
# define _XOPEN_VERSION	89,3205
# define _XOPEN_VERSION	91,3260
# define _XOPEN_VERSION	93,3294
#define _XOPEN_XCU_VERSION	97,3383
#define _XOPEN_XPG2	100,3480
#define _XOPEN_XPG3	101,3502
#define _XOPEN_XPG4	102,3524
#define _XOPEN_UNIX	105,3596
#define	_XOPEN_CRYPT	108,3649
#define	_XOPEN_ENH_I18N	112,3763
#define _XOPEN_LEGACY	115,3839
#define	STDIN_FILENO	210,8578
#define	STDOUT_FILENO	211,8624
#define	STDERR_FILENO	212,8672
typedef __ssize_t ssize_t;220,8838
# define __ssize_t_defined221,8865
#define	__need_size_t224,8900
#define __need_NULL225,8922
typedef __gid_t gid_t;232,9123
#  define __gid_t_defined233,9146
typedef __uid_t uid_t;237,9206
#  define __uid_t_defined238,9229
typedef __off_t off_t;243,9319
typedef __off64_t off_t;245,9350
#  define __off_t_defined247,9384
typedef __off64_t off64_t;250,9479
#  define __off64_t_defined251,9506
typedef __useconds_t useconds_t;255,9573
#  define __useconds_t_defined256,9606
typedef __pid_t pid_t;260,9671
#  define __pid_t_defined261,9694
typedef __intptr_t intptr_t;267,9857
#  define __intptr_t_defined268,9886
typedef __socklen_t socklen_t;274,10005
#  define __socklen_t_defined275,10036
#define	R_OK	281,10162
#define	W_OK	282,10211
#define	X_OK	283,10261
#define	F_OK	284,10313
extern int access 287,10421
# define SEEK_SET	311,11303
# define SEEK_CUR	312,11359
# define SEEK_END	313,11414
#  define SEEK_DATA	315,11482
#  define SEEK_HOLE	316,11530
# define L_SET	322,11703
# define L_INCR	323,11728
# define L_XTND	324,11754
#  define lseek 341,12271
#   define pread 395,14080
#   define pwrite 396,14105
extern long int pathconf 612,22647
#  define getpgrp 641,23565
#   define setpgrp 680,24938
# define __need_getopt892,32864
extern int getdtablesize 1005,37197
#   define truncate 1023,37695
#   define ftruncate 1044,38330
# define F_ULOCK 1097,40272
# define F_LOCK 1098,40333
# define F_TLOCK 1099,40392
# define F_TEST 1100,40460
#   define lockf 1109,40748
# define TEMP_FAILURE_RETRY(1123,41059

inc/rmfs.h,418
#define RMFS_H_4,18
typedef enum ingest_cycles 48,1008
  INGEST_PREVSTATE 49,1037
  INGEST_COLDSTART 50,1062
  INGEST_1 51,1086
  INGEST_1         = INGEST_COLDSTART 51,1086
  INGEST_2 52,1129
  INGEST_2         = INGEST_1 52,1129
  INGEST_3 53,1164
  INGEST_3         = INGEST_1 53,1164
  INGEST_MAX 54,1199
  INGEST_MAX       = INGEST_354,1199
} ingest_cycle_t;55,1229
#define NXT_ingest_cycle(57,1248

inc/rmfs/backingstore.h,1423
#define RMFS_backingstore_H3,29
#define BS_MIN_INF_EXP_SPACE 42,1204
#define BS_FORMAT_VERSION 43,1237
typedef struct backingstore_header_type 45,1271
  unsigned int  header 46,1313
  unsigned int  node_delta 47,1353
  unsigned int  infinite_expiration 48,1393
  unsigned int  barrier 49,1433
  unsigned int  trailer 51,1567
} bs_hdrtyp_t;52,1607
typedef struct backingstore_header 54,1623
  bs_hdrtyp_t   htyp;55,1660
  int           format_version;56,1682
  time_t        time_stamp;57,1714
  pid_t         owner;58,1742
  int           size;59,1765
  int           n_infinite_expiration;60,1787
  int           last_written;61,1826
  char          host[host62,1856
  unsigned long marker;63,1893
} bs_hdr_t;64,1917
typedef struct aligned_backingstore_record 66,1930
    struct backingstore_record 68,1985
      bs_hdrtyp_t htyp;69,2018
      time_t      tm_exp;70,2042
      uint32_t    job_id;71,2068
      int         rn_sig;72,2094
      struct xattr 73,2120
	char      nm[nm74,2141
	char      ctx[ctx75,2173
      } xattr;76,2207
    } _r;77,2222
    bs_hdr_t      align;78,2232
  } _u;79,2257
} bs_record_t;80,2265
typedef enum claim_action 82,2281
  CL_TEST 83,2309
  CL_CLAIM 84,2324
} claim_t;85,2339
typedef enum merge_bs_source 87,2351
  MS_PREDECESSOR 88,2382
  MS_UNDEFINED 89,2406
  MS_BACKINGSTORE 90,2429
  MS_CONTROLLER 91,2452
} merge_bs_source_t;92,2474

inc/rmfs/conf.h,3001
#define RMFS_CONF_H_40,1349
#define CP_UNK_SIZE 45,1417
struct rmfs_param 50,1536
  union ue 51,1556
    void     *ptr;ptr53,1649
    void     *base_addr;base_addr54,1668
    char     *str;str57,1712
    char     *pathnm;pathnm58,1731
    char     *hostname;hostname59,1753
    char    **array_str;array_str60,1777
    unsigned long ul;63,1819
    unsigned int  ui;64,1841
    uint16_t      ui_16;65,1863
    uint32_t      ui_32;66,1888
    long          l;67,1913
    int           i;68,1934
    uid_t         uid;69,1955
    gid_t         gid;70,1978
    pid_t         pid;71,2001
    time_t        time;72,2024
    tri_t         truth;73,2048
    bool_t        btruth;74,2073
    struct aligned_backingstore_record *bs;bs77,2121
  } ue;78,2191
  size_t size;79,2199
  struct path_descriptor 81,2266
    char        *fullpath;fullpath82,2293
    pid_t        owner;83,2320
    int          fd;84,2344
    FILE        *fstr;fstr85,2365
    int          is_mmapped:is_mmapped86,2388
    int          is_filestr:is_filestr87,2419
    int          ours:ours88,2450
  } pd;89,2475
typedef struct rmfs_param rmfs_param_t;91,2486
struct config_param 94,2597
  rmfs_param_t     val;95,2619
  rmfs_param_t     default_val;96,2703
  ptyp_t           typ;97,2735
  struct src 99,2760
    param_source_t   allowed;100,2775
    param_source_t   actual;101,2805
    param_source_t   debug;102,2834
  } src;103,2862
  char            *nm;nm104,2871
  int              h;105,2894
  param_source_t (*collector)collector106,2916
  struct depends_on 107,2970
    char                *nm;nm108,2992
    struct config_param *p_cp;p_cp109,3021
  } depends_on;110,3052
  struct slurm_fuse_opt_desc *p_fopd;p_fopd113,3090
  struct fuse_opt            *p_fo;p_fo114,3182
  struct src_specific 117,3268
    struct slurm_info 118,3292
      ptyp_t                        parent_type;119,3337
      void                         *base_addr;base_addr120,3386
      off_t                         off;121,3433
      partition_info_msg_t         *pim;pim122,3474
      node_info_msg_t              *nim;nim123,3515
      job_info_msg_t               *jim;jim124,3556
      job_step_info_response_msg_t *stim;stim125,3597
      int                           dynamic:dynamic126,3639
      int 127,3686
    } slurm;128,3726
    struct rmfs_info 129,3739
      ptyp_t                        parent_type;130,3762
      int                           local:local131,3811
      int                           fs:fs132,3856
      int                           backingstore:backingstore133,3898
      int 134,3950
    } rmfs;135,3990
  } per_src;136,4002
  struct rnode        *p_rnode;p_rnode139,4037
  struct config_param *p_nxt;p_nxt140,4069
typedef struct config_param config_param_t;142,4162
#define CONFPARAM_REQUIRED 144,4207
#define CONFPARAM_MISSINGOK 145,4258
#define IS_VALID_HASH(147,4311
#define IS_INVALID_HASH(148,4369

inc/rmfs/param.h,1071
#define RMFS_PARAM_H_5,47
#define DEFMODE_FILE 35,1265
#define DEFMODE_DIR 36,1291
#define N_DEFAULT_MODES 37,1317
#define RM_UID_CTL 39,1344
#define RM_UID_DISPATCH 40,1390
#define RM_UIDS 41,1449
#define RNODEPOOL_DEFAULT_MINSIZE 47,1603
struct rnode_params 59,2076
  unsigned long  rn_minpoolsize;60,2098
  unsigned long *rn_allocmap;rn_allocmap62,2132
  rnode_t       *rn_pool;rn_pool63,2162
  unsigned long  rn_maxalloc;65,2191
  unsigned long  rn_basealloc;66,2221
  unsigned long  rn_curalloc;67,2252
  rnode_t       *p_nxt_avail_rn;p_nxt_avail_rn69,2283
  unsigned long  nxt_avail;70,2316
  uid_t               rm_uid[rm_uid72,2345
  mode_t              def_mode[def_mode73,2410
  security_context_t *scon;scon74,2459
  rnode_t       *p_fsroot;p_fsroot77,2506
  rnode_t       *p_cname;p_cname78,2533
  rnode_t       *p_jobd;p_jobd79,2559
  rnode_t       *p_dirty;p_dirty81,2587
  time_t         last_update;82,2630
  unsigned long  fsid;84,2661
  unsigned long  version;85,2684
typedef struct rnode_params rn_param_t;88,2714

inc/rmfs/types.h,8818
#define RMFS_TYPE_H_9,160
enum boolean 17,261
  BFALSE 18,276
  BTRUE 19,290
typedef enum boolean bool_t;21,306
typedef _Bool bool_t;24,342
enum trilene 28,373
  UNSET 29,388
  UNSET = (~0)29,388
  FALSE 30,404
  FALSE = false,30,404
  TRUE 31,421
  TRUE  = true31,421
typedef enum trilene tri_t;33,439
enum opt_flag 40,565
  OPT_INVAL 41,581
  OPT_INVAL          = ~0,41,581
  OPT_NONE 42,608
  OPT_VALID_IF_DEBUG 43,634
  OPT_DEBUG 44,660
  OPT_DEBUG          = OPT_VALID_IF_DEBUG,44,660
  OPT_MANDATORY 45,703
  OPT_MAND 46,729
  OPT_MAND           = OPT_MANDATORY,46,729
  OPT_EXCLUSIVE_ALL 47,767
  OPT_EXCL_ALL 48,793
  OPT_EXCL_ALL       = OPT_EXCLUSIVE_ALL,48,793
  OPT_EXCLUSIVE 49,835
  OPT_EXCLUSIVE      = OPT_EXCLUSIVE_ALL,49,835
  OPT_SELECT_ONE 50,877
  OPT_ONE 51,903
  OPT_ONE            = OPT_SELECT_ONE,51,903
  OPT_NONOPT 52,942
typedef enum opt_flag opt_flg_t;54,1034
enum param_source 69,1452
  PSRC_NONE 70,1472
  PSRC_NOBITS 71,1498
  PSRC_NOBITS        = PSRC_NONE,71,1498
  PSRC_MAC_CONF 73,1535
  PSRC_MAC 74,1561
  PSRC_MAC           = PSRC_MAC_CONF,74,1561
  PSRC_SLURM 76,1600
  PSRC_ENVAR 78,1629
  PSRC_ENV 79,1655
  PSRC_ENV           = PSRC_ENVAR,79,1655
  PSRC_MNT_OPT 81,1691
  PSRC_MNT 82,1717
  PSRC_MNT           = PSRC_MNT_OPT,82,1717
  PSRC_MNT_NONOPT 83,1754
  PSRC_FUSE 84,1819
  PSRC_USERINPUT 86,1848
  PSRC_DEFAULT 88,1888
  PSRC_DERIVED 89,1914
  PSRC_MAX 91,2005
  PSRC_MAX           = PSRC_DERIVED,91,2005
  PSRC_N 92,2042
  PSRC_N             = PSRC_MAX+PSRC_MAX92,2042
  PSRC_LAST 93,2092
  PSRC_LAST          = PSRC_MAX,93,2092
  PSRC_LOPRI 94,2125
  PSRC_LOPRI         = PSRC_LAST,94,2125
  PSRC_LEAST_TRUSTED 95,2159
  PSRC_LEAST_TRUSTED = PSRC_LOPRI,95,2159
  PSRC_FIRST 96,2194
  PSRC_FIRST         = PSRC_NONE+PSRC_NONE96,2194
  PSRC_HIPRI 97,2245
  PSRC_HIPRI         = PSRC_FIRST,97,2245
  PSRC_MOST_TRUSTED 98,2280
  PSRC_MOST_TRUSTED  = PSRC_HIPRI98,2280
typedef enum param_source param_source_t;100,2317
#define PSRCNAME(103,2402
#define BIT(105,2444
#define PSRC_ALLBITS 107,2475
#define ISSET(116,2762
#define ANY(118,2801
#define NOBITS(119,2853
#define PSRC_LSB(121,2896
#define PSRC_MSB(124,2986
#define PSRC_NXT(126,3028
#define PSRC_TEST(127,3062
enum param_type 137,3340
  PTYP_NONE 138,3358
  PTYP_OPAQUE 140,3386
  PTYP_OPAQUE       = PTYP_NONE+PTYP_NONE140,3386
  PTYP_FIRST 141,3421
  PTYP_FIRST        = PTYP_OPAQUE,141,3421
  PTYP_ALPHANUM 143,3457
  PTYP_ALPHANUM     = PTYP_OPAQUE 143,3457
  PTYP_ALPHA_FIRST 144,3496
  PTYP_ALPHA_FIRST  = PTYP_ALPHANUM,144,3496
  PTYP_ALPHA 145,3533
  PTYP_ALPHA        = PTYP_ALPHA_FIRST 145,3533
  PTYP_NUMERICHAR 146,3577
  PTYP_NUMERICHAR   = PTYP_ALPHA_FIRST 146,3577
  PTYP_ALPHA_P2P 147,3675
  PTYP_ALPHA_P2P    = PTYP_ALPHA_FIRST 147,3675
  PTYP_XATTR 148,3746
  PTYP_XATTR        = PTYP_ALPHA_FIRST 148,3746
  PTYP_PATH 149,3844
  PTYP_PATH         = PTYP_ALPHA_FIRST 149,3844
  PTYP_FSVIS_FIRST 150,3942
  PTYP_FSVIS_FIRST  = PTYP_PATH,150,3942
  PTYP_FILE 152,4019
  PTYP_FILE         = PTYP_ALPHA_FIRST 152,4019
  PTYP_FILEXIST 153,4117
  PTYP_FILEXIST     = PTYP_ALPHA_FIRST 153,4117
  PTYP_SYM 154,4215
  PTYP_SYM          = PTYP_ALPHA_FIRST 154,4215
  PTYP_DIREXIST 155,4315
  PTYP_DIREXIST     = PTYP_ALPHA_FIRST 155,4315
  PTYP_DIR 156,4413
  PTYP_DIR          = PTYP_ALPHA_FIRST 156,4413
  PTYP_FSVIS_LAST 157,4512
  PTYP_FSVIS_LAST   = PTYP_DIR,157,4512
  PTYP_HOST 158,4544
  PTYP_HOST         = PTYP_ALPHA_FIRST 158,4544
  PTYP_HOST_FIRST 159,4641
  PTYP_HOST_FIRST   = PTYP_HOST,159,4641
  PTYP_HOSTNAME 160,4674
  PTYP_HOSTNAME     = PTYP_HOST,160,4674
  PTYP_HOST_LAST 161,4707
  PTYP_HOST_LAST    = PTYP_HOST,161,4707
  PTYP_ALPHA_LAST 162,4740
  PTYP_ALPHA_LAST   = PTYP_HOST,162,4740
  PTYP_NUMERIC 164,4774
  PTYP_NUMERIC        = PTYP_ALPHA_LAST 164,4774
  PTYP_INT_FIRST 165,4822
  PTYP_INT_FIRST      = PTYP_NUMERIC,165,4822
  PTYP_NUMERICTIME 166,4895
  PTYP_NUMERICTIME    = PTYP_INT_FIRST 166,4895
  PTYP_NUMTIME 167,4973
  PTYP_NUMTIME        = PTYP_NUMERICTIME,167,4973
  PTYP_NUMTIM_SECS 168,5015
  PTYP_NUMTIM_SECS    = PTYP_INT_FIRST 168,5015
  PTYP_NUMTIME_SECS 169,5097
  PTYP_NUMTIME_SECS   = PTYP_NUMTIM_SECS,169,5097
  PTYP_NUMSIGNED 170,5139
  PTYP_NUMSIGNED      = PTYP_INT_FIRST 170,5139
  PTYP_UNSIGNED_INT 171,5210
  PTYP_UNSIGNED_INT   = PTYP_INT_FIRST 171,5210
  PTYP_UNSIGNED_INT16 172,5254
  PTYP_UNSIGNED_INT16 = PTYP_INT_FIRST 172,5254
  PTYP_UNSIGNED_INT32 173,5298
  PTYP_UNSIGNED_INT32 = PTYP_INT_FIRST 173,5298
  PTYP_UID 174,5342
  PTYP_UID            = PTYP_INT_FIRST 174,5342
  PTYP_PID 175,5386
  PTYP_PID            = PTYP_INT_FIRST 175,5386
  PTYP_TRILENE 176,5430
  PTYP_TRILENE        = PTYP_INT_FIRST 176,5430
  PTYP_BOOLEAN 177,5510
  PTYP_BOOLEAN        = PTYP_INT_FIRST 177,5510
  PTYP_SIGNATURE 178,5591
  PTYP_SIGNATURE      = PTYP_INT_FIRST 178,5591
  PTYP_INT_LAST 179,5636
  PTYP_INT_LAST       = PTYP_SIGNATURE,179,5636
  PTYP_CONTEXT 181,5679
  PTYP_CONTEXT      = PTYP_INT_LAST 181,5679
  PTYP_CNTXT_FIRST 182,5738
  PTYP_CNTXT_FIRST  = PTYP_CONTEXT,182,5738
  PTYP_CNTXT 183,5774
  PTYP_CNTXT        = PTYP_CONTEXT,183,5774
  PTYP_CNTXT_LAST 184,5810
  PTYP_CNTXT_LAST   = PTYP_CONTEXT,184,5810
  PTYP_CLUSTER 187,5866
  PTYP_CLUSTER      = PTYP_CNTXT_LAST 187,5866
  PTYP_SLURM_FIRST 188,5909
  PTYP_SLURM_FIRST  = PTYP_CLUSTER,188,5909
  PTYP_CNTRLMACH 189,5945
  PTYP_CNTRLMACH    = PTYP_SLURM_FIRST 189,5945
  PTYP_PARTITION 190,6003
  PTYP_PARTITION    = PTYP_SLURM_FIRST 190,6003
  PTYP_NODE 191,6065
  PTYP_NODE         = PTYP_SLURM_FIRST 191,6065
  PTYP_JOB 192,6127
  PTYP_JOB          = PTYP_SLURM_FIRST 192,6127
  PTYP_STEP 193,6189
  PTYP_STEP         = PTYP_SLURM_FIRST 193,6189
  PTYP_ALLOCJOB 194,6251
  PTYP_ALLOCJOB     = PTYP_SLURM_FIRST 194,6251
  PTYP_NODESTATE 195,6331
  PTYP_NODESTATE    = PTYP_SLURM_FIRST 195,6331
  PTYP_SLURMVERSION 196,6401
  PTYP_SLURMVERSION = PTYP_SLURM_FIRST 196,6401
  PTYP_SLURMUID 197,6445
  PTYP_SLURMUID     = PTYP_SLURM_FIRST 197,6445
  PTYP_SLURMTMOUT 198,6489
  PTYP_SLURMTMOUT   = PTYP_SLURM_FIRST 198,6489
  PTYP_SPANKENV 199,6534
  PTYP_SPANKENV     = PTYP_SLURM_FIRST 199,6534
  PTYP_SPANKENVSIZE 200,6579
  PTYP_SPANKENVSIZE = PTYP_SLURM_FIRST 200,6579
  PTYP_JSUB_PLUGIN 201,6624
  PTYP_JSUB_PLUGIN  = PTYP_SLURM_FIRST 201,6624
  PTYP_GRES_PLUGIN 202,6669
  PTYP_GRES_PLUGIN  = PTYP_SLURM_FIRST 202,6669
  PTYP_SLURMUNAME 203,6714
  PTYP_SLURMUNAME   = PTYP_SLURM_FIRST 203,6714
  PTYP_SLURMDUNAME 204,6759
  PTYP_SLURMDUNAME  = PTYP_SLURM_FIRST 204,6759
  PTYP_SLURM_LAST 205,6804
  PTYP_SLURM_LAST   = PTYP_SLURM_FIRST 205,6804
  PTYP_LAST 207,6850
  PTYP_LAST         = PTYP_SLURM_LAST,207,6850
  PTYP_GUARD 208,6889
  PTYP_GUARD        = PTYP_LAST 208,6889
  PTYP_LEN 209,6926
  PTYP_LEN          = PTYP_GUARD 209,6926
typedef enum param_type ptyp_t;211,7012
#define IS_SLURM_TYPE(213,7045
#define IS_NUMERIC_TYPE(214,7137
#define IS_NUMSIGNED_TYPE(215,7225
#define IS_SIGNATURE_TYPE(216,7284
#define IS_ALPHA_TYPE(217,7343
#define IS_CONTEXT_TYPE(218,7435
#define IS_XATTR_TYPE(219,7527
#define IS_OPAQUE_TYPE(220,7607
#define IS_VALID_TYPE(221,7663
#define IS_BOOLEAN_TYPE(222,7741
#define IS_TRILENE_TYPE(223,7798
#define IS_TRUTH_TYPE(224,7855
#define IS_LOGICAL_TYPE(225,7936
#define IS_FSVIS_TYPE(226,7990
#define IS_HOST_TYPE(227,8080
#define OPAQUE_EMIT 233,8313
enum slurmfs_exitcode 238,8369
  ExitOK 239,8393
  ExitOK             = EX_OK,239,8393
  Exit_OK 240,8423
  Exit_OK            = EX_OK,240,8423
  ErrExit_ENOMEM 241,8453
  ErrExit_ENOMEM     = EX__BASE-EX__BASE241,8453
  ErrExit_ARGPARSE 242,8533
  ErrExit_ARGPARSE   = EX_USAGE,242,8533
  ErrExit_INCOMPLETE 243,8566
  ErrExit_INCOMPLETE = EX_DATAERR,243,8566
  ErrExit_CONFIG 244,8601
  ErrExit_CONFIG     = EX_CONFIG,244,8601
  ErrExit_UNAVAIL 245,8635
  ErrExit_UNAVAIL    = EX_UNAVAILABLE,245,8635
  ErrExit_NOPERM 246,8674
  ErrExit_NOPERM     = EX_NOPERM,246,8674
  ErrExit_OSERR 247,8708
  ErrExit_OSERR      = EX_OSERR,247,8708
  ErrExit_TEMPFAIL 248,8741
  ErrExit_TEMPFAIL   = EX_TEMPFAIL,248,8741
  ErrExit_INTERNAL 249,8777
  ErrExit_INTERNAL   = EX_SOFTWARE,249,8777
  ErrExit_STUCK 251,8816
  ErrExit_STUCK      = EX_OK+EX_OK251,8816
  ErrExit_SLURM 252,8886
  ErrExit_SLURM      = EX_OK+EX_OK252,8886
  ErrExit_ASSERT 253,8941
  ErrExit_ASSERT     = EX_OK+EX_OK253,8941
  ErrExit_NOMEM 254,9019
  ErrExit_NOMEM      = EX_OK+EX_OK254,9019
  ErrExit_WARN 255,9071
  ErrExit_WARN       = EX_OK+EX_OK255,9071
typedef enum slurmfs_exitcode rmfs_exitcode_t;257,9132
#define max(272,9500
#define min(279,9633

inc/rmfs/rnode.h,4920
#define RNODE_H_55,2628
enum rnode_type 77,3035
  RN_NONE 78,3053
  RN_FIRST 79,3076
  RN_FIRST        = RN_NONE,79,3076
  RN_PROVISION 80,3105
  RN_PROVISION    = RN_FIRST,80,3105
  RN_GUARD 81,3135
  RN_GUARD        = RN_FIRST 81,3135
  RND_ROOT 83,3187
  RND_ROOT        = RN_FIRST 83,3187
  RND_CLUSTER 84,3236
  RND_CLUSTER     = RN_FIRST 84,3236
  RND_PARTS 86,3286
  RND_PARTS       = RN_FIRST 86,3286
  RND_PARTITIONS 87,3335
  RND_PARTITIONS  = RND_PARTS,87,3335
  RND_PARTNAME 88,3366
  RND_PARTNAME    = RN_FIRST 88,3366
  RND_NODES 90,3416
  RND_NODES       = RN_FIRST 90,3416
  RND_NODENAME 91,3465
  RND_NODENAME    = RN_FIRST 91,3465
  RND_JOBS 93,3515
  RND_JOBS        = RN_FIRST 93,3515
  RND_JOBID 94,3564
  RND_JOBID       = RN_FIRST 94,3564
  RND_JOBNAME 95,3613
  RND_JOBNAME     = RND_JOBID,95,3613
  RND_JOBSTEPS 97,3645
  RND_JOBSTEPS    = RN_FIRST 97,3645
  RND_JOBSTEPID 98,3695
  RND_JOBSTEPID   = RN_FIRST 98,3695
  RND_JOBSTEP 99,3745
  RND_JOBSTEP     = RND_JOBSTEPID,99,3745
  RND_JOBSTEPNAME 100,3780
  RND_JOBSTEPNAME = RND_JOBSTEPID,100,3780
  RND_JOBSTEP_CTX,103,3834
  RND_JOBSTEP_LAUNCH,104,3853
  RND_RESV,105,3875
  RND_RESERVATION,106,3887
  RNF_ALLOCJOB 109,3914
  RNF_ALLOCJOB    = RN_FIRST 109,3914
  RND_NODESTATE 110,3964
  RND_NODESTATE   = RN_FIRST 110,3964
  RND_ATTRIBUTES 112,4015
  RND_ATTRIBUTES  = RN_FIRST 112,4015
  RNF_ATTRIBUTE 113,4065
  RNF_ATTRIBUTE   = RN_FIRST 113,4065
  RNF_ATTR 114,4115
  RNF_ATTR        = RNF_ATTRIBUTE,114,4115
  RND_CONTROL 116,4151
  RND_CONTROL     = RN_FIRST 116,4151
  RND_CTRL 117,4201
  RND_CTRL        = RND_CONTROL,117,4201
  RNF_CONTEXT 119,4235
  RNF_CONTEXT     = RN_FIRST 119,4235
  RNF_CNTXT 120,4285
  RNF_CNTXT       = RNF_CONTEXT,120,4285
  RNF_CNTX 121,4318
  RNF_CNTX        = RNF_CONTEXT,121,4318
  RNF_KNOB 123,4354
  RNF_KNOB        = RN_FIRST 123,4354
  RNF_EXEC 124,4404
  RNF_EXEC        = RNF_KNOB,124,4404
  RNF_SIGNATURE 126,4437
  RNF_SIGNATURE   = RN_FIRST 126,4437
  RNF_SIG 127,4487
  RNF_SIG         = RNF_SIGNATURE,127,4487
  RND_RNPARAMS 129,4525
  RND_RNPARAMS    = RN_FIRST 129,4525
  RND_PARAMS 130,4575
  RND_PARAMS      = RND_RNPARAMS,130,4575
  RN_RAZE 132,4610
  RN_RAZE         = RN_FIRST 132,4610
  RN_LAST 133,4660
  RN_LAST         = RN_RAZE,133,4660
  RN_LEN 135,4692
  RN_LEN          = RN_LAST 135,4692
  RN_BASEALLOC 137,4743
  RN_BASEALLOC    = RND_ROOT,137,4743
  RN_INVALID 138,4773
  RN_INVALID      = (~0)138,4773
typedef enum rnode_type rn_type_t;141,4826
#define IS_RTYPE_BUILDABLE(143,4862
#define IS_RTYPE_VALID(148,5039
#define IS_RTYPE_ATTR_SUBTYPE(150,5101
#define IS_RTYPE_ATTRIBUTE(153,5258
#define IS_RTYPE_CONTROL(154,5348
#define IS_RTYPE_CTL(159,5533
#define IS_RTYPE_XATTRIBUTE(161,5593
#define IS_RTYPE_XATTR(162,5651
#define MAX_RN_CMDS 174,5923
struct rnode 175,5947
  rn_type_t            rtype;176,5962
  unsigned long        rino;177,5992
  char                *nm;nm178,6079
  struct rnode      *(*buildfn)buildfn181,6174
  struct config_param *p_cp;p_cp183,6242
  int                  gen;184,6271
  time_t               ctime;185,6299
  uid_t                uid;186,6329
  gid_t                gid;187,6357
  void                *p_dyntyp;p_dyntyp188,6385
  int                  h;189,6418
  struct rnode        *nxt_dirty;nxt_dirty192,6485
  struct rnode        *signature;signature193,6582
  struct rnode        *prev_version;prev_version194,6679
  struct attr_desc 203,7056
    struct config_param *table;table204,7077
    tri_t              (*is_mine)is_mine205,7109
  } attr_desc;206,7167
  struct is 209,7255
    unsigned int   dir:dir210,7269
    unsigned int   file:file211,7295
    unsigned int   link:link212,7322
  } is;213,7349
  struct may_be 216,7427
    unsigned int 217,7445
    unsigned int      controllable:controllable218,7498
    unsigned int      dirty:dirty219,7536
    unsigned int      readable:readable220,7567
    unsigned int      writable:writable221,7601
    unsigned int      execable:execable222,7635
    unsigned int 223,7669
    struct rnode     *notify;notify225,7700
  } maybe;226,7730
  struct rn_ctl 229,7811
    enum rnode_type  rtype;230,7829
    char            *nm;nm231,7909
    tri_t          (*fn)fn232,7934
  } ctl[ctl233,7999
  int                  n_children;236,8100
  struct rnode        *children;children237,8136
  struct rnode        *parent;parent238,8224
  struct rnode        *attr;attr239,8313
  struct rnode        *subdir;subdir240,8401
  int                  n_xattr;242,8492
  struct config_param *xattr;xattr243,8580
typedef struct rnode  rnode_t;246,8672
typedef struct rn_ctl rn_ctl_t;247,8703
struct convtyp 250,8777
  enum param_type ptyp;251,8794
  rn_type_t       rtyp;252,8818
typedef struct convtyp pt2rn_t;254,8845

inc/rmfs/misc.h,30
#define RMFS_MISCSUBR_H_3,26

inc/linkage/fuse.h,502
#define RMFS_FUSE_LINKAGE_H_10,118
#define FUSE_USE_VERSION 13,173
struct slurm_fuse_opt_desc 26,439
  char                *_s;_s27,468
  char                *_long;_long28,495
  char                *nm;nm30,568
  struct config_param *p_cp;p_cp31,639
  char                *help;help33,708
  opt_flg_t            oflg;34,779
typedef struct slurm_fuse_opt_desc slurm_fuse_opt_desc_t;36,849
#define N_SLURM_FOPTS 44,1173
#define N_SLURMFS_CONFIG 45,1252
struct fuse_args f_args;52,1442

inc/linkage/selinux.h,455
#define SELINUX_LINKAGE_H_6,59
#define XATTR_NM_MAXLEN 15,214
#define XATTR_CTX_MAXLEN 16,246
#define CTX_XATTR_NM 20,349
#define ctx_DEFAULT 21,394
#define CTX_DEFAULT_S0 22,449
#define CTX_JOBID 23,507
#define CTX_JOBID_S0 24,565
#define CTX_JOBID_EXEC 25,626
#define CTX_JOBID_EXEC_S0 26,689
#define CTX_JOBID_DEFAULT 28,756
#define CTX_DEFAULT 29,858
#define XATTR_SIG 31,965
#define XATTR_SIGTYP 32,1012
#define SIGTYP_DJBHASH 33,1057

lib/rnode/rn_public.c,55
(*get_rn_buildfn(get_rn_buildfn20,430
mk_fs(46,1103

lib/rnode/rn_alloc.c,122
bsalloc(10,159
bsalloc_init(21,331
backingstore_valid(27,453
rn_poolinit(60,1639
rn_alloc(145,4588
rn_raze(213,6384

lib/rnode/rn_provision.c,21
rn_provision(13,301

lib/rnode/rn_cast.c,46
rn_cast(9,128
rn_cast_attr_typconv(179,4796

lib/rnode/rn_subr.c,42
attr_cnt_cp(9,100
link_xattr2rn 49,1005

lib/rnode/rn_mkcname.c,42
is_cname_attr(18,375
rn_mkcname(48,1005

lib/rnode/rn_mkpart.c,39
rn_mkpartd(10,214
rn_mkpart(123,3847

lib/rnode/rn_mkjob.c,62
rn_mkjobd(10,201
rn_resetugid(152,4538
rn_mkjobid(182,5099

lib/rnode/rn_mkstep.c,44
rn_mkjobstepd(9,204
rn_mkjobstep(159,4705

lib/rnode/rn_mknode.c,121
rn_mknoded(9,207
rn_mknode(123,3808
#define MAX_STATE_STR_LEN 211,6430
rn_mknstate(214,6471
rn_mkallocjob(345,10683

lib/rnode/rn_mkattr.c,185
rn_mkattrd(10,242
mkattr_knob(138,4085
(*get_rn_signfn(get_rn_signfn158,4572
mkattr_sig(196,5503
mkattr_xattr_ctx(255,7205
rn_mkattr(362,10270
getconfig_from_myattrnm(471,13636

lib/rnode/rn_mkctl.c,18
rn_mkctld(18,637

lib/rnode/rn_mkfsroot.c,43
is_fsroot_attr(9,112
rn_mkfsroot(60,1546

lib/rnode/rmfs_param.c,584
static int the_rn_paramtab_lock 11,214
rn_param_t rn_paramtab 12,251
rn_paramtab_lock(15,289
rn_paramtab_release(22,431
get_rn_params(41,872
set_rnparam_rn(53,1065
set_rnparam_time(73,1419
set_rnparam_ul(88,1712
get_rnparam_fsroot(104,2101
get_rnparam_rn(121,2412
get_rnparam_ulp(136,2702
get_rnparam_ul(151,2999
get_rnparam_uidp(167,3304
get_rnparam_modep(182,3588
get_rnparam_fsid(198,3866
get_rnparam_version(214,4133
get_rnparam_modep_offset(230,4410
rn_param_adddirty(249,4792
set_rnparam_fsroot(276,5423
set_rnparam_cname(300,6004
set_rnparam_jobd(324,6573

lib/rnode/rn_tab.c,369
rnode_t rnode_buildtab[rnode_buildtab49,1972
  { .rtype=rtype102,5612
  { .rtype=rtype104,5785
  { .rtype=rtype107,5960
  { .rtype=rtype109,6133
  { .rtype=rtype111,6307
  { .rtype=rtype114,6499
  { .rtype=rtype118,6681
  { .rtype=rtype121,6857
pt2rn_t p2r_typ_convtab[p2r_typ_convtab136,7360
pt2rn_t p2r_typ_rm_convtab[p2r_typ_rm_convtab167,8905

lib/rnode/rn_ctlroot.c,230
cleanup_file(10,68
cleanup(35,483
rn_ctlroot_umount(42,611
effluviate_one_rn(63,1080
effluviate_rnode(112,2586
effluviate_fstree(134,3061
rn_ctlroot_effluviate(156,3620
rn_ctlroot_write(167,3880
rn_ctlroot_check(196,4430

lib/rnode/rn_ctljobid.c,258
jobid_sigdesc_tab[jobid_sigdesc_tab9,126
rn_getsig(20,666
rn_ctljobid_sign(73,2080
rn_ctljobid_read(218,6509
rn_ctljobid_write(228,6755
rn_jobid_matchloose(242,6973
rn_jobid_loosematch(276,7940
rn_jobid_matchsig(281,8003
rn_jobid_addxattr(317,8755

lib/fuseops/namer.c,14
namer(12,172

lib/fuseops/rmfs_init.c,18
rmfs_init(12,183

lib/fuseops/rmfs_access.c,20
rmfs_access(12,188

lib/fuseops/rmfs_getattr.c,19
rmfs_getattr(5,24

lib/fuseops/rmfs_statfs.c,18
rmfs_statfs(5,24

lib/fuseops/rmfs_open.c,16
rmfs_open(5,24

lib/fuseops/rmfs_readdir.c,141
#define FILLSTAT_DEFAULT 4,20
#define FILLSTAT_DOT 5,47
#define FILLSTAT_DOTDOT 6,74
rmfs_readdir_statfiller(9,107
rmfs_readdir(58,1286

lib/fuseops/rmfs_read.c,16
rmfs_read(5,24

lib/fuseops/rmfs_trunc.c,17
rmfs_trunc(5,24

lib/fuseops/rmfs_write.c,17
rmfs_write(5,24

lib/fuseops/rmfs_xattr.c,68
rmfs_getxattr(5,24
rmfs_setxattr(65,1513
rmfs_listxattr(139,3202

lib/fuseops/rmfs_poll.c,16
rmfs_poll(5,24

lib/fuseops/rmfs_fuseops_tab.c,45
struct fuse_operations rmfs_file_ops 22,994

lib/fuseops/rmfs_mayaccess.c,23
rmfs_mayaccess(10,154

/home/sts/rmfs/SOURCES/lib/conf/setval/set_val_bool.c,19
set_val_bool(5,25

/home/sts/rmfs/SOURCES/lib/conf/setval/set_val_charptr.c,22
set_val_charptr(8,53

/home/sts/rmfs/SOURCES/lib/conf/setval/set_val_l.c,16
set_val_l(5,25

/home/sts/rmfs/SOURCES/lib/conf/setval/set_val_pid.c,18
set_val_pid(5,25

/home/sts/rmfs/SOURCES/lib/conf/setval/set_val_ptr.c,18
set_val_ptr(8,54

/home/sts/rmfs/SOURCES/lib/conf/setval/set_val_truth.c,20
set_val_truth(5,25

/home/sts/rmfs/SOURCES/lib/conf/setval/set_val_ui.c,17
set_val_ui(5,25

/home/sts/rmfs/SOURCES/lib/conf/setval/set_val_uid.c,18
set_val_uid(5,25

/home/sts/rmfs/SOURCES/lib/conf/setval/set_val_ul.c,17
set_val_ul(5,25

/home/sts/rmfs/SOURCES/lib/conf/cp/cp_subr.c,83
init_hash_cp 9,64
derefable_cp(29,362
dup_cp(41,558
init_dependency_cp(76,1444

/home/sts/rmfs/SOURCES/lib/conf/cp/cp_Debug.c,27
Debug(6,27
isCtlr(19,248

/home/sts/rmfs/SOURCES/lib/conf/cp/cp_effluviate.c,51
effluviate_one_cp(4,24
effluviate_config(38,1030

/home/sts/rmfs/SOURCES/lib/conf/cp/cp_get.c,82
getconfig_fromnm(5,37
getconfig_fromnm_nohash(29,539
getconfig_fromhash(47,913

/home/sts/rmfs/SOURCES/lib/conf/cp/cp_tab.c,399
config_param_t slurmfs_config[slurmfs_config52,2322
  { .nm=nm157,12256
ptyp2pname_tab[ptyp2pname_tab162,12454
slurm_fuse_opt_desc_t slurm_fopts[slurm_fopts226,14208
struct fuse_opt *p_fuseopts_tbl p_fuseopts_tbl301,16233
int              fuseopts_len 302,16308
int fo_max_len 304,16386
char *psrc2srcname_tab[psrc2srcname_tab311,16556
get_fo_max_len(326,16738
decode_psrc(331,16788

/home/sts/rmfs/SOURCES/lib/conf/misc/djb_hash.c,46
djb_strtohash(23,815
djb_accumulate(44,1148

/home/sts/rmfs/SOURCES/lib/conf/misc/misc_subr.c,41
psrc_msb(11,265
internal_strlen(23,413

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_alpha.c,18
typ_isalpha(5,26

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_alphanum.c,50
typ_isalphanum(6,58
typ_isalphanum_ornul(26,438

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_always_fails.c,23
typ_always_fails(6,87

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_check.c,17
typ_check(7,101

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_context.c,20
typ_context(14,233

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_dir.c,35
typ_dir(5,26
typ_direxist(28,510

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_file.c,36
typ_file(5,26
typ_filexist(29,386

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_host.c,15
typ_host(5,26

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_inout.c,39
typ_copyout(9,99
typ_copyin(153,3487

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_numeric.c,169
typ_numeric(5,26
typ_numsigned(25,378
typ_unsigned_int(40,644
typ_unsigned_int16(56,910
typ_unsigned_int32(72,1172
typ_numerictime(88,1434
typ_numtimsecs(96,1664

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_numericchar.c,22
typ_numericchar(5,26

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_opaque.c,17
typ_opaque(6,52

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_path.c,15
typ_path(5,26

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_slurm.c,212
typ_slurm_cluster(22,622
typ_slurm_controlmach(29,757
typ_slurm_partition(36,899
typ_slurm_node(43,1038
typ_slurm_job(50,1165
typ_slurm_step(57,1294
typ_slurm_allocjob(64,1434
typ_slurm_nodestate(71,1576

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_truth.c,266
typ_trilene(5,26
static struct truth_hash 20,297
  char *str;str21,324
  tri_t truth;22,337
  int   h;23,352
} truth_hash_tab[truth_hash_tab24,363
typ_boolean(46,1083
tri2str[tri2str87,1976
bool2str[bool2str89,2025
b2boolstr(92,2067
t2tristr(108,2358

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_xattr.c,16
typ_xattr(5,26

/home/sts/rmfs/SOURCES/lib/collect/collect_slurm_part.c,123
config_param_t partinfodesc_tab[partinfodesc_tab13,312
collectslurm_attr_part(34,1517
collectslurm_partitions(103,3227

/home/sts/rmfs/SOURCES/lib/collect/collect_slurm_node.c,118
config_param_t nodeinfodesc_tab[nodeinfodesc_tab12,311
collectslurm_attr_node(55,3120
collectslurm_nodes(174,6274

/home/sts/rmfs/SOURCES/lib/collect/collect_slurm_job.c,114
config_param_t jobinfodesc_tab[jobinfodesc_tab13,312
collectslurm_attr_job(61,3769
collectslurm_jobs(196,7419

/home/sts/rmfs/SOURCES/lib/collect/collect_slurm_step.c,121
config_param_t stepinfodesc_tab[stepinfodesc_tab14,313
collectslurm_attr_step(36,1759
collectslurm_jobsteps(114,3871

/home/sts/rmfs/SOURCES/lib/collect/collect_slurm.c,223
collectslurm_api_version(19,616
collectslurm_attr(50,1473
collectslurm_confparam(181,5929
set_val_slurm(226,7085
time_t slurm_update_time 369,10793
slurm_ctl_conf_t *p_slcnf p_slcnf370,10834
collect_slurm(373,10884

/home/sts/rmfs/SOURCES/lib/collect/collect_fuse.c,380
static int select_only_one 40,1270
parse_an_arg(43,1307
getfuseoptdesc_fromconfig(113,3278
construct_fuse_mountopts(141,4116
  enum { NOTHING 143,4192
  enum { NOTHING = 0, TERMINATOR 143,4192
  enum { NOTHING = 0, TERMINATOR = 1, OPT 143,4192
  enum { NOTHING = 0, TERMINATOR = 1, OPT = 2, NONOPT 143,4192
static int term_count 281,8517
collect_fuse_mountopts(284,8560

/home/sts/rmfs/SOURCES/lib/collect/collect_backingstore.c,525
tri_t claim_BackingStore(12,363
tri_t open_BackingStore(16,486
tri_t merge_BackingStore(20,575
tri_t requestWrite_BackingStore(24,678
tri_t write_modifiedrnode_toBackingStore(28,748
tri_t spawn_BackingStorelistener(32,811
prune_Backingstore(44,1086
claim_BackingStore(128,3084
spawn_exporter(189,4544
bs_processreq(214,5182
bs_handlelistenrequests(260,6562
spawn_listener(316,8109
spawn_BackingStorelistener(340,8649
merge_BackingStore(370,9432
open_BackingStore(483,13283
requestWrite_BackingStore(662,19102

/home/sts/rmfs/SOURCES/lib/collect/typ_slurm.c,41
ptyp_t slurm2basetyp[slurm2basetyp4,20

/home/sts/rmfs/SOURCES/lib/collect/collect_os.c,185
mkdir_varrun(10,127
varrun_opencp(43,816
collectos_pid(142,3499
#define _HOST_NAME_MAX 160,3925
collectos_hostname(164,3989
collectos_pidfile(195,4887
record_mountpoint(245,6320

/home/sts/rmfs/SOURCES/lib/collect/collect_predecessor.c,106
predecessor_alive(18,309
claim_varrun(138,3926
predecessor_umount(145,4083
collect_predstate(197,5658

/home/sts/rmfs/SOURCES/lib/collect/collect_macconf.c,52
collect_macconf(13,293
collectmac_context(60,1485

/home/sts/rmfs/SOURCES/lib/collect/collect_env.c,18
collect_env(7,37

/home/sts/rmfs/SOURCES/lib/collect/collect_cp.c,17
collect_cp(6,36

/home/sts/rmfs/SOURCES/lib/collect/calcul.c,103
calcul_derived(5,35
calcul_isController(15,188
calcul_rnodepool(43,960
calcul_unmountwait(111,3122

/home/sts/rmfs/SOURCES/lib/collect/collect_default.c,22
collect_default(7,37

slu_rmfs/ingest.c,91
char *src2str[src2str56,2228
config_consistent_complete(75,2508
ingest_config(139,4098

slu_rmfs/mount.c,72
already_mounted(11,116
reclaim_files(65,1631
request_unmount(88,2278

slu_rmfs/usage.c,120
char   *pusage_msg;pusage_msg9,80
Usage(16,181
static int caught_in_a_loop 27,449
ErrExit(30,488
CleanExit(56,916

slu_rmfs/slu_rmfs.c,13
main(16,410

/home/sts/rmfs/SOURCES/lib/conf/typ/typ_table.c,0

lib/rnode/rn_README.c,0

inc/linkage/slurm.h,0

/usr/include/linux/stddef.h,0
