
/usr/include/fuse/fuse.h,3503
#define _FUSE_H_10,216
#define FUSE_USE_VERSION 23,599
typedef int (*fuse_fill_dir_t)fuse_fill_dir_t58,1432
typedef struct fuse_dirhandle *fuse_dirh_t;fuse_dirh_t62,1577
typedef int (*fuse_dirfil_t)fuse_dirfil_t63,1621
struct fuse_operations 88,2647
	int (*getattr)getattr95,2867
	int (*readlink)readlink105,3240
	int (*getdir)getdir108,3331
	int (*mknod)mknod116,3603
	int (*mkdir)mkdir124,3865
	int (*unlink)unlink127,3926
	int (*rmdir)rmdir130,3985
	int (*symlink)symlink133,4047
	int (*rename)rename136,4116
	int (*link)link139,4199
	int (*chmod)chmod142,4288
	int (*chown)chown145,4372
	int (*truncate)truncate148,4451
	int (*utime)utime154,4599
	int (*open)open173,5321
	int (*read)read186,5795
	int (*write)write197,6133
	int (*statfs)statfs207,6424
	int (*flush)flush232,7464
	int (*release)release248,8058
	int (*fsync)fsync257,8296
	int (*setxattr)setxattr260,8389
	int (*getxattr)getxattr263,8496
	int (*listxattr)listxattr266,8593
	int (*removexattr)removexattr269,8679
	int (*opendir)opendir281,9086
	int (*readdir)readdir304,9949
	int (*releasedir)releasedir311,10104
	int (*fsyncdir)fsyncdir320,10352
	void *(*init)init332,10667
	void (*destroy)destroy341,10817
	int (*access)access354,11137
	int (*create)create368,11501
	int (*ftruncate)ftruncate382,11924
	int (*fgetattr)fgetattr396,12340
	int (*lock)lock430,13740
	int (*utimens)utimens444,14098
	int (*bmap)bmap454,14374
	unsigned int flag_nullpath_ok:flag_nullpath_ok466,14817
	unsigned int flag_nopath:flag_nopath480,15318
	unsigned int flag_utime_omit_ok:flag_utime_omit_ok486,15476
	unsigned int flag_reserved:flag_reserved491,15553
	int (*ioctl)ioctl505,16004
	int (*poll)poll525,16659
	int (*write_buf)write_buf536,17001
	int (*read_buf)read_buf555,17672
	int (*flock)flock577,18432
	int (*fallocate)fallocate589,18838
struct fuse_context 598,19072
	struct fuse *fuse;fuse600,19129
	uid_t uid;603,19189
	gid_t gid;606,19242
	pid_t pid;609,19296
	void *private_data;private_data612,19341
	mode_t umask;615,19428
#define fuse_main(645,20439
struct fuse_module 917,29866
	const char *name;name921,29920
	struct fuse_fs *(*factory)factory937,30392
	struct fuse_module *next;next940,30475
	struct fusemod_so *so;so941,30502
	int ctr;942,30526
#define FUSE_REGISTER_MODULE(959,30857
typedef void (*fuse_processor_t)fuse_processor_t976,31502
#  undef fuse_main1013,32847
#    define fuse_main(1015,32895
#    define fuse_new 1017,32994
#    define fuse_setup 1018,33033
#    define fuse_teardown 1019,33076
#    define fuse_operations 1020,33125
#    define fuse_main(1022,33209
#    define fuse_new 1024,33308
#    define fuse_setup 1025,33347
#    define fuse_teardown 1026,33390
#    define fuse_operations 1027,33439
#    define fuse_file_info 1028,33492
#    define fuse_dirfil_t 1032,33650
#    define __fuse_read_cmd 1033,33697
#    define __fuse_process_cmd 1034,33739
#    define __fuse_loop_mt 1035,33787
#      define fuse_operations 1037,33863
#      define fuse_main 1038,33917
#      define fuse_new 1039,33959
#      define __fuse_setup 1040,33999
#      define __fuse_teardown 1041,34045
#      define __fuse_exited 1042,34098
#      define __fuse_set_getcontext_func 1043,34138
#      define fuse_statfs 1045,34214
#      define fuse_operations 1046,34260
#      define fuse_main 1047,34314
#      define fuse_new 1048,34356
#      define FUSE_DEBUG 1049,34396

/usr/include/selinux/context.h,130
#define _SELINUX_CONTEXT_H_2,28
		void *ptr;ptr13,182
	} context_s_t;14,195
	typedef context_s_t *context_t;context_t16,212

/usr/include/selinux/selinux.h,1449
#define _SELINUX_H_2,20
typedef char *security_context_t;security_context_t17,436
typedef unsigned int access_vector_t;125,4953
typedef unsigned short security_class_t;126,4991
struct av_decision 128,5033
	access_vector_t allowed;129,5054
	access_vector_t decided;130,5080
	access_vector_t auditallow;131,5106
	access_vector_t auditdeny;132,5135
	unsigned int seqno;133,5163
	unsigned int flags;134,5184
#define SELINUX_AVD_FLAGS_PERMISSIVE	138,5248
struct selinux_opt 141,5363
	int type;142,5384
	const char *value;value143,5395
union selinux_callback 147,5445
	(*func_log)func_log154,5642
	int (*func_audit)func_audit157,5800
	int (*func_validate)func_validate160,5960
	int (*func_setenforce)func_setenforce162,6043
	int (*func_policyload)func_policyload164,6131
#define SELINUX_CB_LOG	167,6172
#define SELINUX_CB_AUDIT	168,6198
#define SELINUX_CB_VALIDATE	169,6225
#define SELINUX_CB_SETENFORCE	170,6255
#define SELINUX_CB_POLICYLOAD	171,6287
#define SELINUX_ERROR	177,6512
#define SELINUX_WARNING	178,6544
#define SELINUX_INFO	179,6571
#define SELINUX_AVC	180,6595
#define SELINUX_TRANS_DIR	181,6618
	char *name;name303,11346
	int value;304,11359
} SELboolean;305,11371
struct security_class_mapping 356,13091
	const char *name;name357,13123
	const char *perms[perms358,13142
#define MATCHPATHCON_BASEONLY 427,16318
#define MATCHPATHCON_NOTRANS 428,16398
#define MATCHPATHCON_VALIDATE 429,16476

/usr/include/slurm/slurm.h,78104
#define _SLURM_H45,2512
#define SYSTEM_DIMENSIONS 54,2737
#define HIGHEST_DIMENSIONS 55,2765
#define HAVE_SYS_SOCKET_H 58,2857
#    define  __slurm_addr_t_defined77,3372
typedef struct sockaddr_in slurm_addr_t;78,3408
#  define __slurm_cred_t_defined83,3497
typedef struct slurm_job_credential slurm_cred_t;84,3530
#  define  __switch_jobinfo_t_defined89,3703
typedef struct switch_jobinfo switch_jobinfo_t;90,3741
#  define  __job_resources_t_defined	96,3936
typedef struct job_resources job_resources_t;97,4010
#  define  __select_jobinfo_t_defined	103,4201
typedef struct select_jobinfo select_jobinfo_t;104,4276
typedef struct select_nodeinfo select_nodeinfo_t;105,4344
#  define  __jobacctinfo_t_defined110,4531
typedef struct jobacctinfo jobacctinfo_t;111,4566
#  define  __allocation_msg_thread_t_defined117,4775
typedef struct allocation_msg_thread allocation_msg_thread_t;118,4820
#  define  __sbcast_cred_t_defined122,4922
typedef struct sbcast_cred sbcast_cred_t;123,4957
#define SLURM_VERSION_NUMBER 137,5592
#define SLURM_VERSION_NUM(138,5630
#define SLURM_VERSION_MAJOR(139,5696
#define SLURM_VERSION_MINOR(140,5750
#define SLURM_VERSION_MICRO(141,5804
#define	INFINITE16 149,6185
#define	INFINITE 150,6213
#define	INFINITE64 151,6245
#define NO_VAL16 152,6285
#define NO_VAL 153,6313
#define NO_VAL64 154,6345
#define MAX_TASKS_PER_NODE 155,6385
#define MAX_JOB_ID 156,6416
#define SLURM_PENDING_STEP 159,6513
#define SLURM_BATCH_SCRIPT 161,6588
#define SLURM_EXTERN_CONT 163,6676
#define DEFAULT_EIO_SHUTDOWN_WAIT 168,6867
#define SLURM_ID_HASH_NUM 170,6905
#define SLURM_ID_HASH(189,7536
#define SLURM_ID_HASH_JOB_ID(191,7637
#define SLURM_ID_HASH_STEP_ID(192,7715
enum job_states 197,7948
	JOB_PENDING,198,7966
	JOB_RUNNING,199,8017
	JOB_SUSPENDED,200,8072
	JOB_COMPLETE,201,8136
	JOB_CANCELLED,202,8191
	JOB_FAILED,203,8232
	JOB_TIMEOUT,204,8287
	JOB_NODE_FAIL,205,8342
	JOB_PREEMPTED,206,8392
	JOB_BOOT_FAIL,207,8444
	JOB_DEADLINE,208,8503
	JOB_OOM,209,8548
	JOB_END	210,8597
#define	JOB_STATE_BASE	212,8655
#define	JOB_STATE_FLAGS	213,8723
#define JOB_LAUNCH_FAILED 215,8794
#define JOB_UPDATE_DB 216,8831
#define JOB_REQUEUE 217,8907
#define JOB_REQUEUE_HOLD 218,8982
#define JOB_SPECIAL_EXIT 219,9049
#define	JOB_RESIZING	220,9120
#define	JOB_CONFIGURING	223,9280
#define	JOB_COMPLETING	224,9347
#define JOB_STOPPED 225,9419
#define JOB_RECONFIG_FAIL 227,9525
#define	JOB_POWER_UP_NODE 229,9645
#define JOB_REVOKED 231,9750
#define JOB_REQUEUE_FED 232,9813
#define READY_JOB_FATAL	235,9894
#define READY_JOB_ERROR 236,9942
#define READY_NODE_STATE 237,9993
#define READY_JOB_STATE 238,10043
#define MAIL_JOB_BEGIN 240,10104
#define MAIL_JOB_END 241,10167
#define MAIL_JOB_FAIL 242,10228
#define MAIL_JOB_REQUEUE 243,10288
#define MAIL_JOB_TIME100 244,10351
#define MAIL_JOB_TIME90 245,10429
#define MAIL_JOB_TIME80 246,10506
#define MAIL_JOB_TIME50 247,10583
#define MAIL_JOB_STAGE_OUT 248,10660
#define MAIL_ARRAY_TASKS 250,10755
#define NICE_OFFSET 252,10828
enum job_state_reason 257,11065
	WAIT_NO_REASON 259,11125
	WAIT_PRIORITY,260,11179
	WAIT_DEPENDENCY,261,11229
	WAIT_RESOURCES,262,11285
	WAIT_PART_NODE_LIMIT,263,11342
	WAIT_PART_TIME_LIMIT,264,11408
	WAIT_PART_DOWN,265,11474
	WAIT_PART_INACTIVE,266,11526
	WAIT_HELD,267,11585
	WAIT_TIME,268,11633
	WAIT_LICENSES,269,11688
	WAIT_ASSOC_JOB_LIMIT,270,11739
	WAIT_ASSOC_RESOURCE_LIMIT,271,11796
	WAIT_ASSOC_TIME_LIMIT,272,11862
	WAIT_RESERVATION,273,11922
	WAIT_NODE_NOT_AVAIL,274,11973
	WAIT_HELD_USER,275,12034
	WAIT_FRONT_END,276,12078
	FAIL_DOWN_PARTITION,277,12127
	FAIL_DOWN_NODE,278,12181
	FAIL_BAD_CONSTRAINTS,279,12240
	FAIL_SYSTEM,280,12302
	FAIL_LAUNCH,281,12344
	FAIL_EXIT_CODE,282,12386
	FAIL_TIMEOUT,283,12433
	FAIL_INACTIVE_LIMIT,284,12481
	FAIL_ACCOUNT,285,12537
	FAIL_QOS,286,12575
	WAIT_QOS_THRES,287,12606
	WAIT_QOS_JOB_LIMIT,288,12678
	WAIT_QOS_RESOURCE_LIMIT,289,12727
	WAIT_QOS_TIME_LIMIT,290,12785
	WAIT_BLOCK_MAX_ERR,291,12836
	WAIT_BLOCK_D_ACTION,293,12944
	WAIT_CLEANING,295,13036
	WAIT_PROLOG,297,13142
	WAIT_QOS,298,13181
	WAIT_ACCOUNT,299,13216
	WAIT_DEP_INVALID,300,13259
	WAIT_QOS_GRP_CPU,303,13353
	WAIT_QOS_GRP_CPU_MIN,304,13416
	WAIT_QOS_GRP_CPU_RUN_MIN,305,13483
	WAIT_QOS_GRP_JOB,306,13553
	WAIT_QOS_GRP_MEM,307,13610
	WAIT_QOS_GRP_NODE,308,13676
	WAIT_QOS_GRP_SUB_JOB,309,13740
	WAIT_QOS_GRP_WALL,310,13803
	WAIT_QOS_MAX_CPU_PER_JOB,311,13860
	WAIT_QOS_MAX_CPU_MINS_PER_JOB,312,13929
	WAIT_QOS_MAX_NODE_PER_JOB,313,14003
	WAIT_QOS_MAX_WALL_PER_JOB,314,14073
	WAIT_QOS_MAX_CPU_PER_USER,315,14144
	WAIT_QOS_MAX_JOB_PER_USER,316,14214
	WAIT_QOS_MAX_NODE_PER_USER,317,14278
	WAIT_QOS_MAX_SUB_JOB,318,14349
	WAIT_QOS_MIN_CPU,319,14419
	WAIT_ASSOC_GRP_CPU,320,14491
	WAIT_ASSOC_GRP_CPU_MIN,321,14556
	WAIT_ASSOC_GRP_CPU_RUN_MIN,322,14625
	WAIT_ASSOC_GRP_JOB,323,14697
	WAIT_ASSOC_GRP_MEM,324,14756
	WAIT_ASSOC_GRP_NODE,325,14824
	WAIT_ASSOC_GRP_SUB_JOB,326,14890
	WAIT_ASSOC_GRP_WALL,327,14955
	WAIT_ASSOC_MAX_JOBS,328,15014
	WAIT_ASSOC_MAX_CPU_PER_JOB,329,15073
	WAIT_ASSOC_MAX_CPU_MINS_PER_JOB,330,15144
	WAIT_ASSOC_MAX_NODE_PER_JOB,332,15230
	WAIT_ASSOC_MAX_WALL_PER_JOB,333,15302
	WAIT_ASSOC_MAX_SUB_JOB,335,15387
	WAIT_MAX_REQUEUE,337,15460
	WAIT_ARRAY_TASK_LIMIT,338,15522
	WAIT_BURST_BUFFER_RESOURCE,339,15587
	WAIT_BURST_BUFFER_STAGING,340,15646
	FAIL_BURST_BUFFER_OP,341,15709
	WAIT_POWER_NOT_AVAIL,342,15774
	WAIT_POWER_RESERVED,343,15837
	WAIT_ASSOC_GRP_UNK,345,15950
	WAIT_ASSOC_GRP_UNK_MIN,347,16031
	WAIT_ASSOC_GRP_UNK_RUN_MIN,349,16116
	WAIT_ASSOC_MAX_UNK_PER_JOB,351,16204
	WAIT_ASSOC_MAX_UNK_PER_NODE,353,16291
	WAIT_ASSOC_MAX_UNK_MINS_PER_JOB,355,16381
	WAIT_ASSOC_MAX_CPU_PER_NODE,357,16471
	WAIT_ASSOC_GRP_MEM_MIN,358,16544
	WAIT_ASSOC_GRP_MEM_RUN_MIN,360,16628
	WAIT_ASSOC_MAX_MEM_PER_JOB,362,16715
	WAIT_ASSOC_MAX_MEM_PER_NODE,363,16789
	WAIT_ASSOC_MAX_MEM_MINS_PER_JOB,364,16862
	WAIT_ASSOC_GRP_NODE_MIN,366,16951
	WAIT_ASSOC_GRP_NODE_RUN_MIN,367,17021
	WAIT_ASSOC_MAX_NODE_MINS_PER_JOB,368,17094
	WAIT_ASSOC_GRP_ENERGY,370,17183
	WAIT_ASSOC_GRP_ENERGY_MIN,372,17264
	WAIT_ASSOC_GRP_ENERGY_RUN_MIN,374,17349
	WAIT_ASSOC_MAX_ENERGY_PER_JOB,376,17437
	WAIT_ASSOC_MAX_ENERGY_PER_NODE,378,17524
	WAIT_ASSOC_MAX_ENERGY_MINS_PER_JOB,380,17612
	WAIT_ASSOC_GRP_GRES,382,17707
	WAIT_ASSOC_GRP_GRES_MIN,383,17774
	WAIT_ASSOC_GRP_GRES_RUN_MIN,384,17845
	WAIT_ASSOC_MAX_GRES_PER_JOB,385,17919
	WAIT_ASSOC_MAX_GRES_PER_NODE,386,17992
	WAIT_ASSOC_MAX_GRES_MINS_PER_JOB,387,18066
	WAIT_ASSOC_GRP_LIC,389,18155
	WAIT_ASSOC_GRP_LIC_MIN,391,18236
	WAIT_ASSOC_GRP_LIC_RUN_MIN,393,18321
	WAIT_ASSOC_MAX_LIC_PER_JOB,395,18409
	WAIT_ASSOC_MAX_LIC_MINS_PER_JOB,397,18496
	WAIT_ASSOC_GRP_BB,399,18586
	WAIT_ASSOC_GRP_BB_MIN,401,18670
	WAIT_ASSOC_GRP_BB_RUN_MIN,403,18758
	WAIT_ASSOC_MAX_BB_PER_JOB,405,18849
	WAIT_ASSOC_MAX_BB_PER_NODE,407,18939
	WAIT_ASSOC_MAX_BB_MINS_PER_JOB,409,19030
	WAIT_QOS_GRP_UNK,411,19123
	WAIT_QOS_GRP_UNK_MIN,412,19189
	WAIT_QOS_GRP_UNK_RUN_MIN,413,19259
	WAIT_QOS_MAX_UNK_PER_JOB,414,19332
	WAIT_QOS_MAX_UNK_PER_NODE,415,19404
	WAIT_QOS_MAX_UNK_PER_USER,416,19477
	WAIT_QOS_MAX_UNK_MINS_PER_JOB,417,19550
	WAIT_QOS_MIN_UNK,419,19641
	WAIT_QOS_MAX_CPU_PER_NODE,420,19713
	WAIT_QOS_GRP_MEM_MIN,421,19782
	WAIT_QOS_GRP_MEM_RUN_MIN,423,19862
	WAIT_QOS_MAX_MEM_MINS_PER_JOB,425,19945
	WAIT_QOS_MAX_MEM_PER_JOB,427,20035
	WAIT_QOS_MAX_MEM_PER_NODE,428,20103
	WAIT_QOS_MAX_MEM_PER_USER,429,20172
	WAIT_QOS_MIN_MEM,430,20241
	WAIT_QOS_GRP_ENERGY,431,20315
	WAIT_QOS_GRP_ENERGY_MIN,432,20380
	WAIT_QOS_GRP_ENERGY_RUN_MIN,433,20449
	WAIT_QOS_MAX_ENERGY_PER_JOB,434,20522
	WAIT_QOS_MAX_ENERGY_PER_NODE,435,20594
	WAIT_QOS_MAX_ENERGY_PER_USER,436,20667
	WAIT_QOS_MAX_ENERGY_MINS_PER_JOB,437,20740
	WAIT_QOS_MIN_ENERGY,439,20829
	WAIT_QOS_GRP_NODE_MIN,440,20903
	WAIT_QOS_GRP_NODE_RUN_MIN,441,20969
	WAIT_QOS_MAX_NODE_MINS_PER_JOB,442,21038
	WAIT_QOS_MIN_NODE,444,21125
	WAIT_QOS_GRP_GRES,445,21197
	WAIT_QOS_GRP_GRES_MIN,446,21260
	WAIT_QOS_GRP_GRES_RUN_MIN,447,21327
	WAIT_QOS_MAX_GRES_PER_JOB,448,21397
	WAIT_QOS_MAX_GRES_PER_NODE,449,21466
	WAIT_QOS_MAX_GRES_PER_USER,450,21536
	WAIT_QOS_MAX_GRES_MINS_PER_JOB,452,21617
	WAIT_QOS_MIN_GRES,454,21700
	WAIT_QOS_GRP_LIC,455,21771
	WAIT_QOS_GRP_LIC_MIN,456,21837
	WAIT_QOS_GRP_LIC_RUN_MIN,457,21907
	WAIT_QOS_MAX_LIC_PER_JOB,458,21980
	WAIT_QOS_MAX_LIC_PER_USER,459,22052
	WAIT_QOS_MAX_LIC_MINS_PER_JOB,460,22125
	WAIT_QOS_MIN_LIC,462,22216
	WAIT_QOS_GRP_BB,464,22302
	WAIT_QOS_GRP_BB_MIN,466,22384
	WAIT_QOS_GRP_BB_RUN_MIN,468,22470
	WAIT_QOS_MAX_BB_PER_JOB,470,22559
	WAIT_QOS_MAX_BB_PER_NODE,472,22645
	WAIT_QOS_MAX_BB_PER_USER,474,22732
	WAIT_QOS_MAX_BB_MINS_PER_JOB,476,22819
	WAIT_QOS_MIN_BB,478,22913
	FAIL_DEADLINE,480,23002
	WAIT_QOS_MAX_BB_PER_ACCT,482,23083
	WAIT_QOS_MAX_CPU_PER_ACCT,483,23142
	WAIT_QOS_MAX_ENERGY_PER_ACCT,484,23193
	WAIT_QOS_MAX_GRES_PER_ACCT,485,23246
	WAIT_QOS_MAX_NODE_PER_ACCT,486,23297
	WAIT_QOS_MAX_LIC_PER_ACCT,487,23349
	WAIT_QOS_MAX_MEM_PER_ACCT,488,23404
	WAIT_QOS_MAX_UNK_PER_ACCT,489,23457
	WAIT_QOS_MAX_JOB_PER_ACCT,491,23535
	WAIT_QOS_MAX_SUB_JOB_PER_ACCT,492,23602
	WAIT_PART_CONFIG,493,23676
	WAIT_ACCOUNT_POLICY,494,23746
	WAIT_FED_JOB_LOCK,496,23817
	FAIL_OOM	497,23877
enum job_acct_types 500,23921
	JOB_START,501,23943
	JOB_STEP,502,23955
	JOB_SUSPEND,503,23966
	JOB_TERMINATED504,23980
#define PARTITION_SUBMIT	508,24028
#define PARTITION_SCHED 509,24098
#define PARTITION_DOWN	512,24221
#define PARTITION_UP	513,24264
#define PARTITION_DRAIN	514,24323
#define PARTITION_INACTIVE	515,24366
#define PARTITION_ENFORCE_NONE 518,24438
#define PARTITION_ENFORCE_ALL 519,24471
#define PARTITION_ENFORCE_ANY 521,24561
enum connection_type 523,24650
	SELECT_MESH,524,24673
	SELECT_TORUS,525,24715
	SELECT_NAV,526,24759
	SELECT_SMALL,527,24810
	SELECT_HTC_S,528,24860
	SELECT_HTC_D,529,24923
	SELECT_HTC_V,530,24987
	SELECT_HTC_L 531,25049
enum node_use_type 534,25121
	SELECT_COPROCESSOR_MODE,535,25142
	SELECT_VIRTUAL_NODE_MODE,536,25212
	SELECT_NAV_MODE	537,25277
enum select_plugin_type 541,25374
	SELECT_PLUGIN_BLUEGENE 542,25400
	SELECT_PLUGIN_CONS_RES 543,25464
	SELECT_PLUGIN_LINEAR 544,25534
	SELECT_PLUGIN_ALPS 546,25620
	SELECT_PLUGIN_SERIAL 548,25766
	SELECT_PLUGIN_CRAY_LINEAR 549,25815
	SELECT_PLUGIN_CRAY_CONS_RES 550,25881
enum select_jobdata_type 553,25953
	SELECT_JOBDATA_GEOMETRY,554,25980
	SELECT_JOBDATA_ROTATE,555,26055
	SELECT_JOBDATA_CONN_TYPE,556,26108
	SELECT_JOBDATA_BLOCK_ID,557,26173
	SELECT_JOBDATA_NODES,558,26230
	SELECT_JOBDATA_IONODES,559,26278
	SELECT_JOBDATA_NODE_CNT,560,26330
	SELECT_JOBDATA_ALTERED,561,26388
	SELECT_JOBDATA_BLRTS_IMAGE,562,26446
	SELECT_JOBDATA_LINUX_IMAGE,563,26504
	SELECT_JOBDATA_MLOADER_IMAGE,564,26562
	SELECT_JOBDATA_RAMDISK_IMAGE,565,26624
	SELECT_JOBDATA_REBOOT,566,26686
	SELECT_JOBDATA_RESV_ID,567,26739
	SELECT_JOBDATA_PAGG_ID,568,26801
	SELECT_JOBDATA_PTR,569,26865
	SELECT_JOBDATA_BLOCK_PTR,570,26925
	SELECT_JOBDATA_DIM_CNT,571,26988
	SELECT_JOBDATA_BLOCK_NODE_CNT,572,27043
	SELECT_JOBDATA_START_LOC,573,27113
	SELECT_JOBDATA_USER_NAME,575,27200
	SELECT_JOBDATA_CONFIRMED,576,27257
	SELECT_JOBDATA_CLEANING,577,27332
	SELECT_JOBDATA_NETWORK 579,27428
enum select_nodedata_type 582,27490
	SELECT_NODEDATA_BITMAP_SIZE,583,27518
	SELECT_NODEDATA_SUBGRP_SIZE,584,27570
	SELECT_NODEDATA_SUBCNT,585,27622
	SELECT_NODEDATA_BITMAP,586,27674
	SELECT_NODEDATA_STR,588,27780
	SELECT_NODEDATA_PTR,590,27872
	SELECT_NODEDATA_EXTRA_INFO,591,27943
	SELECT_NODEDATA_RACK_MP,593,28035
	SELECT_NODEDATA_MEM_ALLOC,595,28126
	SELECT_NODEDATA_TRES_ALLOC_FMT_STR,596,28178
	SELECT_NODEDATA_TRES_ALLOC_WEIGHTED 598,28276
enum select_print_mode 601,28337
	SELECT_PRINT_HEAD,602,28362
	SELECT_PRINT_DATA,603,28410
	SELECT_PRINT_MIXED,604,28456
	SELECT_PRINT_MIXED_SHORT,605,28503
	SELECT_PRINT_BG_ID,606,28560
	SELECT_PRINT_NODES,607,28608
	SELECT_PRINT_CONNECTION,608,28654
	SELECT_PRINT_ROTATE,609,28716
	SELECT_PRINT_GEOMETRY,610,28769
	SELECT_PRINT_START,611,28818
	SELECT_PRINT_BLRTS_IMAGE,612,28875
	SELECT_PRINT_LINUX_IMAGE,613,28934
	SELECT_PRINT_MLOADER_IMAGE,614,28993
	SELECT_PRINT_RAMDISK_IMAGE,615,29056
	SELECT_PRINT_REBOOT,616,29119
	SELECT_PRINT_RESV_ID,617,29169
	SELECT_PRINT_START_LOC	618,29235
enum select_node_cnt 621,29299
	SELECT_GET_NODE_SCALING,622,29322
	SELECT_GET_NODE_CPU_CNT,623,29394
	SELECT_GET_MP_CPU_CNT,624,29464
	SELECT_APPLY_NODE_MIN_OFFSET,626,29557
	SELECT_APPLY_NODE_MAX_OFFSET,627,29623
	SELECT_SET_NODE_CNT,628,29689
	SELECT_SET_MP_CNT 629,29744
enum acct_gather_profile_info 633,29847
	ACCT_GATHER_PROFILE_DIR,634,29879
	ACCT_GATHER_PROFILE_DEFAULT,635,29950
	ACCT_GATHER_PROFILE_RUNNING 637,30047
#define ACCT_GATHER_PROFILE_NOT_SET 643,30212
#define ACCT_GATHER_PROFILE_NONE 644,30259
#define ACCT_GATHER_PROFILE_ENERGY 645,30306
#define ACCT_GATHER_PROFILE_TASK 646,30353
#define ACCT_GATHER_PROFILE_LUSTRE 647,30400
#define ACCT_GATHER_PROFILE_NETWORK 648,30447
#define ACCT_GATHER_PROFILE_ALL 649,30494
enum jobacct_data_type 652,30567
	JOBACCT_DATA_TOTAL,653,30592
	JOBACCT_DATA_PIPE,654,30642
	JOBACCT_DATA_RUSAGE,655,30696
	JOBACCT_DATA_MAX_VSIZE,657,30804
	JOBACCT_DATA_MAX_VSIZE_ID,658,30857
	JOBACCT_DATA_TOT_VSIZE,659,30917
	JOBACCT_DATA_MAX_RSS,660,30970
	JOBACCT_DATA_MAX_RSS_ID,661,31021
	JOBACCT_DATA_TOT_RSS,662,31079
	JOBACCT_DATA_MAX_PAGES,663,31130
	JOBACCT_DATA_MAX_PAGES_ID,664,31183
	JOBACCT_DATA_TOT_PAGES,665,31243
	JOBACCT_DATA_MIN_CPU,666,31296
	JOBACCT_DATA_MIN_CPU_ID,667,31347
	JOBACCT_DATA_TOT_CPU,668,31405
	JOBACCT_DATA_ACT_CPUFREQ,669,31454
	JOBACCT_DATA_CONSUMED_ENERGY,670,31511
	JOBACCT_DATA_MAX_DISK_READ,671,31572
	JOBACCT_DATA_MAX_DISK_READ_ID,672,31626
	JOBACCT_DATA_TOT_DISK_READ,673,31689
	JOBACCT_DATA_MAX_DISK_WRITE,674,31743
	JOBACCT_DATA_MAX_DISK_WRITE_ID,675,31798
	JOBACCT_DATA_TOT_DISK_WRITE 676,31862
enum acct_energy_type 679,31920
	ENERGY_DATA_JOULES_TASK,680,31944
	ENERGY_DATA_STRUCT,681,31970
	ENERGY_DATA_RECONFIG,682,31991
	ENERGY_DATA_PROFILE,683,32014
	ENERGY_DATA_LAST_POLL,684,32036
	ENERGY_DATA_SENSOR_CNT,685,32060
	ENERGY_DATA_NODE_ENERGY,686,32085
	ENERGY_DATA_NODE_ENERGY_UP687,32111
typedef enum task_dist_states 707,32908
	SLURM_DIST_CYCLIC 709,32993
	SLURM_DIST_CYCLIC               = 0x0001,x0001709,32993
	SLURM_DIST_BLOCK 710,33036
	SLURM_DIST_BLOCK                = 0x0002,x0002710,33036
	SLURM_DIST_ARBITRARY 711,33079
	SLURM_DIST_ARBITRARY            = 0x0003,x0003711,33079
	SLURM_DIST_PLANE 712,33122
	SLURM_DIST_PLANE                = 0x0004,x0004712,33122
	SLURM_DIST_CYCLIC_CYCLIC 713,33165
	SLURM_DIST_CYCLIC_CYCLIC        = 0x0011,x0011713,33165
	SLURM_DIST_CYCLIC_BLOCK 714,33208
	SLURM_DIST_CYCLIC_BLOCK         = 0x0021,x0021714,33208
	SLURM_DIST_CYCLIC_CFULL 715,33251
	SLURM_DIST_CYCLIC_CFULL         = 0x0031,x0031715,33251
	SLURM_DIST_BLOCK_CYCLIC 716,33294
	SLURM_DIST_BLOCK_CYCLIC         = 0x0012,x0012716,33294
	SLURM_DIST_BLOCK_BLOCK 717,33337
	SLURM_DIST_BLOCK_BLOCK          = 0x0022,x0022717,33337
	SLURM_DIST_BLOCK_CFULL 718,33380
	SLURM_DIST_BLOCK_CFULL          = 0x0032,x0032718,33380
	SLURM_DIST_CYCLIC_CYCLIC_CYCLIC 719,33423
	SLURM_DIST_CYCLIC_CYCLIC_CYCLIC = 0x0111,x0111719,33423
	SLURM_DIST_CYCLIC_CYCLIC_BLOCK 720,33466
	SLURM_DIST_CYCLIC_CYCLIC_BLOCK  = 0x0211,x0211720,33466
	SLURM_DIST_CYCLIC_CYCLIC_CFULL 721,33509
	SLURM_DIST_CYCLIC_CYCLIC_CFULL  = 0x0311,x0311721,33509
	SLURM_DIST_CYCLIC_BLOCK_CYCLIC 722,33552
	SLURM_DIST_CYCLIC_BLOCK_CYCLIC  = 0x0121,x0121722,33552
	SLURM_DIST_CYCLIC_BLOCK_BLOCK 723,33595
	SLURM_DIST_CYCLIC_BLOCK_BLOCK   = 0x0221,x0221723,33595
	SLURM_DIST_CYCLIC_BLOCK_CFULL 724,33638
	SLURM_DIST_CYCLIC_BLOCK_CFULL   = 0x0321,x0321724,33638
	SLURM_DIST_CYCLIC_CFULL_CYCLIC 725,33681
	SLURM_DIST_CYCLIC_CFULL_CYCLIC  = 0x0131,x0131725,33681
	SLURM_DIST_CYCLIC_CFULL_BLOCK 726,33724
	SLURM_DIST_CYCLIC_CFULL_BLOCK   = 0x0231,x0231726,33724
	SLURM_DIST_CYCLIC_CFULL_CFULL 727,33767
	SLURM_DIST_CYCLIC_CFULL_CFULL   = 0x0331,x0331727,33767
	SLURM_DIST_BLOCK_CYCLIC_CYCLIC 728,33810
	SLURM_DIST_BLOCK_CYCLIC_CYCLIC  = 0x0112,x0112728,33810
	SLURM_DIST_BLOCK_CYCLIC_BLOCK 729,33853
	SLURM_DIST_BLOCK_CYCLIC_BLOCK   = 0x0212,x0212729,33853
	SLURM_DIST_BLOCK_CYCLIC_CFULL 730,33896
	SLURM_DIST_BLOCK_CYCLIC_CFULL   = 0x0312,x0312730,33896
	SLURM_DIST_BLOCK_BLOCK_CYCLIC 731,33939
	SLURM_DIST_BLOCK_BLOCK_CYCLIC   = 0x0122,x0122731,33939
	SLURM_DIST_BLOCK_BLOCK_BLOCK 732,33982
	SLURM_DIST_BLOCK_BLOCK_BLOCK    = 0x0222,x0222732,33982
	SLURM_DIST_BLOCK_BLOCK_CFULL 733,34025
	SLURM_DIST_BLOCK_BLOCK_CFULL    = 0x0322,x0322733,34025
	SLURM_DIST_BLOCK_CFULL_CYCLIC 734,34068
	SLURM_DIST_BLOCK_CFULL_CYCLIC   = 0x0132,x0132734,34068
	SLURM_DIST_BLOCK_CFULL_BLOCK 735,34111
	SLURM_DIST_BLOCK_CFULL_BLOCK    = 0x0232,x0232735,34111
	SLURM_DIST_BLOCK_CFULL_CFULL 736,34154
	SLURM_DIST_BLOCK_CFULL_CFULL    = 0x0332,x0332736,34154
	SLURM_DIST_NODECYCLIC 738,34199
	SLURM_DIST_NODECYCLIC           = 0x0001,x0001738,34199
	SLURM_DIST_NODEBLOCK 739,34242
	SLURM_DIST_NODEBLOCK            = 0x0002,x0002739,34242
	SLURM_DIST_SOCKCYCLIC 740,34286
	SLURM_DIST_SOCKCYCLIC           = 0x0010,x0010740,34286
	SLURM_DIST_SOCKBLOCK 741,34329
	SLURM_DIST_SOCKBLOCK            = 0x0020,x0020741,34329
	SLURM_DIST_SOCKCFULL 742,34372
	SLURM_DIST_SOCKCFULL            = 0x0030,x0030742,34372
	SLURM_DIST_CORECYCLIC 743,34415
	SLURM_DIST_CORECYCLIC           = 0x0100,x0100743,34415
	SLURM_DIST_COREBLOCK 744,34458
	SLURM_DIST_COREBLOCK            = 0x0200,x0200744,34458
	SLURM_DIST_CORECFULL 745,34501
	SLURM_DIST_CORECFULL            = 0x0300,x0300745,34501
	SLURM_DIST_NO_LLLP 747,34545
	SLURM_DIST_NO_LLLP              = 0x1000,x1000747,34545
	SLURM_DIST_UNKNOWN 748,34588
	SLURM_DIST_UNKNOWN              = 0x2000x2000748,34588
} task_dist_states_t;749,34630
#define SLURM_DIST_STATE_BASE	751,34653
#define SLURM_DIST_STATE_FLAGS	752,34693
#define SLURM_DIST_PACK_NODES	753,34734
#define SLURM_DIST_NO_PACK_NODES	754,34774
#define SLURM_DIST_NODEMASK 756,34817
#define SLURM_DIST_SOCKMASK 757,34866
#define SLURM_DIST_COREMASK 758,34915
#define SLURM_DIST_NODESOCKMASK 759,34964
#define OPEN_MODE_APPEND	762,35084
#define OPEN_MODE_TRUNCATE	763,35111
typedef enum cpu_bind_type 765,35141
	CPU_BIND_VERBOSE 767,35259
	CPU_BIND_VERBOSE    = 0x0001,x0001767,35259
	CPU_BIND_TO_THREADS 769,35363
	CPU_BIND_TO_THREADS = 0x0002,x0002769,35363
	CPU_BIND_TO_CORES 770,35409
	CPU_BIND_TO_CORES   = 0x0004,x0004770,35409
	CPU_BIND_TO_SOCKETS 771,35453
	CPU_BIND_TO_SOCKETS = 0x0008,x0008771,35453
	CPU_BIND_TO_LDOMS 772,35499
	CPU_BIND_TO_LDOMS   = 0x0010,x0010772,35499
	CPU_BIND_TO_BOARDS 773,35553
	CPU_BIND_TO_BOARDS  = 0x1000,x1000773,35553
	CPU_BIND_NONE	776,35735
	CPU_BIND_NONE	    = 0x0020,x0020776,35735
	CPU_BIND_RANK 777,35774
	CPU_BIND_RANK  	    = 0x0040,x0040777,35774
	CPU_BIND_MAP	778,35817
	CPU_BIND_MAP	    = 0x0080,x0080778,35817
	CPU_BIND_MASK	779,35878
	CPU_BIND_MASK	    = 0x0100,x0100779,35878
	CPU_BIND_LDRANK 780,35943
	CPU_BIND_LDRANK     = 0x0200,x0200780,35943
	CPU_BIND_LDMAP	781,36002
	CPU_BIND_LDMAP	    = 0x0400,x0400781,36002
	CPU_BIND_LDMASK	782,36075
	CPU_BIND_LDMASK	    = 0x0800,x0800782,36075
	CPU_BIND_ONE_THREAD_PER_CORE 786,36250
	CPU_BIND_ONE_THREAD_PER_CORE = 0x2000,x2000786,36250
	CPU_BIND_CPUSETS 791,36440
	CPU_BIND_CPUSETS   = 0x8000,x8000791,36440
	CPU_AUTO_BIND_TO_THREADS 794,36525
	CPU_AUTO_BIND_TO_THREADS = 0x04000,x04000794,36525
	CPU_AUTO_BIND_TO_CORES 795,36562
	CPU_AUTO_BIND_TO_CORES   = 0x10000,x10000795,36562
	CPU_AUTO_BIND_TO_SOCKETS 796,36599
	CPU_AUTO_BIND_TO_SOCKETS = 0x20000x20000796,36599
} cpu_bind_type_t;797,36635
#define CPU_FREQ_RANGE_FLAG	801,36771
#define CPU_FREQ_LOW	802,36811
#define CPU_FREQ_MEDIUM	803,36845
#define CPU_FREQ_HIGH	804,36882
#define CPU_FREQ_HIGHM1	805,36917
#define CPU_FREQ_CONSERVATIVE	806,36954
#define CPU_FREQ_ONDEMAND	807,36996
#define CPU_FREQ_PERFORMANCE	808,37034
#define CPU_FREQ_POWERSAVE	809,37075
#define CPU_FREQ_USERSPACE	810,37114
#define CPU_FREQ_GOV_MASK 811,37153
#define CPU_FREQ_PERFORMANCE_OLD	813,37252
#define CPU_FREQ_POWERSAVE_OLD	814,37296
#define CPU_FREQ_USERSPACE_OLD	815,37339
#define CPU_FREQ_ONDEMAND_OLD	816,37382
#define CPU_FREQ_CONSERVATIVE_OLD	817,37424
typedef enum mem_bind_type 819,37470
	MEM_BIND_VERBOSE=821,37594
	MEM_BIND_VERBOSE= 0x01,x01821,37594
	MEM_BIND_NONE 824,37759
	MEM_BIND_NONE   = 0x02,x02824,37759
	MEM_BIND_RANK 825,37794
	MEM_BIND_RANK   = 0x04,x04825,37794
	MEM_BIND_MAP 826,37831
	MEM_BIND_MAP    = 0x08,x08826,37831
	MEM_BIND_MASK 827,37890
	MEM_BIND_MASK   = 0x10,x10827,37890
	MEM_BIND_LOCAL 828,37952
	MEM_BIND_LOCAL  = 0x20,x20828,37952
	MEM_BIND_SORT	830,38045
	MEM_BIND_SORT	= 0x40,x40830,38045
	MEM_BIND_PREFER 831,38080
	MEM_BIND_PREFER = 0x80	x80831,38080
} mem_bind_type_t;832,38118
typedef enum accel_bind_type 834,38138
	ACCEL_BIND_VERBOSE 835,38217
	ACCEL_BIND_VERBOSE         = 0x01,x01835,38217
	ACCEL_BIND_CLOSEST_GPU 836,38271
	ACCEL_BIND_CLOSEST_GPU     = 0x02,x02836,38271
	ACCEL_BIND_CLOSEST_MIC 837,38344
	ACCEL_BIND_CLOSEST_MIC     = 0x04,x04837,38344
	ACCEL_BIND_CLOSEST_NIC 838,38413
	ACCEL_BIND_CLOSEST_NIC     = 0x08 x08838,38413
} accel_bind_type_t;839,38482
enum node_states 846,38826
	NODE_STATE_UNKNOWN,847,38845
	NODE_STATE_DOWN,848,38902
	NODE_STATE_IDLE,849,38951
	NODE_STATE_ALLOCATED,850,39007
	NODE_STATE_ERROR,851,39069
	NODE_STATE_MIXED,852,39120
	NODE_STATE_FUTURE,853,39168
	NODE_STATE_END	854,39228
#define NODE_STATE_BASE 856,39274
#define NODE_STATE_FLAGS 857,39315
#define NODE_STATE_NET 858,39356
#define NODE_STATE_RES 862,39512
#define NODE_STATE_UNDRAIN 866,39684
#define NODE_STATE_CLOUD 867,39759
#define NODE_RESUME 868,39828
#define NODE_STATE_DRAIN 872,40025
#define NODE_STATE_COMPLETING 873,40098
#define NODE_STATE_NO_RESPOND 874,40178
#define NODE_STATE_POWER_SAVE 875,40248
#define NODE_STATE_FAIL 876,40319
#define NODE_STATE_POWER_UP 878,40417
#define NODE_STATE_MAINT 880,40517
#define NODE_STATE_REBOOT 881,40596
#define SLURM_SSL_SIGNATURE_LENGTH 886,40787
#define SHOW_ALL	890,40928
#define SHOW_DETAIL	891,40992
#define SHOW_DETAIL2	892,41060
#define SHOW_MIXED	893,41120
#define SHOW_FED_TRACK	894,41187
enum ctx_keys 897,41321
	SLURM_STEP_CTX_STEPID,898,41337
	SLURM_STEP_CTX_TASKS,899,41395
	SLURM_STEP_CTX_TID,900,41461
	SLURM_STEP_CTX_RESP,901,41529
	SLURM_STEP_CTX_CRED,902,41594
	SLURM_STEP_CTX_SWITCH_JOB,903,41616
	SLURM_STEP_CTX_NUM_HOSTS,904,41644
	SLURM_STEP_CTX_HOST,905,41671
	SLURM_STEP_CTX_JOBID,906,41693
	SLURM_STEP_CTX_USER_MANAGED_SOCKETS907,41716
#define CR_CPU	913,41957
#define CR_SOCKET	916,42123
#define CR_CORE	919,42262
#define CR_BOARD	922,42396
#define CR_MEMORY	925,42532
#define CR_OTHER_CONS_RES 927,42653
#define CR_NHC_STEP_NO 930,42783
#define CR_NHC_NO 933,42914
#define CR_ONE_TASK_PER_CORE 939,43131
#define CR_PACK_NODES 943,43277
#define CR_NHC_ABSOLUTELY_NO 945,43308
#define CR_CORE_DEFAULT_DIST_BLOCK 948,43464
#define CR_LLN	950,43507
#define MEM_PER_CPU 952,43570
#define SHARED_FORCE 953,43610
#define PRIVATE_DATA_JOBS	955,43639
#define PRIVATE_DATA_NODES	956,43705
#define PRIVATE_DATA_PARTITIONS	957,43768
#define PRIVATE_DATA_USAGE	958,43841
#define PRIVATE_DATA_USERS	959,43916
#define PRIVATE_DATA_ACCOUNTS	960,43990
#define PRIVATE_DATA_RESERVATIONS 961,44069
#define PRIVATE_CLOUD_NODES	962,44144
#define PRIORITY_RESET_NONE	964,44221
#define PRIORITY_RESET_NOW	965,44274
#define PRIORITY_RESET_DAILY	966,44350
#define PRIORITY_RESET_WEEKLY	967,44416
#define PRIORITY_RESET_MONTHLY	968,44488
#define PRIORITY_RESET_QUARTERLY 969,44564
#define PRIORITY_RESET_YEARLY	970,44644
#define PROP_PRIO_OFF	972,44719
#define PROP_PRIO_ON	973,44788
#define PROP_PRIO_NICER	974,44849
#define PRIORITY_FLAGS_ACCRUE_ALWAYS	977,44964
#define PRIORITY_FLAGS_MAX_TRES 981,45123
#define PRIORITY_FLAGS_SIZE_RELATIVE	984,45267
#define PRIORITY_FLAGS_DEPTH_OBLIVIOUS	986,45381
#define PRIORITY_FLAGS_CALCULATE_RUNNING 989,45524
#define PRIORITY_FLAGS_FAIR_TREE	992,45662
#define PRIORITY_FLAGS_INCR_ONLY	994,45759
#define KILL_INV_DEP 998,45932
#define NO_KILL_INV_DEP 999,46007
#define HAS_STATE_DIR 1000,46088
#define BACKFILL_TEST 1001,46169
#define GRES_ENFORCE_BIND 1002,46239
#define TEST_NOW_ONLY 1003,46308
#define NODE_MEM_CALC 1004,46384
#define NODE_REBOOT 1005,46461
#define SPREAD_JOB 1006,46529
#define USE_MIN_NODES 1007,46606
#  define __hostlist_t_defined1019,47076
typedef struct hostlist * hostlist_t;1020,47107
#  define __list_datatypes_defined1154,51360
typedef struct list * List;1155,51395
typedef struct listIterator * ListIterator;1160,51458
typedef void (*ListDelF)ListDelF1165,51546
typedef int (*ListCmpF)ListCmpF1172,51788
typedef int (*ListFindF)ListFindF1179,51990
typedef int (*ListForF)ListForF1185,52150
#  define __bitstr_datatypes_defined1290,55445
typedef int64_t bitstr_t;1292,55483
#define BITSTR_SHIFT 1293,55509
typedef bitstr_t bitoff_t;1295,55553
#define ALLOC_SID_ADMIN_HOLD	1299,55589
#define ALLOC_SID_USER_HOLD	1300,55650
#define JOB_SHARED_NONE 1302,55710
#define JOB_SHARED_OK 1303,55749
#define JOB_SHARED_USER 1304,55788
#define JOB_SHARED_MCS 1305,55827
#define SLURM_POWER_FLAGS_LEVEL 1307,55867
typedef struct dynamic_plugin_data 1312,56142
	void *data;data1313,56179
	uint32_t plugin_id;1314,56192
} dynamic_plugin_data_t;1315,56213
typedef struct acct_gather_energy 1317,56239
	uint64_t base_consumed_energy;1318,56275
	uint32_t base_watts;1319,56307
	uint64_t consumed_energy;1320,56376
	uint32_t current_watts;1321,56450
	uint64_t previous_consumed_energy;1322,56523
	time_t poll_time;1323,56559
} acct_gather_energy_t;1324,56628
typedef struct ext_sensors_data 1326,56653
	uint64_t consumed_energy;1327,56687
	uint32_t temperature;1328,56756
	time_t   energy_update_time;1329,56814
	uint32_t current_watts;1330,56887
} ext_sensors_data_t;1331,56959
typedef struct power_mgmt_data 1333,56982
	uint32_t cap_watts;1334,57015
	uint32_t current_watts;1335,57084
	uint64_t joule_counter;1336,57151
	uint32_t new_cap_watts;1337,57226
	uint32_t max_watts;1338,57303
	uint32_t min_watts;1339,57374
	time_t new_job_time;1340,57445
	uint16_t state;1342,57558
	uint64_t time_usec;1343,57606
} power_mgmt_data_t;1345,57694
#define CORE_SPEC_THREAD 1347,57716
typedef struct job_descriptor 1354,57882
	char *account;account1355,57962
	char *acctg_freq;acctg_freq1356,58013
	char *admin_comment;admin_comment1357,58077
	char *alloc_node;alloc_node1358,58153
	uint16_t alloc_resp_port;1361,58296
	uint32_t alloc_sid;1362,58369
	uint32_t argc;1367,58589
	char **argv;argv1368,58646
	char *array_inx;array_inx1369,58691
	void *array_bitmap;array_bitmap1370,58738
	time_t begin_time;1371,58788
	uint32_t bitflags;1372,58847
	char *burst_buffer;burst_buffer1373,58887
	uint16_t ckpt_interval;1374,58942
	char *ckpt_dir;ckpt_dir1375,59006
	char *clusters;clusters1376,59068
	char *comment;comment1377,59134
	uint16_t contiguous;1378,59175
	uint16_t core_spec;1380,59268
	char *cpu_bind;cpu_bind1382,59354
	uint16_t cpu_bind_type;1386,59529
	uint32_t cpu_freq_min;1390,59702
	uint32_t cpu_freq_max;1391,59756
	uint32_t cpu_freq_gov;1392,59810
	time_t deadline;1393,59864
	uint32_t delay_boot;1394,59897
	char *dependency;dependency1395,59959
	time_t end_time;1396,60026
	char **environment;environment1399,60170
	uint32_t env_size;1401,60274
	char *exc_nodes;exc_nodes1402,60329
	char *features;features1404,60435
	uint64_t fed_siblings;1406,60511
	char *gres;gres1407,60571
	uint32_t group_id;1409,60663
	uint32_t group_number;1410,60722
	uint16_t immediate;1411,60780
	uint32_t job_id;1413,60893
	char * job_id_str;1414,60946
	uint16_t kill_on_node_fail;1415,61012
	char *licenses;licenses1417,61111
	uint16_t mail_type;1418,61164
	char *mail_user;mail_user1419,61223
	char *mcs_label;mcs_label1420,61276
	char *mem_bind;mem_bind1421,61331
	uint16_t mem_bind_type;1422,61384
	char *name;name1423,61435
	char *network;network1424,61483
	uint32_t nice;1425,61523
	uint32_t numpack;1427,61605
	uint32_t num_tasks;1428,61659
	uint8_t open_mode;1430,61739
	uint16_t other_port;1432,61826
	uint8_t overcommit;1433,61895
	uint32_t pack_leader;1434,61963
	char *partition;partition1435,62032
	char **pelog_env;pelog_env1437,62116
	uint32_t pelog_env_size;1439,62198
	uint16_t plane_size;1440,62256
	uint8_t power_flags;1442,62336
	uint32_t priority;1444,62418
	uint32_t profile;1447,62550
	char *qos;qos1448,62617
	uint16_t reboot;1449,62655
	char *resp_host;resp_host1450,62712
	uint16_t restart_cnt;1451,62759
	uint8_t resv_port;1452,62810
	char *req_nodes;req_nodes1453,62874
	uint16_t requeue;1455,62957
	char *reservation;reservation1456,63019
	char *script;script1457,63072
	uint16_t shared;1458,63130
	char **spank_job_env;spank_job_env1464,63428
	uint32_t spank_job_env_size;1466,63540
	uint32_t task_dist;1467,63603
	uint32_t time_limit;1468,63655
	uint32_t time_min;1470,63746
	uint32_t user_id;1472,63830
	uint16_t wait_all_nodes;1474,63942
	uint16_t warn_flags;1477,64101
	uint16_t warn_signal;1479,64187
	uint16_t warn_time;1480,64257
	char *work_dir;work_dir1481,64325
	uint16_t cpus_per_task;1484,64404
	uint32_t min_cpus;1486,64486
	uint32_t max_cpus;1488,64568
	uint32_t min_nodes;1490,64650
	uint32_t max_nodes;1492,64735
	uint16_t boards_per_node;1494,64818
	uint16_t sockets_per_board;1495,64884
	uint16_t sockets_per_node;1496,64952
	uint16_t cores_per_socket;1497,65018
	uint16_t threads_per_core;1498,65084
	uint16_t ntasks_per_node;1499,65150
	uint16_t ntasks_per_socket;1500,65221
	uint16_t ntasks_per_core;1502,65306
	uint16_t ntasks_per_board;1503,65377
	uint16_t pn_min_cpus;1504,65450
	uint64_t pn_min_memory;1505,65517
	uint32_t pn_min_tmp_disk;1508,65653
	uint16_t geometry[geometry1517,65979
	uint16_t conn_type[conn_type1519,66085
	uint16_t rotate;1520,66157
	char *blrtsimage;blrtsimage1521,66213
	char *linuximage;linuximage1522,66265
	char *mloaderimage;mloaderimage1523,66317
	char *ramdiskimage;ramdiskimage1524,66371
	uint32_t req_switch;1527,66465
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo1528,66523
	char *std_err;std_err1530,66621
	char *std_in;std_in1531,66663
	char *std_out;std_out1532,66703
	uint64_t *tres_req_cnt;tres_req_cnt1533,66745
	uint32_t wait4switch;1535,66828
	char *wckey;wckey1536,66901
} job_desc_msg_t;1537,66946
typedef struct job_info 1539,66965
	char *account;account1540,66991
	char *admin_comment;admin_comment1541,67042
	char    *alloc_node;alloc_node1542,67104
	uint32_t alloc_sid;1543,67165
	void *array_bitmap;array_bitmap1544,67224
	uint32_t array_job_id;1545,67271
	uint32_t array_task_id;1546,67335
	uint32_t array_max_tasks;1547,67389
	char *array_task_str;array_task_str1548,67454
	uint32_t assoc_id;1549,67528
	uint16_t batch_flag;1550,67577
	char *batch_host;batch_host1551,67640
	char *batch_script;batch_script1552,67699
	uint32_t bitflags;1553,67751
	uint16_t boards_per_node;1554,67800
	char *burst_buffer;burst_buffer1555,67868
	char *burst_buffer_state;burst_buffer_state1556,67923
	char *command;command1557,67980
	char *comment;comment1559,68094
	uint16_t contiguous;1560,68135
	uint16_t core_spec;1561,68198
	uint16_t cores_per_socket;1562,68248
	double billable_tres;1563,68316
	uint16_t cpus_per_task;1564,68386
	uint32_t cpu_freq_min;1566,68468
	uint32_t cpu_freq_max;1567,68522
	uint32_t cpu_freq_gov;1568,68576
	time_t deadline;1569,68630
	uint32_t delay_boot;1570,68663
	char *dependency;dependency1571,68725
	uint32_t derived_ec;1572,68792
	time_t eligible_time;1573,68855
	time_t end_time;1574,68917
	char *exc_nodes;exc_nodes1575,68981
	int32_t *exc_node_inx;exc_node_inx1576,69044
	uint32_t exit_code;1579,69182
	char *features;features1580,69251
	char *fed_origin_str;fed_origin_str1581,69317
	uint64_t fed_siblings;1582,69368
	char *fed_siblings_str;fed_siblings_str1583,69428
	char *gres;gres1584,69491
	uint32_t gres_detail_cnt;1585,69553
	char **gres_detail_str;gres_detail_str1587,69650
	uint32_t group_id;1588,69718
	uint32_t job_id;1589,69767
	job_resources_t *job_resrcs;job_resrcs1590,69798
	uint32_t job_state;1591,69866
	char *licenses;licenses1592,69931
	uint32_t max_cpus;1593,69984
	uint32_t max_nodes;1594,70047
	char *mcs_label;mcs_label1595,70112
	char *name;name1596,70167
	char *network;network1597,70203
	char *nodes;nodes1598,70248
	uint32_t nice;1599,70300
	int32_t *node_inx;node_inx1600,70351
	uint16_t ntasks_per_core;1603,70487
	uint16_t ntasks_per_node;1604,70558
	uint16_t ntasks_per_socket;1605,70629
	uint16_t ntasks_per_board;1606,70703
	uint32_t num_cpus;1607,70777
	uint32_t num_nodes;1608,70842
	uint32_t num_tasks;1609,70909
	char *partition;partition1610,70957
	uint64_t pn_min_memory;1611,71008
	uint16_t pn_min_cpus;1612,71079
	uint32_t pn_min_tmp_disk;1613,71145
	uint8_t power_flags;1614,71215
	time_t preempt_time;1616,71297
	time_t pre_sus_time;1617,71348
	uint32_t priority;1618,71411
	uint32_t profile;1620,71512
	char *qos;qos1621,71579
	uint8_t reboot;1622,71617
	char *req_nodes;req_nodes1623,71676
	int32_t *req_node_inx;req_node_inx1624,71739
	uint32_t req_switch;1627,71877
	uint16_t requeue;1628,71935
	time_t resize_time;1629,72003
	uint16_t restart_cnt;1630,72057
	char *resv_name;resv_name1631,72108
	char *sched_nodes;sched_nodes1632,72149
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo1633,72218
	uint16_t shared;1637,72345
	uint16_t show_flags;1638,72410
	uint16_t sockets_per_board;1639,72473
	uint16_t sockets_per_node;1640,72541
	time_t start_time;1641,72609
	uint16_t start_protocol_ver;1642,72677
	char *state_desc;state_desc1645,72831
	uint16_t state_reason;1646,72890
	char *std_err;std_err1648,72997
	char *std_in;std_in1649,73050
	char *std_out;std_out1650,73101
	time_t submit_time;1651,73154
	time_t suspend_time;1652,73204
	uint32_t time_limit;1653,73267
	uint32_t time_min;1654,73335
	uint16_t threads_per_core;1655,73401
	char *tres_req_str;tres_req_str1656,73469
	char *tres_alloc_str;tres_alloc_str1657,73522
	uint32_t user_id;1658,73574
	uint32_t wait4switch;1659,73620
	char *wckey;wckey1660,73693
	char *work_dir;work_dir1661,73738
} slurm_job_info_t;1662,73792
typedef slurm_job_info_t job_info_t;1673,74308
typedef struct job_info_msg 1676,74353
	time_t last_update;1677,74383
	uint32_t record_count;1678,74430
	slurm_job_info_t *job_array;job_array1679,74478
} job_info_msg_t;1680,74530
typedef struct step_update_request_msg 1682,74549
	time_t end_time;1683,74590
	uint32_t exit_code;1684,74628
	uint32_t job_id;1685,74697
	jobacctinfo_t *jobacct;jobacct1686,74715
	char *name;name1687,74740
	time_t start_time;1688,74781
	uint32_t step_id;1689,74823
	uint32_t time_limit;1690,74842
} step_update_request_msg_t;1691,74881
	char *node_list;node_list1694,74928
	uint16_t *cpus_per_node;cpus_per_node1695,74990
	uint32_t *cpu_count_reps;cpu_count_reps1696,75036
	uint32_t num_hosts;1697,75104
	uint32_t num_tasks;1698,75155
	uint16_t *cpus_per_task;cpus_per_task1699,75229
	uint32_t *cpus_task_reps;cpus_task_reps1700,75285
	uint32_t task_dist;1701,75358
	uint16_t plane_size;1702,75419
} slurm_step_layout_req_t;1703,75493
typedef struct slurm_step_layout 1705,75521
	char *front_end;front_end1706,75556
	uint32_t node_cnt;1709,75681
	char *node_list;node_list1710,75718
	uint16_t plane_size;1711,75771
	uint16_t start_protocol_ver;1713,75851
	uint16_t *tasks;tasks1718,76128
	uint32_t task_cnt;1719,76146
	uint32_t task_dist;1720,76206
	uint32_t **tids;tids1724,76411
} slurm_step_layout_t;1725,76462
typedef struct slurm_step_io_fds 1727,76486
		int fd;1729,76531
		uint32_t taskid;1730,76541
		uint32_t nodeid;1731,76560
	} input,1732,76579
	} input, out,1732,76579
	} input, out, err;1732,76579
} slurm_step_io_fds_t;1733,76599
#define SLURM_STEP_IO_FDS_INITIALIZER 1735,76623
typedef struct launch_tasks_response_msg 1739,76772
	uint32_t return_code;1740,76815
	char    *node_name;node_name1741,76838
	uint32_t srun_node_id;1742,76859
	uint32_t count_of_pids;1743,76883
	uint32_t *local_pids;local_pids1744,76908
	uint32_t *task_ids;task_ids1745,76931
} launch_tasks_response_msg_t;1746,76988
typedef struct task_ext_msg 1748,77020
	uint32_t num_tasks;1749,77050
	uint32_t *task_id_list;task_id_list1750,77071
	uint32_t return_code;1751,77096
	uint32_t job_id;1752,77119
	uint32_t step_id;1753,77137
} task_exit_msg_t;1754,77156
typedef struct srun_ping_msg 1756,77176
	uint32_t job_id;1757,77207
	uint32_t step_id;1758,77244
} srun_ping_msg_t;1759,77287
typedef struct srun_job_complete_msg 1761,77307
	uint32_t job_id;1762,77346
	uint32_t step_id;1763,77390
} srun_job_complete_msg_t;1764,77439
typedef struct srun_timeout_msg 1766,77467
	uint32_t job_id;1767,77501
	uint32_t step_id;1768,77538
	time_t   timeout;1769,77581
} srun_timeout_msg_t;1770,77638
typedef struct srun_user_msg 1772,77661
	uint32_t job_id;1773,77692
	char *msg;msg1774,77729
} srun_user_msg_t;1775,77771
typedef struct srun_node_fail_msg 1777,77791
	uint32_t job_id;1778,77827
	char *nodelist;nodelist1779,77864
	uint32_t step_id;1780,77911
} srun_node_fail_msg_t;1781,77954
typedef struct srun_step_missing_msg 1783,77979
	uint32_t job_id;1784,78018
	char *nodelist;nodelist1785,78055
	uint32_t step_id;1786,78113
} srun_step_missing_msg_t;1787,78156
enum suspend_opts 1789,78184
	SUSPEND_JOB,1790,78204
	RESUME_JOB	1791,78243
typedef struct suspend_msg 1795,78345
	uint16_t op;1796,78374
	uint32_t job_id;1797,78436
	char *   job_id_str;1798,78482
} suspend_msg_t;1799,78532
typedef struct top_job_msg 1802,78612
	uint16_t op;1803,78641
	uint32_t job_id;1804,78703
	char *   job_id_str;1805,78749
} top_job_msg_t;1806,78799
	uint16_t ckpt_interval;1809,78834
	uint32_t cpu_count;1810,78896
	uint32_t cpu_freq_min;1811,78953
	uint32_t cpu_freq_max;1812,79006
	uint32_t cpu_freq_gov;1813,79059
	uint16_t exclusive;1814,79112
	char *features;features1815,79177
	uint16_t immediate;1816,79238
	uint32_t job_id;1818,79351
	uint64_t pn_min_memory;1819,79382
	char *ckpt_dir;ckpt_dir1822,79520
	char *gres;gres1823,79586
	char *name;name1824,79631
	char *network;network1825,79672
	uint32_t profile;1826,79712
	uint8_t no_kill;1827,79779
	uint32_t min_nodes;1828,79832
	uint32_t max_nodes;1830,79917
	char *node_list;node_list1832,80000
	bool overcommit;1833,80047
	uint16_t plane_size;1837,80244
	uint16_t relative;1839,80324
	uint16_t resv_port_cnt;1840,80388
	uint32_t task_count;1841,80440
	uint32_t task_dist;1842,80493
	uint32_t time_limit;1844,80582
	uid_t uid;1845,80626
	uint16_t verbose_level;1846,80653
} slurm_step_ctx_params_t;1848,80738
	char *alias_list;alias_list1851,80783
	uint32_t argc;1852,80844
	char **argv;argv1853,80860
	uint32_t envc;1854,80874
	char **env;env1855,80890
	char *cwd;cwd1856,80903
	bool user_managed_io;1857,80915
	uint32_t msg_timeout;1858,80938
	uint16_t ntasks_per_board;1859,80999
	uint16_t ntasks_per_core;1860,81072
	uint16_t ntasks_per_socket;1861,81144
	bool buffered_stdio;1865,81283
	bool labelio;1866,81305
	char *remote_output_filename;remote_output_filename1867,81320
	char *remote_error_filename;remote_error_filename1868,81351
	char *remote_input_filename;remote_input_filename1869,81381
	slurm_step_io_fds_t local_fds;1870,81411
	uint32_t gid;1873,81497
	bool multi_prog;1874,81512
	uint32_t slurmd_debug;1875,81530
	bool parallel_debug;1876,81587
	uint32_t profile;1877,81609
	char *task_prolog;task_prolog1878,81676
	char *task_epilog;task_epilog1879,81696
	uint16_t cpu_bind_type;1880,81716
	char *cpu_bind;cpu_bind1881,81767
	uint32_t cpu_freq_min;1882,81784
	uint32_t cpu_freq_max;1883,81837
	uint32_t cpu_freq_gov;1884,81890
	uint16_t mem_bind_type;1885,81943
	char *mem_bind;mem_bind1886,81994
	uint16_t accel_bind_type;1887,82011
	uint16_t max_sockets;1889,82059
	uint16_t max_cores;1890,82082
	uint16_t max_threads;1891,82103
	uint16_t cpus_per_task;1892,82126
	uint32_t task_dist;1893,82151
	char *partition;partition1894,82172
	bool preserve_env;1895,82190
	char *mpi_plugin_name;mpi_plugin_name1897,82211
	uint8_t open_mode;1898,82235
	char *acctg_freq;acctg_freq1899,82255
	bool pty;1900,82274
	char *ckpt_dir;ckpt_dir1901,82285
	char *restart_dir;restart_dir1902,82302
	char **spank_job_env;spank_job_env1903,82322
	uint32_t spank_job_env_size;1905,82434
} slurm_step_launch_params_t;1906,82497
	void (*step_complete)step_complete1909,82545
	void (*step_signal)step_signal1910,82596
	void (*step_timeout)step_timeout1911,82623
	void (*task_start)task_start1912,82668
	void (*task_finish)task_finish1913,82720
} slurm_step_launch_callbacks_t;1914,82761
	void (*ping)ping1917,82812
	void (*job_complete)job_complete1918,82846
	void (*timeout)timeout1919,82896
	void (*user_msg)user_msg1920,82936
	void (*node_fail)node_fail1921,82974
	void (*job_suspend)job_suspend1922,83018
} slurm_allocation_callbacks_t;1923,83057
	void (*acct_full)acct_full1926,83107
	void (*dbd_fail)dbd_fail1927,83129
	void (*dbd_resumed)dbd_resumed1928,83150
	void (*db_fail)db_fail1929,83174
	void (*db_resumed)db_resumed1930,83194
} slurm_trigger_callbacks_t;1931,83217
	uint32_t array_job_id;1934,83264
	uint32_t array_task_id;1935,83328
	char *ckpt_dir;ckpt_dir1936,83382
	uint16_t ckpt_interval;1937,83443
	char *gres;gres1938,83505
	uint32_t job_id;1939,83552
	char *name;name1940,83583
	char *network;network1941,83620
	char *nodes;nodes1942,83670
	int32_t *node_inx;node_inx1943,83727
	uint32_t num_cpus;1946,83863
	uint32_t cpu_freq_min;1947,83926
	uint32_t cpu_freq_max;1948,83979
	uint32_t cpu_freq_gov;1949,84032
	uint32_t num_tasks;1950,84085
	uint32_t packjobid;1951,84128
	uint32_t packstepid;1952,84197
	char *partition;partition1953,84252
	char *resv_ports;resv_ports1954,84303
	time_t run_time;1955,84352
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo1956,84417
	char *srun_host;srun_host1960,84544
	uint32_t srun_pid;1961,84589
	time_t start_time;1962,84635
	uint16_t start_protocol_ver;1963,84677
	uint32_t state;1966,84831
	uint32_t step_id;1967,84894
	uint32_t task_dist;1968,84927
	uint32_t time_limit;1969,84979
	char *tres_alloc_str;tres_alloc_str1970,85023
	uint32_t user_id;1971,85075
} job_step_info_t;1972,85121
typedef struct job_step_info_response_msg 1974,85141
	time_t last_update;1975,85185
	uint32_t job_step_count;1976,85233
	job_step_info_t *job_steps;job_steps1977,85283
} job_step_info_response_msg_t;1978,85339
   	char *node_name;node_name1981,85389
	uint32_t *pid;pid1982,85410
	uint32_t pid_cnt;1983,85426
} job_step_pids_t;1984,85445
	uint32_t job_id;1987,85482
	List pid_list;1988,85500
	uint32_t step_id;1989,85550
} job_step_pids_response_msg_t;1990,85569
	jobacctinfo_t *jobacct;jobacct1993,85619
	uint32_t num_tasks;1994,85644
   	uint32_t return_code;1995,85665
	job_step_pids_t *step_pids;step_pids1996,85691
} job_step_stat_t;1997,85720
	uint32_t job_id;2000,85757
	List stats_list;2001,85788
	uint32_t step_id;2002,85840
} job_step_stat_response_msg_t;2003,85859
typedef struct node_info 2005,85892
	char *arch;arch2006,85919
	uint16_t boards;2007,85961
	time_t boot_time;2008,86025
	uint16_t cores;2009,86068
	uint16_t core_spec_cnt;2010,86132
	uint32_t cpu_load;2011,86199
	uint64_t free_mem;2012,86240
	uint16_t cpus;2013,86285
	char *cpu_spec_list;cpu_spec_list2015,86360
	acct_gather_energy_t *energy;energy2016,86412
	ext_sensors_data_t *ext_sensors;ext_sensors2017,86462
	power_mgmt_data_t *power;power2018,86523
	char *features;features2019,86585
	char *features_act;features_act2020,86645
	char *gres;gres2022,86748
	char *gres_drain;gres_drain2023,86803
	char *gres_used;gres_used2024,86849
	char *mcs_label;mcs_label2025,86901
	uint64_t mem_spec_limit;2026,86956
	char *name;name2027,87023
	char *node_addr;node_addr2028,87062
	char *node_hostname;node_hostname2029,87116
	uint32_t node_state;2030,87171
	char *os;os2031,87220
	uint32_t owner;2032,87273
	char *partitions;partitions2033,87337
	uint16_t port;2036,87486
	uint64_t real_memory;2037,87539
	char *reason;reason2038,87609
	time_t reason_time;2039,87670
	uint32_t reason_uid;2041,87764
	dynamic_plugin_data_t *select_nodeinfo;select_nodeinfo2043,87856
	time_t slurmd_start_time;2047,88008
	uint16_t sockets;2048,88063
	uint16_t threads;2049,88127
	uint32_t tmp_disk;2050,88185
	uint32_t weight;2051,88249
	char *tres_fmt_str;tres_fmt_str2052,88315
	char *version;version2053,88383
} node_info_t;2054,88428
typedef struct node_info_msg 2056,88444
	time_t last_update;2057,88475
	uint32_t node_scaling;2058,88523
	uint32_t record_count;2064,88733
	node_info_t *node_array;node_array2065,88782
} node_info_msg_t;2066,88831
typedef struct front_end_info 2068,88851
	char *allow_groups;allow_groups2069,88883
	char *allow_users;allow_users2070,88932
	time_t boot_time;2071,88979
	char *deny_groups;deny_groups2073,89054
	char *deny_users;deny_users2074,89101
	char *name;name2075,89146
	uint32_t node_state;2076,89177
	char *reason;reason2077,89227
	time_t reason_time;2079,89297
	uint32_t reason_uid;2081,89393
	time_t slurmd_start_time;2083,89487
	char *version;version2084,89543
} front_end_info_t;2085,89588
typedef struct front_end_info_msg 2087,89609
	time_t last_update;2088,89645
	uint32_t record_count;2089,89693
	front_end_info_t *front_end_array;front_end_array2090,89742
} front_end_info_msg_t;2091,89806
typedef struct topo_info 2093,89831
	uint16_t level;2094,89858
	uint32_t link_speed;2095,89910
	char *name;name2096,89967
	char *nodes;nodes2097,90000
	char *switches;switches2098,90054
} topo_info_t;2099,90114
typedef struct topo_info_response_msg 2101,90130
	uint32_t record_count;2102,90170
	topo_info_t *topo_array;topo_array2103,90219
} topo_info_response_msg_t;2104,90279
typedef struct job_alloc_info_msg 2106,90308
	uint32_t job_id;2107,90344
} job_alloc_info_msg_t;2108,90375
typedef struct layout_info_msg 2110,90400
	uint32_t record_count;2111,90433
	char** records;2112,90479
} layout_info_msg_t;2113,90529
typedef struct update_layout_msg 2115,90551
	char* layout;2116,90586
	char* arg;2117,90601
} update_layout_msg_t;2118,90613
typedef struct step_alloc_info_msg 2120,90637
	uint32_t job_id;2121,90674
	uint32_t step_id;2122,90705
} step_alloc_info_msg_t;2123,90738
typedef struct powercap_info_msg 2125,90764
	uint32_t power_cap;2126,90799
	uint32_t power_floor;2127,90851
	uint32_t power_change;2128,90907
	uint32_t min_watts;2129,90977
	uint32_t cur_max_watts;2130,91044
	uint32_t adj_max_watts;2132,91130
	uint32_t max_watts;2134,91238
} powercap_info_msg_t;2135,91305
typedef struct powercap_info_msg update_powercap_msg_t;2137,91329
typedef struct acct_gather_node_resp_msg 2139,91386
	acct_gather_energy_t *energy;energy2140,91429
	char *node_name;node_name2141,91460
	uint16_t sensor_cnt;2142,91496
} acct_gather_node_resp_msg_t;2143,91518
typedef struct acct_gather_energy_req_msg 2145,91550
	uint16_t delta;2146,91594
} acct_gather_energy_req_msg_t;2147,91611
#define PART_FLAG_DEFAULT	2151,91755
#define PART_FLAG_HIDDEN	2152,91819
#define PART_FLAG_NO_ROOT	2153,91884
#define PART_FLAG_ROOT_ONLY	2154,91954
#define PART_FLAG_REQ_RESV	2155,92028
#define PART_FLAG_LLN	2156,92099
#define PART_FLAG_EXCLUSIVE_USER 2158,92189
#define PART_FLAG_DEFAULT_CLR	2164,92542
#define PART_FLAG_HIDDEN_CLR	2165,92614
#define PART_FLAG_NO_ROOT_CLR	2166,92684
#define PART_FLAG_ROOT_ONLY_CLR	2167,92756
#define PART_FLAG_REQ_RESV_CLR	2168,92832
#define PART_FLAG_LLN_CLR	2169,92905
#define PART_FLAG_EXC_USER_CLR	2170,92969
typedef struct partition_info 2172,93040
	char *allow_alloc_nodes;allow_alloc_nodes2173,93072
	char *allow_accounts;allow_accounts2175,93149
	char *allow_groups;allow_groups2177,93240
	char *allow_qos;allow_qos2179,93325
	char *alternate;alternate2181,93404
	char *billing_weights_str;billing_weights_str2182,93457
	uint16_t cr_type;2183,93522
	uint64_t def_mem_per_cpu;2184,93563
	uint32_t default_time;2185,93632
	char *deny_accounts;deny_accounts2186,93690
	char *deny_qos;deny_qos2187,93761
	uint16_t flags;2188,93820
	uint32_t grace_time;2189,93866
	uint32_t max_cpus_per_node;2190,93928
	uint64_t max_mem_per_cpu;2191,93995
	uint32_t max_nodes;2192,94064
	uint16_t max_share;2193,94111
	uint32_t max_time;2194,94170
	uint32_t min_nodes;2195,94216
	char *name;name2196,94251
	int32_t *node_inx;node_inx2197,94293
	char *nodes;nodes2200,94418
	uint16_t over_time_limit;2201,94472
	uint16_t preempt_mode;2203,94593
	uint16_t priority_job_factor;2204,94659
	uint16_t priority_tier;2205,94723
	char *qos_char;qos_char2206,94789
	uint16_t state_up;2207,94843
	uint32_t total_cpus;2208,94897
	uint32_t total_nodes;2209,94963
	char    *tres_fmt_str;tres_fmt_str2210,95031
} partition_info_t;2211,95097
typedef struct delete_partition_msg 2213,95118
	char *name;name2214,95156
} delete_part_msg_t;2215,95207
typedef struct resource_allocation_response_msg 2217,95229
	char *account;account2218,95279
	uint32_t job_id;2219,95329
	char *alias_list;alias_list2220,95369
	uint32_t cpu_freq_min;2221,95430
	uint32_t cpu_freq_max;2222,95484
	uint32_t cpu_freq_gov;2223,95538
	uint16_t *cpus_per_node;cpus_per_node2224,95592
	uint32_t *cpu_count_reps;cpu_count_reps2225,95637
	uint32_t env_size;2226,95704
	char **environment;environment2227,95759
	uint32_t error_code;2229,95863
	slurm_addr_t *node_addr;node_addr2230,95922
	uint32_t node_cnt;2231,95973
	char *node_list;node_list2232,96014
	uint16_t ntasks_per_board;2233,96061
	uint16_t ntasks_per_core;2234,96134
	uint16_t ntasks_per_socket;2235,96206
	uint32_t num_cpu_groups;2237,96291
	char *partition;partition2238,96351
	uint64_t pn_min_memory;2239,96409
	char *qos;qos2242,96545
	char *resv_name;resv_name2243,96592
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo2244,96647
	void *working_cluster_rec;working_cluster_rec2248,96793
} resource_allocation_response_msg_t;2251,96957
typedef struct job_alloc_info_response_msg 2253,96996
	uint32_t job_id;2254,97041
	char *node_list;node_list2255,97081
	uint32_t num_cpu_groups;2256,97128
	uint16_t *cpus_per_node;cpus_per_node2257,97188
	uint32_t *cpu_count_reps;cpu_count_reps2258,97233
	uint32_t node_cnt;2259,97300
	slurm_addr_t *node_addr;node_addr2260,97341
	uint32_t error_code;2261,97391
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo2262,97450
} job_alloc_info_response_msg_t;2266,97596
typedef struct partition_info_msg 2268,97630
	time_t last_update;2269,97666
	uint32_t record_count;2270,97713
	partition_info_t *partition_array;partition_array2271,97761
} partition_info_msg_t;2272,97825
typedef struct will_run_response_msg 2274,97850
	uint32_t job_id;2275,97889
	char *node_list;node_list2276,97932
	List preemptee_job_id;2277,97983
	uint32_t proc_cnt;2278,98046
	time_t start_time;2279,98103
	double sys_usage_per;2280,98154
} will_run_response_msg_t;2281,98207
	char *cnodes;cnodes2287,98290
	int32_t *cnode_inx;cnode_inx2288,98345
	uint32_t job_id;2293,98535
	void *job_ptr;job_ptr2294,98573
	uint32_t user_id;2295,98635
	char *user_name;user_name2296,98692
} block_job_info_t;2297,98751
	char *bg_block_id;bg_block_id2300,98789
	char *blrtsimage;blrtsimage2301,98809
	uint16_t conn_type[conn_type2302,98866
	uint32_t cnode_cnt;2303,98907
	uint32_t cnode_err_cnt;2304,98928
	int32_t *ionode_inx;ionode_inx2305,98953
	char *ionode_str;ionode_str2309,99118
	List job_list;2310,99137
	char *linuximage;linuximage2311,99203
	char *mloaderimage;mloaderimage2312,99260
	int32_t *mp_inx;mp_inx2313,99319
	char *mp_str;mp_str2316,99454
	uint16_t node_use;2317,99469
	char *ramdiskimage;ramdiskimage2318,99489
	char *reason;reason2319,99548
	uint16_t state;2320,99563
} block_info_t;2321,99580
	block_info_t *block_array;block_array2324,99614
	time_t    last_update;2325,99642
	uint32_t  record_count;2326,99666
} block_info_msg_t;2327,99691
typedef block_info_t update_block_msg_t;2329,99712
#define RESERVE_FLAG_MAINT	2396,102098
#define RESERVE_FLAG_NO_MAINT	2397,102158
#define RESERVE_FLAG_DAILY	2398,102223
#define RESERVE_FLAG_NO_DAILY	2399,102283
#define RESERVE_FLAG_WEEKLY	2400,102348
#define RESERVE_FLAG_NO_WEEKLY	2401,102410
#define RESERVE_FLAG_IGN_JOBS	2402,102477
#define RESERVE_FLAG_NO_IGN_JOB	2403,102545
#define RESERVE_FLAG_ANY_NODES	2405,102636
#define RESERVE_FLAG_NO_ANY_NODES	2407,102717
#define RESERVE_FLAG_STATIC 2409,102806
#define RESERVE_FLAG_NO_STATIC 2410,102879
#define RESERVE_FLAG_PART_NODES	2412,102968
#define RESERVE_FLAG_NO_PART_NODES	2414,103053
#define RESERVE_FLAG_OVERLAP	2416,103147
#define RESERVE_FLAG_SPEC_NODES	2418,103229
#define RESERVE_FLAG_FIRST_CORES	2420,103313
#define RESERVE_FLAG_TIME_FLOAT	2422,103407
#define RESERVE_FLAG_REPLACE	2424,103491
#define RESERVE_FLAG_ALL_NODES	2426,103586
#define RESERVE_FLAG_PURGE_COMP	2428,103667
typedef struct reserve_info 2431,103766
	char *accounts;accounts2432,103796
	char *burst_buffer;burst_buffer2433,103855
	uint32_t core_cnt;2434,103920
	time_t end_time;2435,103970
	char *features;features2436,104018
	uint32_t flags;2437,104065
	char *licenses;licenses2438,104114
	char *name;name2439,104171
	uint32_t node_cnt;2440,104211
	int32_t *node_inx;node_inx2441,104261
	char *node_list;node_list2444,104397
	char *partition;partition2445,104451
	time_t start_time;2446,104504
	uint32_t resv_watts;2447,104556
	char *tres_str;tres_str2448,104615
	char *users;users2449,104681
} reserve_info_t;2450,104734
typedef struct reserve_info_msg 2452,104753
	time_t last_update;2453,104787
	uint32_t record_count;2454,104834
	reserve_info_t *reservation_array;reservation_array2455,104882
} reserve_info_msg_t;2456,104948
typedef struct resv_desc_msg 2458,104971
	char *accounts;accounts2459,105002
	char *burst_buffer;burst_buffer2460,105061
	uint32_t *core_cnt;core_cnt2461,105126
	uint32_t duration;2462,105177
	time_t end_time;2463,105238
	char *features;features2464,105286
	uint32_t flags;2465,105333
	char *licenses;licenses2466,105382
	char *name;name2467,105439
	uint32_t *node_cnt;node_cnt2468,105500
	char *node_list;node_list2473,105761
	char *partition;partition2474,105815
	time_t start_time;2475,105868
	uint32_t resv_watts;2476,105920
	char *tres_str;tres_str2477,105979
	char *users;users2478,106045
} resv_desc_msg_t;2479,106098
typedef struct reserve_response_msg 2481,106118
	char *name;name2482,106156
} reserve_response_msg_t;2483,106196
typedef struct reservation_name_msg 2485,106223
	char *name;name2486,106261
} reservation_name_msg_t;2488,106337
#define DEBUG_FLAG_SELECT_TYPE	2491,106365
#define DEBUG_FLAG_STEPS	2492,106439
#define DEBUG_FLAG_TRIGGERS	2493,106505
#define DEBUG_FLAG_CPU_BIND	2494,106577
#define DEBUG_FLAG_WIKI	2495,106642
#define DEBUG_FLAG_NO_CONF_HASH	2496,106716
#define DEBUG_FLAG_GRES	2499,106849
#define DEBUG_FLAG_BG_PICK 2500,106921
#define DEBUG_FLAG_BG_WIRES	2502,107024
#define DEBUG_FLAG_BG_ALGO	2504,107114
#define DEBUG_FLAG_BG_ALGO_DEEP	2505,107190
#define DEBUG_FLAG_PRIO 2507,107288
#define DEBUG_FLAG_BACKFILL	2509,107376
#define DEBUG_FLAG_GANG	2511,107466
#define DEBUG_FLAG_RESERVATION	2512,107537
#define DEBUG_FLAG_FRONT_END	2513,107615
#define DEBUG_FLAG_NO_REALTIME	2514,107685
#define DEBUG_FLAG_SWITCH	2517,107826
#define DEBUG_FLAG_ENERGY	2518,107895
#define DEBUG_FLAG_EXT_SENSORS	2519,107970
#define DEBUG_FLAG_LICENSE	2520,108048
#define DEBUG_FLAG_PROFILE	2522,108137
#define DEBUG_FLAG_INFINIBAND	2524,108226
#define DEBUG_FLAG_FILESYSTEM 2526,108321
#define DEBUG_FLAG_JOB_CONT 2528,108417
#define DEBUG_FLAG_TASK 2529,108491
#define DEBUG_FLAG_PROTOCOL	2530,108557
#define DEBUG_FLAG_BACKFILL_MAP	2531,108633
#define DEBUG_FLAG_TRACE_JOBS 2533,108730
#define DEBUG_FLAG_ROUTE 2535,108826
#define DEBUG_FLAG_DB_ASSOC 2536,108890
#define DEBUG_FLAG_DB_EVENT 2537,108965
#define DEBUG_FLAG_DB_JOB 2538,109034
#define DEBUG_FLAG_DB_QOS 2539,109110
#define DEBUG_FLAG_DB_QUERY 2540,109177
#define DEBUG_FLAG_DB_RESV 2541,109255
#define DEBUG_FLAG_DB_RES 2542,109330
#define DEBUG_FLAG_DB_STEP 2543,109402
#define DEBUG_FLAG_DB_USAGE 2544,109479
#define DEBUG_FLAG_DB_WCKEY 2545,109555
#define DEBUG_FLAG_BURST_BUF 2546,109633
#define DEBUG_FLAG_CPU_FREQ 2547,109710
#define DEBUG_FLAG_POWER 2548,109784
#define DEBUG_FLAG_TIME_CRAY 2549,109860
#define DEBUG_FLAG_DB_ARCHIVE	2550,109938
#define DEBUG_FLAG_DB_TRES 2551,110015
#define DEBUG_FLAG_ESEARCH 2552,110092
#define DEBUG_FLAG_NODE_FEATURES 2553,110169
#define DEBUG_FLAG_FEDR 2554,110247
#define GROUP_FORCE	2556,110322
#define GROUP_CACHE	2559,110447
#define GROUP_TIME_MASK	2560,110523
#define PREEMPT_MODE_OFF	2563,110614
#define PREEMPT_MODE_SUSPEND	2564,110675
#define PREEMPT_MODE_REQUEUE	2565,110741
#define PREEMPT_MODE_CHECKPOINT	2566,110815
#define PREEMPT_MODE_CANCEL	2568,110916
#define PREEMPT_MODE_GANG	2569,110979
#define RECONFIG_KEEP_PART_INFO 2571,111042
#define RECONFIG_KEEP_PART_STAT 2572,111136
#define HEALTH_CHECK_NODE_IDLE	2574,111232
#define HEALTH_CHECK_NODE_ALLOC	2575,111298
#define HEALTH_CHECK_NODE_MIXED	2576,111376
#define HEALTH_CHECK_CYCLE	2577,111458
#define HEALTH_CHECK_NODE_ANY	2578,111523
#define PROLOG_FLAG_ALLOC	2580,111594
#define PROLOG_FLAG_NOHOLD	2581,111664
#define PROLOG_FLAG_CONTAIN 2584,111814
#define PROLOG_FLAG_SERIAL 2586,111922
#define LOG_FMT_ISO8601_MS 2588,111995
#define LOG_FMT_ISO8601 2589,112029
#define LOG_FMT_RFC5424_MS 2590,112063
#define LOG_FMT_RFC5424 2591,112097
#define LOG_FMT_CLOCK 2592,112131
#define LOG_FMT_SHORT 2593,112165
#define LOG_FMT_THREAD_ID 2594,112199
typedef struct slurm_ctl_conf 2596,112234
	time_t last_update;2597,112266
	char *accounting_storage_tres;accounting_storage_tres2598,112334
	uint16_t accounting_storage_enforce;2599,112385
	char *accounting_storage_backup_host;accounting_storage_backup_host2601,112505
	char *accounting_storage_host;accounting_storage_host2603,112590
	char *accounting_storage_loc;accounting_storage_loc2604,112652
	char *accounting_storage_pass;accounting_storage_pass2606,112736
	uint32_t accounting_storage_port;2608,112810
	char *accounting_storage_type;accounting_storage_type2609,112882
	char *accounting_storage_user;accounting_storage_user2610,112944
	uint16_t acctng_store_job_comment;2611,113006
	void *acct_gather_conf;acct_gather_conf2612,113079
	char *acct_gather_energy_type;acct_gather_energy_type2613,113132
	char *acct_gather_profile_type;acct_gather_profile_type2614,113193
	char *acct_gather_infiniband_type;acct_gather_infiniband_type2615,113256
	char *acct_gather_filesystem_type;acct_gather_filesystem_type2616,113325
	uint16_t acct_gather_node_freq;2617,113394
	char *authinfo;authinfo2618,113464
	char *authtype;authtype2619,113508
	char *backup_addr;backup_addr2620,113552
	char *backup_controller;backup_controller2621,113618
	uint16_t batch_start_timeout;2622,113684
	char *bb_type;bb_type2623,113753
	time_t boot_time;2624,113801
	char *checkpoint_type;checkpoint_type2625,113853
	char *chos_loc;chos_loc2626,113906
	char *core_spec_plugin;core_spec_plugin2627,113945
	char *cluster_name;cluster_name2628,114008
	uint16_t complete_wait;2629,114074
	char *control_addr;control_addr2631,114177
	char *control_machine;control_machine2632,114242
	uint32_t cpu_freq_def;2633,114305
	uint32_t cpu_freq_govs;2634,114368
	char *crypto_type;crypto_type2635,114426
	uint64_t debug_flags;2636,114483
	uint64_t def_mem_per_cpu;2637,114546
	uint16_t disable_root_jobs;2638,114615
	uint16_t eio_timeout;2639,114687
	uint16_t enforce_part_limits;2640,114747
	char *epilog;epilog2642,114855
	uint32_t epilog_msg_time;2643,114900
	char *epilog_slurmctld;epilog_slurmctld2645,115002
	char *ext_sensors_type;ext_sensors_type2646,115073
	uint16_t ext_sensors_freq;2647,115133
	void *ext_sensors_conf;ext_sensors_conf2648,115201
	uint16_t fast_schedule;2649,115260
	uint32_t first_job_id;2651,115378
	uint16_t fs_dampening_factor;2652,115447
	uint16_t get_env_timeout;2653,115515
	char * gres_plugins;2654,115587
	uint16_t group_info;2655,115648
	uint32_t hash_val;2656,115701
	uint16_t health_check_interval;2657,115766
	uint16_t health_check_node_state;2658,115832
	char * health_check_program;2661,115971
	uint16_t inactive_limit;2662,116040
	char *job_acct_gather_freq;job_acct_gather_freq2664,116150
	char *job_acct_gather_type;job_acct_gather_type2666,116241
	char *job_acct_gather_params;job_acct_gather_params2667,116303
	char *job_ckpt_dir;job_ckpt_dir2668,116373
	char *job_comp_host;job_comp_host2669,116439
	char *job_comp_loc;job_comp_loc2670,116495
	char *job_comp_pass;job_comp_pass2671,116554
	uint32_t job_comp_port;2672,116614
	char *job_comp_type;job_comp_type2673,116673
	char *job_comp_user;job_comp_user2674,116729
	char *job_container_plugin;job_container_plugin2675,116785
	char *job_credential_private_key;job_credential_private_key2676,116846
	char *job_credential_public_certificate;job_credential_public_certificate2677,116907
	uint16_t job_file_append;2678,116980
	uint16_t job_requeue;2679,117047
	char *job_submit_plugins;job_submit_plugins2680,117117
	uint16_t keep_alive_time;2681,117185
	uint16_t kill_on_bad_exit;2682,117256
	uint16_t kill_wait;2685,117405
	char *launch_params;launch_params2687,117493
	char *launch_type;launch_type2688,117550
	char *layouts;layouts2689,117605
	char *licenses;licenses2690,117667
	char *licenses_used;licenses_used2691,117726
	uint16_t log_fmt;2692,117784
	char *mail_domain;mail_domain2693,117841
	char *mail_prog;mail_prog2694,117905
	uint32_t max_array_sz;2695,117954
	uint32_t max_job_cnt;2696,118007
	uint32_t max_job_id;2697,118066
	uint64_t max_mem_per_cpu;2698,118135
	uint32_t max_step_cnt;2699,118204
	uint16_t max_tasks_per_node;2700,118266
	char *mcs_plugin;mcs_plugin2701,118325
	char *mcs_plugin_params;mcs_plugin_params2702,118366
	uint16_t mem_limit_enforce;2703,118420
	uint32_t min_job_age;2704,118488
	char *mpi_default;mpi_default2706,118590
	char *mpi_params;mpi_params2707,118646
	char *msg_aggr_params;msg_aggr_params2708,118686
	uint16_t msg_timeout;2709,118748
	uint16_t tcp_timeout;2710,118793
	uint32_t next_job_id;2711,118834
	char *node_features_plugins;node_features_plugins2712,118901
	char *node_prefix;node_prefix2713,118974
	uint16_t over_time_limit;2715,119087
	char *plugindir;plugindir2717,119208
	char *plugstack;plugstack2718,119252
	char *power_parameters;power_parameters2719,119320
	char *power_plugin;power_plugin2720,119379
	uint16_t preempt_mode;2721,119435
	char *preempt_type;preempt_type2722,119501
	uint32_t priority_decay_hl;2723,119560
	uint32_t priority_calc_period;2725,119642
	uint16_t priority_favor_small;2727,119730
	uint16_t priority_flags;2728,119796
	uint32_t priority_max_age;2730,119906
    	char *priority_params;priority_params2732,120009
	uint16_t priority_reset_period;2733,120070
	char *priority_type;priority_type2735,120159
	uint32_t priority_weight_age;2736,120211
	uint32_t priority_weight_fs;2737,120270
	uint32_t priority_weight_js;2738,120334
	uint32_t priority_weight_part;2739,120397
	uint32_t priority_weight_qos;2740,120463
	char    *priority_weight_tres;priority_weight_tres2741,120522
	uint16_t private_data;2742,120594
	char *proctrack_type;proctrack_type2744,120680
	char *prolog;prolog2745,120738
	uint16_t prolog_epilog_timeout;2746,120797
	char *prolog_slurmctld;prolog_slurmctld2747,120858
	uint16_t propagate_prio_process;2748,120929
	uint16_t prolog_flags;2750,121024
	char *propagate_rlimits;propagate_rlimits2752,121118
	char *propagate_rlimits_except;propagate_rlimits_except2753,121190
	char *reboot_program;reboot_program2754,121263
	uint16_t reconfig_flags;2755,121319
	char *requeue_exit;requeue_exit2756,121365
	char *requeue_exit_hold;requeue_exit_hold2757,121417
	char *resume_program;resume_program2758,121474
	uint16_t resume_rate;2759,121536
	uint16_t resume_timeout;2760,121602
	char *resv_epilog;resv_epilog2762,121698
	uint16_t resv_over_run;2763,121768
	char *resv_prolog;resv_prolog2765,121857
	uint16_t ret2service;2766,121927
	char *route_plugin;route_plugin2768,122009
	char *salloc_default_command;salloc_default_command2769,122053
	char *sbcast_parameters;sbcast_parameters2770,122113
	char *sched_logfile;sched_logfile2771,122168
	uint16_t sched_log_level;2772,122238
	char *sched_params;sched_params2773,122312
	uint16_t sched_time_slice;2775,122410
	char *schedtype;schedtype2776,122476
	char *select_type;select_type2777,122525
	void *select_conf_key_pairs;select_conf_key_pairs2778,122580
	uint16_t select_type_param;2780,122691
	char *slurm_conf;slurm_conf2782,122782
	uint32_t slurm_user_id;2783,122837
	char *slurm_user_name;slurm_user_name2784,122891
	uint32_t slurmd_user_id;2785,122949
	char *slurmd_user_name;slurmd_user_name2786,123004
	uint16_t slurmctld_debug;2787,123060
	char *slurmctld_logfile;slurmctld_logfile2788,123117
	char *slurmctld_pidfile;slurmctld_pidfile2789,123187
	char *slurmctld_plugstack;slurmctld_plugstack2790,123257
	uint32_t slurmctld_port;2791,123316
	uint16_t slurmctld_port_count;2792,123390
	uint16_t slurmctld_timeout;2793,123459
	uint16_t slurmd_debug;2795,123578
	char *slurmd_logfile;slurmd_logfile2796,123629
	char *slurmd_pidfile;slurmd_pidfile2797,123694
	char *slurmd_plugstack;slurmd_plugstack2798,123763
	uint32_t slurmd_port;2799,123817
	char *slurmd_spooldir;slurmd_spooldir2800,123884
	uint16_t slurmd_timeout;2801,123952
	char *srun_epilog;srun_epilog2803,124055
	uint16_t *srun_port_range;srun_port_range2804,124106
	char *srun_prolog;srun_prolog2805,124160
	char *state_save_location;state_save_location2806,124211
	char *suspend_exc_nodes;suspend_exc_nodes2808,124296
	char *suspend_exc_parts;suspend_exc_parts2809,124358
	char *suspend_program;suspend_program2810,124425
	uint16_t suspend_rate;2811,124490
	uint32_t suspend_time;2812,124559
	uint16_t suspend_timeout;2813,124636
	char *switch_type;switch_type2815,124735
	char *task_epilog;task_epilog2816,124789
	char *task_plugin;task_plugin2817,124846
	uint32_t task_plugin_param;2818,124891
	char *task_prolog;task_prolog2819,124941
	char *tmp_fs;tmp_fs2820,124998
	char *topology_param;topology_param2821,125054
	char *topology_plugin;topology_plugin2822,125111
	uint16_t track_wckey;2823,125165
	uint16_t tree_width;2824,125230
	char *unkillable_program;unkillable_program2825,125296
	uint16_t unkillable_timeout;2827,125412
	uint16_t use_pam;2830,125581
	uint16_t use_spec_resources;2831,125633
	char *version;version2833,125735
	uint16_t vsize_factor;2834,125779
	uint16_t wait_time;2835,125842
	uint16_t z_16;2836,125893
	uint32_t z_32;2837,125940
	char *z_char;z_char2838,125987
} slurm_ctl_conf_t;2839,126033
typedef struct slurmd_status_msg 2841,126054
	time_t booted;2842,126089
	time_t last_slurmctld_msg;2843,126137
	uint16_t slurmd_debug;2844,126202
	uint16_t actual_cpus;2845,126247
	uint16_t actual_boards;2846,126308
	uint16_t actual_sockets;2847,126372
	uint16_t actual_cores;2848,126435
	uint16_t actual_threads;2849,126497
	uint64_t actual_real_mem;2850,126558
	uint32_t actual_tmp_disk;2851,126616
	uint32_t pid;2852,126678
	char *hostname;hostname2853,126712
	char *slurmd_logfile;slurmd_logfile2854,126752
	char *step_list;step_list2855,126807
	char *version;version2856,126857
} slurmd_status_t;2857,126897
typedef struct submit_response_msg 2859,126917
	uint32_t job_id;2860,126954
	uint32_t step_id;2861,126985
	uint32_t error_code;2862,127018
} submit_response_msg_t;2863,127077
typedef struct slurm_update_node_msg 2867,127228
	char *features;features2868,127267
	char *features_act;features_act2869,127322
	char *gres;gres2870,127377
	char *node_addr;node_addr2871,127428
	char *node_hostname;node_hostname2872,127482
	char *node_names;node_names2873,127537
	uint32_t node_state;2874,127582
	char *reason;reason2875,127631
	uint32_t reason_uid;2876,127692
	uint32_t weight;2878,127787
} update_node_msg_t;2879,127831
typedef struct slurm_update_front_end_msg 2881,127853
	char *name;name2882,127897
	uint32_t node_state;2883,127957
	char *reason;reason2884,128006
	uint32_t reason_uid;2885,128067
} update_front_end_msg_t;2887,128162
typedef struct partition_info update_part_msg_t;2889,128189
typedef struct job_sbcast_cred_msg 2891,128239
	uint32_t      job_id;2892,128276
	slurm_addr_t  *node_addr;node_addr2893,128322
	uint32_t      node_cnt;2894,128373
	char         *node_list;node_list2895,128420
	sbcast_cred_t *sbcast_cred;sbcast_cred2896,128475
} job_sbcast_cred_msg_t;2897,128532
typedef struct slurm_step_ctx_struct slurm_step_ctx_t;2900,128612
#define STAT_COMMAND_RESET	2902,128668
#define STAT_COMMAND_GET	2903,128702
typedef struct stats_info_request_msg 2904,128734
	uint16_t command_id;2905,128774
} stats_info_request_msg_t;2906,128796
typedef struct stats_info_response_msg 2908,128825
	uint32_t parts_packed;2909,128866
	time_t req_time;2910,128890
	time_t req_time_start;2911,128908
	uint32_t server_thread_count;2912,128932
	uint32_t agent_queue_size;2913,128963
	uint32_t schedule_cycle_max;2915,128992
	uint32_t schedule_cycle_last;2916,129022
	uint32_t schedule_cycle_sum;2917,129053
	uint32_t schedule_cycle_counter;2918,129083
	uint32_t schedule_cycle_depth;2919,129117
	uint32_t schedule_queue_len;2920,129149
	uint32_t jobs_submitted;2922,129180
	uint32_t jobs_started;2923,129206
	uint32_t jobs_completed;2924,129230
	uint32_t jobs_canceled;2925,129256
	uint32_t jobs_failed;2926,129281
	uint32_t bf_backfilled_jobs;2928,129305
	uint32_t bf_last_backfilled_jobs;2929,129335
	uint32_t bf_cycle_counter;2930,129370
	uint64_t bf_cycle_sum;2931,129398
	uint32_t bf_cycle_last;2932,129422
	uint32_t bf_cycle_max;2933,129447
	uint32_t bf_last_depth;2934,129471
	uint32_t bf_last_depth_try;2935,129496
	uint32_t bf_depth_sum;2936,129525
	uint32_t bf_depth_try_sum;2937,129549
	uint32_t bf_queue_len;2938,129577
	uint32_t bf_queue_len_sum;2939,129601
	time_t   bf_when_last_cycle;2940,129629
	uint32_t bf_active;2941,129659
	uint32_t rpc_type_size;2943,129681
	uint16_t *rpc_type_id;rpc_type_id2944,129706
	uint32_t *rpc_type_cnt;rpc_type_cnt2945,129730
	uint64_t *rpc_type_time;rpc_type_time2946,129755
	uint32_t rpc_user_size;2948,129782
	uint32_t *rpc_user_id;rpc_user_id2949,129807
	uint32_t *rpc_user_cnt;rpc_user_cnt2950,129831
	uint64_t *rpc_user_time;rpc_user_time2951,129856
} stats_info_response_msg_t;2952,129882
#define TRIGGER_FLAG_PERM	2954,129912
#define TRIGGER_RES_TYPE_JOB 2956,129947
#define TRIGGER_RES_TYPE_NODE 2957,129994
#define TRIGGER_RES_TYPE_SLURMCTLD 2958,130041
#define TRIGGER_RES_TYPE_SLURMDBD 2959,130088
#define TRIGGER_RES_TYPE_DATABASE 2960,130135
#define TRIGGER_RES_TYPE_FRONT_END 2961,130182
#define TRIGGER_RES_TYPE_OTHER 2962,130229
#define TRIGGER_TYPE_UP 2964,130277
#define TRIGGER_TYPE_DOWN 2965,130328
#define TRIGGER_TYPE_FAIL 2966,130379
#define TRIGGER_TYPE_TIME 2967,130430
#define TRIGGER_TYPE_FINI 2968,130481
#define TRIGGER_TYPE_RECONFIG 2969,130532
#define TRIGGER_TYPE_BLOCK_ERR 2970,130583
#define TRIGGER_TYPE_IDLE 2971,130634
#define TRIGGER_TYPE_DRAINED 2972,130685
#define TRIGGER_TYPE_PRI_CTLD_FAIL 2973,130736
#define TRIGGER_TYPE_PRI_CTLD_RES_OP 2974,130787
#define TRIGGER_TYPE_PRI_CTLD_RES_CTRL 2975,130838
#define TRIGGER_TYPE_PRI_CTLD_ACCT_FULL 2976,130889
#define TRIGGER_TYPE_BU_CTLD_FAIL 2977,130940
#define TRIGGER_TYPE_BU_CTLD_RES_OP 2978,130991
#define TRIGGER_TYPE_BU_CTLD_AS_CTRL 2979,131042
#define TRIGGER_TYPE_PRI_DBD_FAIL 2980,131093
#define TRIGGER_TYPE_PRI_DBD_RES_OP 2981,131144
#define TRIGGER_TYPE_PRI_DB_FAIL 2982,131195
#define TRIGGER_TYPE_PRI_DB_RES_OP 2983,131246
#define TRIGGER_TYPE_BURST_BUFFER 2984,131297
typedef struct trigger_info 2987,131350
	uint16_t flags;2988,131380
	uint32_t trig_id;2989,131419
	uint16_t res_type;2990,131455
	char *   res_id;2991,131500
	uint32_t trig_type;2992,131536
	uint16_t offset;2993,131578
	uint32_t user_id;2994,131638
	char *   program;2995,131687
} trigger_info_t;2996,131731
typedef struct trigger_info_msg 2998,131750
	uint32_t record_count;2999,131784
	trigger_info_t *trigger_array;trigger_array3000,131833
} trigger_info_msg_t;3001,131891
typedef struct slurm_license_info 3006,131953
	char *name;name3007,131989
	uint32_t total;3008,132030
	uint32_t in_use;3009,132093
	uint32_t available;3010,132146
	uint8_t remote;3011,132202
} slurm_license_info_t;3013,132296
typedef struct license_info_msg 3017,132385
	time_t last_update;3018,132419
	uint32_t num_lic;3019,132440
	slurm_license_info_t *lic_array;lic_array3020,132459
} license_info_msg_t;3021,132493
	uint32_t  job_array_count;3024,132533
	char    **job_array_id;job_array_id3025,132561
	uint32_t *error_code;error_code3026,132626
} job_array_resp_msg_t;3027,132649
	List assoc_list;3031,132748
	List qos_list;3032,132818
	uint32_t tres_cnt;3033,132886
	char **tres_names;tres_names3034,132906
	List user_list;3035,132926
} assoc_mgr_info_msg_t;3036,132977
#define ASSOC_MGR_INFO_FLAG_ASSOC 3038,133002
#define ASSOC_MGR_INFO_FLAG_USERS 3039,133047
#define ASSOC_MGR_INFO_FLAG_QOS 3040,133092
	List acct_list;3043,133155
	uint32_t flags;3044,133207
	List qos_list;3045,133265
	List user_list;3046,133313
} assoc_mgr_info_request_msg_t;3047,133362
typedef struct network_callerid_msg 3049,133395
	unsigned char ip_src[ip_src3050,133433
	unsigned char ip_dst[ip_dst3051,133460
	uint32_t port_src;3052,133487
	uint32_t port_dst;3053,133507
	int32_t af;3054,133527
} network_callerid_msg_t;3055,133574
#define KILL_JOB_BATCH	3262,142343
#define KILL_JOB_ARRAY	3263,142404
#define KILL_STEPS_ONLY	3264,142474
#define KILL_FULL_JOB	3265,142539
#define KILL_FED_REQUEUE 3266,142616
#define WARN_SENT	3270,142846
#define BB_FLAG_DISABLE_PERSISTENT	4759,199274
#define BB_FLAG_ENABLE_PERSISTENT	4762,199408
#define BB_FLAG_EMULATE_CRAY	4765,199539
#define BB_FLAG_PRIVATE_DATA	4766,199608
#define BB_FLAG_TEARDOWN_FAILURE	4767,199681
#define BB_SIZE_IN_NODES	4769,199764
#define BB_STATE_PENDING	4770,199808
#define BB_STATE_ALLOCATING	4771,199878
#define BB_STATE_ALLOCATED	4772,199944
#define BB_STATE_DELETING	4773,200009
#define BB_STATE_DELETED	4774,200073
#define BB_STATE_STAGING_IN	4775,200136
#define BB_STATE_STAGED_IN	4776,200204
#define BB_STATE_PRE_RUN	4777,200272
#define BB_STATE_ALLOC_REVOKE	4778,200337
#define BB_STATE_RUNNING	4779,200406
#define BB_STATE_SUSPEND	4780,200460
#define BB_STATE_POST_RUN	4781,200525
#define BB_STATE_STAGING_OUT	4782,200592
#define BB_STATE_STAGED_OUT	4783,200662
#define BB_STATE_TEARDOWN	4784,200732
#define BB_STATE_COMPLETE	4785,200799
	uint64_t granularity;4789,200957
	char *name;name4790,201026
	uint64_t total_space;4791,201067
	uint64_t used_space;4793,201168
	uint64_t unfree_space;4794,201222
} burst_buffer_pool_t;4795,201293
	char *account;account4798,201334
	uint32_t array_job_id;4799,201389
	uint32_t array_task_id;4800,201413
	time_t create_time;4801,201438
	uint32_t job_id;4802,201482
	char *name;name4803,201500
	char *partition;partition4804,201552
	char *pool;pool4805,201610
	char *qos;qos4806,201651
	uint64_t size;4807,201698
	uint16_t state;4808,201741
	uint32_t user_id;4809,201780
} burst_buffer_resv_t;4810,201799
	uint32_t user_id;4813,201840
	uint64_t used;4814,201859
} burst_buffer_use_t;4815,201875
	char *allow_users;allow_users4818,201915
	char *default_pool;default_pool4819,201935
	char *create_buffer;create_buffer4820,201991
	char *deny_users;deny_users4821,202013
	char *destroy_buffer;destroy_buffer4822,202032
	uint32_t flags;4823,202055
	char *get_sys_state;get_sys_state4824,202100
	uint64_t granularity;4825,202122
	uint32_t pool_cnt;4826,202187
	burst_buffer_pool_t *pool_ptr;pool_ptr4827,202243
	char *name;name4828,202275
	uint32_t other_timeout;4829,202308
	uint32_t stage_in_timeout;4830,202356
	uint32_t stage_out_timeout;4831,202406
	char *start_stage_in;start_stage_in4832,202457
	char *start_stage_out;start_stage_out4833,202480
	char *stop_stage_in;stop_stage_in4834,202504
	char *stop_stage_out;stop_stage_out4835,202526
	uint64_t total_space;4836,202549
	uint64_t unfree_space;4837,202588
	uint64_t used_space;4838,202650
	uint32_t validate_timeout;4839,202699
	uint32_t  buffer_count;4841,202750
	burst_buffer_resv_t *burst_buffer_resv_ptr;burst_buffer_resv_ptr4842,202775
	uint32_t  use_count;4844,202821
	burst_buffer_use_t *burst_buffer_use_ptr;burst_buffer_use_ptr4845,202843
} burst_buffer_info_t;4846,202886
	burst_buffer_info_t *burst_buffer_array;burst_buffer_array4849,202927
	uint32_t  record_count;4850,202969
} burst_buffer_info_msg_t;4851,203032

/usr/include/slurm/spank.h,2495
#define SPANK_H39,2199
typedef struct spank_handle * spank_t;43,2278
typedef int (spank_f)47,2368
enum spank_item 132,5150
    S_JOB_UID,133,5168
    S_JOB_GID,134,5248
    S_JOB_ID,135,5328
    S_JOB_STEPID,136,5408
    S_JOB_NNODES,137,5488
    S_JOB_NODEID,138,5568
    S_JOB_LOCAL_TASK_COUNT,139,5648
    S_JOB_TOTAL_TASK_COUNT,140,5728
    S_JOB_NCPUS,141,5808
    S_JOB_ARGV,142,5888
    S_JOB_ENV,143,5968
    S_TASK_ID,144,6048
    S_TASK_GLOBAL_ID,145,6128
    S_TASK_EXIT_STATUS,146,6208
    S_TASK_PID,147,6288
    S_JOB_PID_TO_GLOBAL_ID,148,6368
    S_JOB_PID_TO_LOCAL_ID,149,6448
    S_JOB_LOCAL_TO_GLOBAL_ID,150,6528
    S_JOB_GLOBAL_TO_LOCAL_ID,151,6608
    S_JOB_SUPPLEMENTARY_GIDS,152,6688
    S_SLURM_VERSION,153,6768
    S_SLURM_VERSION_MAJOR,154,6848
    S_SLURM_VERSION_MINOR,155,6928
    S_SLURM_VERSION_MICRO,156,7008
    S_STEP_CPUS_PER_TASK,157,7088
    S_JOB_ALLOC_CORES,159,7244
    S_JOB_ALLOC_MEM,160,7324
    S_STEP_ALLOC_CORES,161,7404
    S_STEP_ALLOC_MEM,162,7484
    S_SLURM_RESTART_COUNT 163,7564
typedef enum spank_item spank_item_t;166,7648
enum spank_err 170,7714
    ESPANK_SUCCESS 171,7731
    ESPANK_ERROR 172,7811
    ESPANK_BAD_ARG 173,7891
    ESPANK_NOT_TASK 174,7971
    ESPANK_ENV_EXISTS 175,8051
    ESPANK_ENV_NOEXIST 176,8131
    ESPANK_NOSPACE 177,8211
    ESPANK_NOT_REMOTE 178,8291
    ESPANK_NOEXIST 179,8371
    ESPANK_NOT_EXECD 180,8451
    ESPANK_NOT_AVAIL 181,8531
    ESPANK_NOT_LOCAL 182,8611
typedef enum spank_err spank_err_t;185,8695
enum spank_context 190,8764
    S_CTX_ERROR,191,8785
    S_CTX_LOCAL,192,8865
    S_CTX_REMOTE,193,8945
    S_CTX_ALLOCATOR,194,9025
    S_CTX_SLURMD,195,9105
    S_CTX_JOB_SCRIPT 196,9185
#define HAVE_S_CTX_SLURMD 199,9269
#define HAVE_S_CTX_JOB_SCRIPT 200,9349
typedef enum spank_context spank_context_t;202,9430
typedef int (*spank_opt_cb_f)spank_opt_cb_f215,9835
struct spank_option 217,9909
    char *         name;218,9931
    char *         arginfo;219,10010
    char *         usage;220,10089
    int            has_arg;221,10168
    int            val;222,10247
    spank_opt_cb_f cb;223,10326
#define SPANK_OPTIONS_TABLE_END 237,10804
#define SPANK_OPTION_MAXLEN 242,10926
extern void slurm_info 407,17032
extern void slurm_error 409,17124
extern void slurm_verbose 411,17217
extern void slurm_debug 413,17312
extern void slurm_debug2 415,17405
extern void slurm_debug3 417,17499
#define SPANK_PLUGIN(428,17711

/usr/include/sys/types.h,3178
#define	_SYS_TYPES_H	23,903
typedef __u_char u_char;33,1033
typedef __u_short u_short;34,1058
typedef __u_int u_int;35,1085
typedef __u_long u_long;36,1108
typedef __quad_t quad_t;37,1133
typedef __u_quad_t u_quad_t;38,1158
typedef __fsid_t fsid_t;39,1187
#  define __u_char_defined40,1212
typedef __loff_t loff_t;44,1255
typedef __ino_t ino_t;48,1334
typedef __ino64_t ino_t;50,1364
# define __ino_t_defined52,1397
typedef __ino64_t ino64_t;55,1489
# define __ino64_t_defined56,1516
typedef __dev_t dev_t;60,1575
# define __dev_t_defined61,1598
typedef __gid_t gid_t;65,1655
# define __gid_t_defined66,1678
typedef __mode_t mode_t;70,1736
# define __mode_t_defined71,1761
typedef __nlink_t nlink_t;75,1821
# define __nlink_t_defined76,1848
typedef __uid_t uid_t;80,1907
# define __uid_t_defined81,1930
typedef __off_t off_t;86,2016
typedef __off64_t off_t;88,2046
# define __off_t_defined90,2079
typedef __off64_t off64_t;93,2171
# define __off64_t_defined94,2198
typedef __pid_t pid_t;98,2257
# define __pid_t_defined99,2280
typedef __id_t id_t;104,2420
# define __id_t_defined105,2441
typedef __ssize_t ssize_t;109,2499
# define __ssize_t_defined110,2526
typedef __daddr_t daddr_t;115,2605
typedef __caddr_t caddr_t;116,2632
#  define __daddr_t_defined117,2659
typedef __key_t key_t;122,2779
# define __key_t_defined123,2802
# define __need_clock_t127,2885
#define	__need_time_t129,2916
#define __need_timer_t130,2938
#define __need_clockid_t131,2961
typedef __useconds_t useconds_t;136,3054
#  define __useconds_t_defined137,3087
typedef __suseconds_t suseconds_t;140,3157
#  define __suseconds_t_defined141,3192
#define	__need_size_t145,3240
typedef unsigned long int ulong;150,3345
typedef unsigned short int ushort;151,3378
typedef unsigned int uint;152,3413
#  define __int8_t_defined161,3636
typedef	char int8_t;162,3663
typedef	short int int16_t;163,3684
typedef	int int32_t;164,3711
typedef long int int64_t;166,3755
__extension__ typedef long long int int64_t;168,3812
typedef	unsigned char u_int8_t;173,3937
typedef	unsigned short int u_int16_t;174,3969
typedef	unsigned int u_int32_t;175,4007
typedef unsigned long int u_int64_t;177,4061
__extension__ typedef unsigned long long int u_int64_t;179,4128
typedef int register_t;182,4193
# define __intN_t(187,4297
# define __u_intN_t(189,4385
#  define __int8_t_defined193,4513
typedef int register_t 205,4740
#define __BIT_TYPES_DEFINED__	211,4897
typedef __blksize_t blksize_t;228,5316
# define __blksize_t_defined229,5347
typedef __blkcnt_t blkcnt_t;235,5492
#  define __blkcnt_t_defined236,5566
typedef __fsblkcnt_t fsblkcnt_t;239,5633
#  define __fsblkcnt_t_defined240,5707
typedef __fsfilcnt_t fsfilcnt_t;243,5776
#  define __fsfilcnt_t_defined244,5850
typedef __blkcnt64_t blkcnt_t;248,5923
#  define __blkcnt_t_defined249,6001
typedef __fsblkcnt64_t fsblkcnt_t;252,6068
#  define __fsblkcnt_t_defined253,6144
typedef __fsfilcnt64_t fsfilcnt_t;256,6213
#  define __fsfilcnt_t_defined257,6289
typedef __blkcnt64_t blkcnt64_t;262,6361
typedef __fsblkcnt64_t fsblkcnt64_t;263,6441
typedef __fsfilcnt64_t fsfilcnt64_t;264,6519

/usr/include/assert.h,616
# undef	_ASSERT_H25,901
# undef	assert26,919
# undef __ASSERT_VOID_CAST27,934
#  undef assert_perror30,980
#define	_ASSERT_H	35,1035
# define __ASSERT_VOID_CAST 39,1126
# define __ASSERT_VOID_CAST 41,1178
# define assert(51,1381
#  define assert_perror(60,1657
extern void __assert_fail 68,1825
extern void __assert_perror_fail 73,2049
extern void __assert 80,2299
# define assert(86,2438
#  define assert_perror(92,2617
#   define __ASSERT_FUNCTION	104,3179
#   define __ASSERT_FUNCTION	107,3297
#   define __ASSERT_FUNCTION	109,3343
# undef static_assert118,3542
# define static_assert 119,3564

/usr/include/linux/xattr.h,1508
#define _LINUX_XATTR_H11,299
#define XATTR_CREATE	13,323
#define XATTR_REPLACE	14,393
#define XATTR_OS2_PREFIX 17,482
#define XATTR_OS2_PREFIX_LEN 18,514
#define XATTR_MAC_OSX_PREFIX 20,575
#define XATTR_MAC_OSX_PREFIX_LEN 21,611
#define XATTR_BTRFS_PREFIX 23,680
#define XATTR_BTRFS_PREFIX_LEN 24,716
#define XATTR_SECURITY_PREFIX	26,781
#define XATTR_SECURITY_PREFIX_LEN 27,823
#define XATTR_SYSTEM_PREFIX 29,894
#define XATTR_SYSTEM_PREFIX_LEN 30,932
#define XATTR_TRUSTED_PREFIX 32,999
#define XATTR_TRUSTED_PREFIX_LEN 33,1039
#define XATTR_USER_PREFIX 35,1108
#define XATTR_USER_PREFIX_LEN 36,1142
#define XATTR_EVM_SUFFIX 39,1230
#define XATTR_NAME_EVM 40,1261
#define XATTR_IMA_SUFFIX 42,1324
#define XATTR_NAME_IMA 43,1355
#define XATTR_SELINUX_SUFFIX 45,1418
#define XATTR_NAME_SELINUX 46,1457
#define XATTR_SMACK_SUFFIX 48,1528
#define XATTR_SMACK_IPIN 49,1565
#define XATTR_SMACK_IPOUT 50,1604
#define XATTR_SMACK_EXEC 51,1645
#define XATTR_SMACK_TRANSMUTE 52,1684
#define XATTR_SMACK_MMAP 53,1733
#define XATTR_NAME_SMACK 54,1772
#define XATTR_NAME_SMACKIPIN	55,1838
#define XATTR_NAME_SMACKIPOUT	56,1906
#define XATTR_NAME_SMACKEXEC	57,1976
#define XATTR_NAME_SMACKTRANSMUTE 58,2044
#define XATTR_NAME_SMACKMMAP 59,2122
#define XATTR_CAPS_SUFFIX 61,2191
#define XATTR_NAME_CAPS 62,2230
#define XATTR_POSIX_ACL_ACCESS 64,2295
#define XATTR_NAME_POSIX_ACL_ACCESS 65,2346
#define XATTR_POSIX_ACL_DEFAULT 66,2425
#define XATTR_NAME_POSIX_ACL_DEFAULT 67,2478

/usr/include/ctype.h,2719
#define	_CTYPE_H	24,920
#  define _ISbit(42,1422
#  define _ISbit(44,1502
  _ISupper 49,1596
  _ISupper = _ISbit 49,1596
  _ISlower 50,1639
  _ISlower = _ISbit 50,1639
  _ISalpha 51,1682
  _ISalpha = _ISbit 51,1682
  _ISdigit 52,1726
  _ISdigit = _ISbit 52,1726
  _ISxdigit 53,1767
  _ISxdigit = _ISbit 53,1767
  _ISspace 54,1821
  _ISspace = _ISbit 54,1821
  _ISprint 55,1865
  _ISprint = _ISbit 55,1865
  _ISgraph 56,1907
  _ISgraph = _ISbit 56,1907
  _ISblank 57,1950
  _ISblank = _ISbit 57,1950
  _IScntrl 58,2011
  _IScntrl = _ISbit 58,2011
  _ISpunct 59,2062
  _ISpunct = _ISbit 59,2062
  _ISalnum 60,2108
  _ISalnum = _ISbit 60,2108
extern const unsigned short int **__ctype_b_loc __ctype_b_loc80,3131
extern const __int32_t **__ctype_tolower_loc __ctype_tolower_loc82,3228
extern const __int32_t **__ctype_toupper_loc __ctype_toupper_loc84,3322
# define __isctype(89,3438
# define __isctype_f(92,3566
#define	__isascii(100,3785
#define	__toascii(101,3857
#define	__exctype(103,3920
extern int tolower 125,4474
#define __tobody(164,5498
# define isalnum(198,6339
# define isalpha(199,6384
# define iscntrl(200,6429
# define isdigit(201,6474
# define islower(202,6519
# define isgraph(203,6564
# define isprint(204,6609
# define ispunct(205,6654
# define isspace(206,6699
# define isupper(207,6744
# define isxdigit(208,6789
#   define isblank(210,6858
__NTH 222,7097
#  define tolower(229,7277
#  define toupper(230,7350
#  define isascii(234,7522
#  define toascii(235,7557
#  define _tolower(237,7593
#  define _toupper(238,7660
#  define __isctype_l(262,8619
# define __exctype_l(265,8724
extern int __tolower_l 288,9386
#  define __tolower_l(296,9725
#  define __toupper_l(298,9828
#  define tolower_l(300,9931
#  define toupper_l(301,9990
#  define __isalnum_l(306,10100
#  define __isalpha_l(307,10159
#  define __iscntrl_l(308,10218
#  define __isdigit_l(309,10277
#  define __islower_l(310,10336
#  define __isgraph_l(311,10395
#  define __isprint_l(312,10454
#  define __ispunct_l(313,10513
#  define __isspace_l(314,10572
#  define __isupper_l(315,10631
#  define __isxdigit_l(316,10690
#  define __isblank_l(318,10752
#   define __isascii_l(321,10859
#   define __toascii_l(322,10908
#  define isalnum_l(325,10967
#  define isalpha_l(326,11015
#  define iscntrl_l(327,11063
#  define isdigit_l(328,11111
#  define islower_l(329,11159
#  define isgraph_l(330,11207
#  define isprint_l(331,11255
#  define ispunct_l(332,11303
#  define isspace_l(333,11351
#  define isupper_l(334,11399
#  define isxdigit_l(335,11447
#  define isblank_l(337,11498
#   define isascii_l(340,11594
#   define toascii_l(341,11643

/usr/include/dirent.h,1301
#define	_DIRENT_H	24,905
typedef __ino_t ino_t;35,1063
typedef __ino64_t ino_t;37,1094
#  define __ino_t_defined39,1128
typedef __ino64_t ino64_t;42,1223
#  define __ino64_t_defined43,1250
# define d_ino	65,1935
# define _D_EXACT_NAMLEN(83,2721
# define _D_ALLOC_NAMLEN(84,2765
# define _D_EXACT_NAMLEN(86,2825
#  define _D_ALLOC_NAMLEN(88,2906
#  define _D_ALLOC_NAMLEN(90,2993
    DT_UNKNOWN 100,3180
# define DT_UNKNOWN	101,3200
    DT_FIFO 102,3231
# define DT_FIFO	103,3248
    DT_CHR 104,3273
# define DT_CHR	105,3289
    DT_DIR 106,3313
# define DT_DIR	107,3329
    DT_BLK 108,3353
# define DT_BLK	109,3369
    DT_REG 110,3393
# define DT_REG	111,3409
    DT_LNK 112,3433
# define DT_LNK	113,3450
    DT_SOCK 114,3474
# define DT_SOCK	115,3492
    DT_WHT 116,3517
# define DT_WHT	117,3533
# define IFTODT(121,3628
# define DTTOIF(122,3677
typedef struct __dirstream DIR;128,3831
extern DIR *opendir opendir135,4073
#  define readdir 169,5205
#   define readdir_r 196,5993
#  define dirfd(227,6925
#    define MAXNAMLEN	237,7208
#    define MAXNAMLEN	239,7248
# define __need_size_t244,7302
#   define scandir 271,8302
#    define scandirat 309,9684
#   define alphasort 335,10598
#   define getdirentries 365,11598
#   define versionsort 391,12343

/usr/include/errno.h,152
# define _ERRNO_H	27,1018
#undef	__need_Emath36,1227
typedef int error_t;68,2296
#  define __error_t_defined	69,2317
# undef __need_error_t71,2355

/usr/include/fcntl.h,1696
#define	_FCNTL_H	23,871
typedef __mode_t mode_t;41,1446
# define __mode_t_defined42,1471
typedef __off_t off_t;47,1558
typedef __off64_t off_t;49,1588
# define __off_t_defined51,1621
typedef __off64_t off64_t;55,1714
# define __off64_t_defined56,1741
typedef __pid_t pid_t;60,1800
# define __pid_t_defined61,1823
# define __need_timespec66,1977
# define S_IFMT	70,2046
# define S_IFDIR	71,2072
# define S_IFCHR	72,2099
# define S_IFBLK	73,2126
# define S_IFREG	74,2153
#  define S_IFIFO	76,2198
#  define S_IFLNK	79,2252
#  define S_IFSOCK	82,2364
# define S_ISUID	87,2428
# define S_ISGID	88,2494
#  define S_ISVTX	92,2710
# define S_IRUSR	95,2747
# define S_IWUSR	96,2802
# define S_IXUSR	97,2858
# define S_IRWXU	99,2958
# define S_IRGRP	101,3009
# define S_IWGRP	102,3064
# define S_IXGRP	103,3120
# define S_IRWXG	105,3220
# define S_IROTH	107,3253
# define S_IWOTH	108,3309
# define S_IXOTH	109,3366
# define S_IRWXO	111,3468
#  define R_OK	118,3661
#  define W_OK	119,3712
#  define X_OK	120,3764
#  define F_OK	121,3818
# define SEEK_SET	127,4024
# define SEEK_CUR	128,4080
# define SEEK_END	129,4135
# define AT_FDCWD	133,4223
# define AT_SYMLINK_NOFOLLOW	136,4360
# define AT_REMOVEDIR	137,4432
# define AT_SYMLINK_FOLLOW	139,4520
#  define AT_NO_AUTOMOUNT	141,4601
#  define AT_EMPTY_PATH	143,4687
# define AT_EACCESS	145,4765
extern int open 163,5454
#  define open 169,5657
#   define openat 194,6470
#  define creat 215,7096
# define F_ULOCK 232,7762
# define F_LOCK 233,7823
# define F_TLOCK 234,7882
# define F_TEST 235,7950
#   define lockf 243,8215
#   define posix_fadvise 263,8796
#   define posix_fallocate 284,9408

/usr/include/inttypes.h,5352
#define _INTTYPES_H	23,899
#  define __gwchar_t 32,1124
typedef __WCHAR_TYPE__ __gwchar_t;34,1183
#  define __need_wchar_t36,1225
typedef wchar_t __gwchar_t;38,1272
# define ____gwchar_t_defined	40,1308
#  define __PRI64_PREFIX	49,1534
#  define __PRIPTR_PREFIX	50,1563
#  define __PRI64_PREFIX	52,1600
#  define __PRIPTR_PREFIX53,1630
# define PRId8	59,1737
# define PRId16	60,1757
# define PRId32	61,1778
# define PRId64	62,1799
# define PRIdLEAST8	64,1836
# define PRIdLEAST16	65,1860
# define PRIdLEAST32	66,1885
# define PRIdLEAST64	67,1910
# define PRIdFAST8	69,1951
# define PRIdFAST16	70,1974
# define PRIdFAST32	71,2014
# define PRIdFAST64	72,2054
# define PRIi8	75,2095
# define PRIi16	76,2115
# define PRIi32	77,2136
# define PRIi64	78,2157
# define PRIiLEAST8	80,2194
# define PRIiLEAST16	81,2218
# define PRIiLEAST32	82,2243
# define PRIiLEAST64	83,2268
# define PRIiFAST8	85,2309
# define PRIiFAST16	86,2332
# define PRIiFAST32	87,2372
# define PRIiFAST64	88,2412
# define PRIo8	91,2475
# define PRIo16	92,2495
# define PRIo32	93,2516
# define PRIo64	94,2537
# define PRIoLEAST8	96,2574
# define PRIoLEAST16	97,2598
# define PRIoLEAST32	98,2623
# define PRIoLEAST64	99,2648
# define PRIoFAST8	101,2689
# define PRIoFAST16	102,2712
# define PRIoFAST32	103,2752
# define PRIoFAST64	104,2792
# define PRIu8	107,2858
# define PRIu16	108,2878
# define PRIu32	109,2899
# define PRIu64	110,2920
# define PRIuLEAST8	112,2957
# define PRIuLEAST16	113,2981
# define PRIuLEAST32	114,3006
# define PRIuLEAST64	115,3031
# define PRIuFAST8	117,3072
# define PRIuFAST16	118,3095
# define PRIuFAST32	119,3135
# define PRIuFAST64	120,3175
# define PRIx8	123,3254
# define PRIx16	124,3274
# define PRIx32	125,3295
# define PRIx64	126,3316
# define PRIxLEAST8	128,3353
# define PRIxLEAST16	129,3377
# define PRIxLEAST32	130,3402
# define PRIxLEAST64	131,3427
# define PRIxFAST8	133,3468
# define PRIxFAST16	134,3491
# define PRIxFAST32	135,3531
# define PRIxFAST64	136,3571
# define PRIX8	139,3650
# define PRIX16	140,3670
# define PRIX32	141,3691
# define PRIX64	142,3712
# define PRIXLEAST8	144,3749
# define PRIXLEAST16	145,3773
# define PRIXLEAST32	146,3798
# define PRIXLEAST64	147,3823
# define PRIXFAST8	149,3864
# define PRIXFAST16	150,3887
# define PRIXFAST32	151,3927
# define PRIXFAST64	152,3967
# define PRIdMAX	156,4063
# define PRIiMAX	157,4099
# define PRIoMAX	158,4135
# define PRIuMAX	159,4171
# define PRIxMAX	160,4207
# define PRIXMAX	161,4243
# define PRIdPTR	165,4336
# define PRIiPTR	166,4373
# define PRIoPTR	167,4410
# define PRIuPTR	168,4447
# define PRIxPTR	169,4484
# define PRIXPTR	170,4521
# define SCNd8	176,4639
# define SCNd16	177,4661
# define SCNd32	178,4683
# define SCNd64	179,4704
# define SCNdLEAST8	181,4741
# define SCNdLEAST16	182,4767
# define SCNdLEAST32	183,4793
# define SCNdLEAST64	184,4818
# define SCNdFAST8	186,4859
# define SCNdFAST16	187,4884
# define SCNdFAST32	188,4924
# define SCNdFAST64	189,4964
# define SCNi8	192,5036
# define SCNi16	193,5058
# define SCNi32	194,5080
# define SCNi64	195,5101
# define SCNiLEAST8	197,5138
# define SCNiLEAST16	198,5164
# define SCNiLEAST32	199,5190
# define SCNiLEAST64	200,5215
# define SCNiFAST8	202,5256
# define SCNiFAST16	203,5281
# define SCNiFAST32	204,5321
# define SCNiFAST64	205,5361
# define SCNu8	208,5435
# define SCNu16	209,5457
# define SCNu32	210,5479
# define SCNu64	211,5500
# define SCNuLEAST8	213,5537
# define SCNuLEAST16	214,5563
# define SCNuLEAST32	215,5589
# define SCNuLEAST64	216,5614
# define SCNuFAST8	218,5655
# define SCNuFAST16	219,5680
# define SCNuFAST32	220,5720
# define SCNuFAST64	221,5760
# define SCNo8	224,5823
# define SCNo16	225,5845
# define SCNo32	226,5867
# define SCNo64	227,5888
# define SCNoLEAST8	229,5925
# define SCNoLEAST16	230,5951
# define SCNoLEAST32	231,5977
# define SCNoLEAST64	232,6002
# define SCNoFAST8	234,6043
# define SCNoFAST16	235,6068
# define SCNoFAST32	236,6108
# define SCNoFAST64	237,6148
# define SCNx8	240,6217
# define SCNx16	241,6239
# define SCNx32	242,6261
# define SCNx64	243,6282
# define SCNxLEAST8	245,6319
# define SCNxLEAST16	246,6345
# define SCNxLEAST32	247,6371
# define SCNxLEAST64	248,6396
# define SCNxFAST8	250,6437
# define SCNxFAST16	251,6462
# define SCNxFAST32	252,6502
# define SCNxFAST64	253,6542
# define SCNdMAX	257,6638
# define SCNiMAX	258,6674
# define SCNoMAX	259,6710
# define SCNuMAX	260,6746
# define SCNxMAX	261,6782
# define SCNdPTR	264,6873
# define SCNiPTR	265,6910
# define SCNoPTR	266,6947
# define SCNuPTR	267,6984
# define SCNxPTR	268,7021
    long int quot;280,7213
    long int rem;281,7250
  } imaxdiv_t;282,7287
    long long int quot;289,7392
    long long int rem;290,7434
  } imaxdiv_t;291,7476
extern intmax_t imaxabs 297,7537
extern imaxdiv_t imaxdiv 300,7692
extern intmax_t strtoimax 304,7846
extern unsigned long int __strtoul_internal 337,8926
extern long int __wcstol_internal 349,9331
extern unsigned long int __wcstoul_internal 361,9740
extern long long int __strtoll_internal 378,10235
extern unsigned long long int __strtoull_internal 391,10638
extern long long int __wcstoll_internal 407,11090
extern unsigned long long int __wcstoull_internal 421,11518

/usr/include/libgen.h,89
#define _LIBGEN_H	19,820
extern char *dirname dirname26,945
#define basename	35,1330

/usr/include/limits.h,818
#define _LIBC_LIMITS_H_	24,931
#define MB_LEN_MAX	32,1134
#  define _LIMITS_H	43,1548
#  define CHAR_BIT	54,1818
#  define SCHAR_MIN	57,1900
#  define SCHAR_MAX	58,1927
#  define UCHAR_MAX	61,2019
#   define CHAR_MIN	65,2124
#   define CHAR_MAX	66,2146
#   define CHAR_MIN	68,2184
#   define CHAR_MAX	69,2214
#  define SHRT_MIN	73,2319
#  define SHRT_MAX	74,2347
#  define USHRT_MAX	77,2445
#  define INT_MIN	80,2531
#  define INT_MAX	81,2564
#  define UINT_MAX	84,2660
#   define LONG_MAX	88,2779
#   define LONG_MAX	90,2828
#  define LONG_MIN	92,2869
#   define ULONG_MAX	96,3000
#   define ULONG_MAX	98,3052
#   define LLONG_MAX	104,3188
#   define LLONG_MIN	105,3231
#   define ULLONG_MAX	108,3348
#  define LLONG_MIN	132,4131
#  define LLONG_MAX	135,4193
#  define ULLONG_MAX	138,4259

/usr/include/sys/mman.h,305
#define	_SYS_MMAN_H	20,874
#define __need_size_t24,943
typedef __off_t off_t;29,1039
typedef __off64_t off_t;31,1069
# define __off_t_defined33,1102
typedef __mode_t mode_t;37,1160
# define __mode_t_defined38,1185
#define MAP_FAILED	44,1294
extern void *mmap mmap57,1944
#  define mmap 66,2252

/usr/include/sys/param.h,582
#define _SYS_PARAM_H 20,876
#define __need_NULL22,903
#define NBBY	36,1254
# define NGROUPS	39,1322
# define MAXSYMLINKS	42,1406
# define CANBSIZ	45,1488
# define MAXPATHLEN	48,1566
# define NOFILE	51,1642
#  define NCARGS	55,1706
# define NCARGS	59,1855
# define NOGROUP	66,1939
# define NODEV	69,2029
#define DEV_BSIZE 74,2126
#define setbit(78,2187
#define clrbit(79,2244
#define isset(80,2304
#define isclr(81,2362
# define howmany(85,2485
# define roundup(88,2558
# define roundup(92,2786
#define powerof2(94,2851
#define MIN(97,2928
#define MAX(98,2965

/usr/include/signal.h,1052
# define _SIGNAL_H25,950
#  define __sig_atomic_t_defined38,1299
typedef __sig_atomic_t sig_atomic_t;40,1354
# undef __need_sig_atomic_t43,1419
#  define __sigset_t_defined48,1557
typedef __sigset_t sigset_t;49,1586
# undef __need_sigset_t51,1623
typedef __pid_t pid_t;61,1797
#  define __pid_t_defined62,1820
typedef __uid_t uid_t;67,1905
#  define __uid_t_defined68,1928
# define __need_timespec74,2051
typedef void (*__sighandler_t)__sighandler_t85,2291
extern __sighandler_t __sysv_signal 90,2489
#  define signal 111,3185
#   define sigpause(181,5644
# define sigmask(194,6064
# define NSIG	208,6518
typedef __sighandler_t sighandler_t;212,6563
typedef __sighandler_t sig_t;217,6672
extern int sigemptyset 223,6765
struct sigvec315,10187
    __sighandler_t sv_handler;317,10205
    int sv_mask;318,10259
    int sv_flags;320,10316
# define sv_onstack	321,10361
# define SV_ONSTACK	325,10453
# define SV_INTERRUPT	326,10525
# define SV_RESETHAND	327,10591
extern int sigvec 335,11026
# define __need_size_t349,11427

/usr/include/stdio.h,2184
# define _STDIO_H	26,968
# define __need_size_t31,1027
# define __need_NULL32,1050
# define __need_FILE36,1118
# define __need___FILE37,1139
typedef struct _IO_FILE FILE;48,1418
# define __FILE_defined	56,1683
#undef	__need_FILE58,1741
__USING_NAMESPACE_STD(__need_FILE53,1647
typedef struct _IO_FILE __FILE;64,1893
# define ____FILE_defined	66,1926
#undef	__need___FILE68,1988
#define _STDIO_USES_IOSTREAM72,2027
typedef _G_va_list va_list;79,2171
#   define _VA_LIST_DEFINED80,2199
typedef __off_t off_t;90,2357
typedef __off64_t off_t;92,2387
# define __off_t_defined94,2420
typedef __off64_t off64_t;97,2514
# define __off64_t_defined98,2541
typedef __ssize_t ssize_t;102,2604
# define __ssize_t_defined103,2631
typedef _G_fpos_t fpos_t;110,2791
typedef _G_fpos64_t fpos_t;112,2823
typedef _G_fpos64_t fpos64_t;116,2903
#define _IOFBF 120,3003
#define _IOLBF 121,3044
#define _IONBF 122,3084
# define BUFSIZ 127,3168
# define EOF 134,3307
#define SEEK_SET	140,3433
#define SEEK_CUR	141,3488
#define SEEK_END	142,3542
# define SEEK_DATA	144,3608
# define SEEK_HOLE	145,3655
# define P_tmpdir	151,3812
#define stdin 172,4618
#define stdout 173,4638
#define stderr 174,4660
extern int remove 178,4734
#  define tmpfile 200,5425
#  define fopen 291,8417
#  define freopen 292,8441
extern int vsnprintf 390,12070
extern int vasprintf 399,12422
extern int __asprintf 402,12593
extern int asprintf 405,12755
extern int vdprintf 412,12995
extern int dprintf 415,13135
extern int fscanf 425,13419
#  define fscanf 457,14850
#  define scanf 458,14883
#  define sscanf 459,14914
extern int vscanf 479,15493
extern int vsscanf 483,15682
extern int __REDIRECT 494,16164
extern int __REDIRECT 499,16369
extern int __REDIRECT_NTH 502,16533
extern int __isoc99_vfscanf 508,16749
#   define vfscanf 516,17100
#   define vscanf 517,17136
#   define vsscanf 518,17170
#define getc(543,17773
#define putc(585,19099
#   define fseeko 786,26586
#   define ftello 787,26613
#  define fgetpos 811,27321
#  define fsetpos 812,27349
extern int obstack_vprintf 902,30205
extern void flockfile 913,30551
# define __need_getopt927,31137

/usr/include/stdint.h,4545
#define _STDINT_H	23,877
# define __int8_t_defined35,1122
typedef signed char		int8_t;36,1148
typedef short int		int16_t;37,1177
typedef int			int32_t;38,1205
typedef long int		int64_t;40,1250
typedef long long int		int64_t;43,1298
typedef unsigned char		uint8_t;48,1363
typedef unsigned short int	uint16_t;49,1395
typedef unsigned int		uint32_t;51,1459
# define __uint32_t_defined52,1491
typedef unsigned long int	uint64_t;55,1547
typedef unsigned long long int	uint64_t;58,1603
typedef signed char		int_least8_t;65,1689
typedef short int		int_least16_t;66,1724
typedef int			int_least32_t;67,1758
typedef long int		int_least64_t;69,1808
typedef long long int		int_least64_t;72,1861
typedef unsigned char		uint_least8_t;76,1924
typedef unsigned short int	uint_least16_t;77,1962
typedef unsigned int		uint_least32_t;78,2005
typedef unsigned long int	uint_least64_t;80,2064
typedef unsigned long long int	uint_least64_t;83,2126
typedef signed char		int_fast8_t;90,2217
typedef long int		int_fast16_t;92,2272
typedef long int		int_fast32_t;93,2304
typedef long int		int_fast64_t;94,2336
typedef int			int_fast16_t;96,2374
typedef int			int_fast32_t;97,2402
typedef long long int		int_fast64_t;99,2444
typedef unsigned char		uint_fast8_t;103,2506
typedef unsigned long int	uint_fast16_t;105,2564
typedef unsigned long int	uint_fast32_t;106,2605
typedef unsigned long int	uint_fast64_t;107,2646
typedef unsigned int		uint_fast16_t;109,2693
typedef unsigned int		uint_fast32_t;110,2730
typedef unsigned long long int	uint_fast64_t;112,2781
typedef long int		intptr_t;119,2921
#  define __intptr_t_defined120,2949
typedef unsigned long int	uintptr_t;122,2986
typedef int			intptr_t;125,3057
#  define __intptr_t_defined126,3081
typedef unsigned int		uintptr_t;128,3118
typedef long int		intmax_t;134,3212
typedef unsigned long int	uintmax_t;135,3240
typedef long long int		intmax_t;138,3297
typedef unsigned long long int	uintmax_t;140,3344
#  define __INT64_C(149,3604
#  define __UINT64_C(150,3634
#  define __INT64_C(152,3673
#  define __UINT64_C(153,3704
# define INT8_MIN	159,3821
# define INT16_MIN	160,3847
# define INT32_MIN	161,3878
# define INT64_MIN	162,3914
# define INT8_MAX	164,4011
# define INT16_MAX	165,4036
# define INT32_MAX	166,4064
# define INT64_MAX	167,4097
# define UINT8_MAX	170,4194
# define UINT16_MAX	171,4220
# define UINT32_MAX	172,4249
# define UINT64_MAX	173,4284
# define INT_LEAST8_MIN	177,4405
# define INT_LEAST16_MIN	178,4437
# define INT_LEAST32_MIN	179,4473
# define INT_LEAST64_MIN	180,4514
# define INT_LEAST8_MAX	182,4638
# define INT_LEAST16_MAX	183,4669
# define INT_LEAST32_MAX	184,4702
# define INT_LEAST64_MAX	185,4740
# define UINT_LEAST8_MAX	188,4864
# define UINT_LEAST16_MAX	189,4895
# define UINT_LEAST32_MAX	190,4929
# define UINT_LEAST64_MAX	191,4969
# define INT_FAST8_MIN	195,5100
#  define INT_FAST16_MIN	197,5153
#  define INT_FAST32_MIN	198,5204
#  define INT_FAST16_MIN	200,5262
#  define INT_FAST32_MIN	201,5303
# define INT_FAST64_MIN	203,5352
# define INT_FAST8_MAX	205,5481
#  define INT_FAST16_MAX	207,5533
#  define INT_FAST32_MAX	208,5581
#  define INT_FAST16_MAX	210,5636
#  define INT_FAST32_MAX	211,5674
# define INT_FAST64_MAX	213,5720
# define UINT_FAST8_MAX	216,5849
#  define UINT_FAST16_MAX	218,5902
#  define UINT_FAST32_MAX	219,5953
#  define UINT_FAST16_MAX	221,6011
#  define UINT_FAST32_MAX	222,6051
# define UINT_FAST64_MAX	224,6099
#  define INTPTR_MIN	229,6250
#  define INTPTR_MAX	230,6298
#  define UINTPTR_MAX	231,6343
#  define INTPTR_MIN	233,6398
#  define INTPTR_MAX	234,6436
#  define UINTPTR_MAX	235,6471
# define INTMAX_MIN	240,6567
# define INTMAX_MAX	242,6673
# define UINTMAX_MAX	245,6779
#  define PTRDIFF_MIN	252,6934
#  define PTRDIFF_MAX	253,6983
#  define PTRDIFF_MIN	255,7036
#  define PTRDIFF_MAX	256,7075
# define SIG_ATOMIC_MIN	260,7153
# define SIG_ATOMIC_MAX	261,7194
#  define SIZE_MAX	265,7286
#  define SIZE_MAX	267,7338
#  define WCHAR_MIN	273,7487
#  define WCHAR_MAX	274,7520
# define WINT_MIN	278,7589
# define WINT_MAX	279,7613
# define INT8_C(289,7880
# define INT16_C(290,7901
# define INT32_C(291,7923
#  define INT64_C(293,7967
#  define INT64_C(295,8002
# define UINT8_C(299,8057
# define UINT16_C(300,8079
# define UINT32_C(301,8102
#  define UINT64_C(303,8152
#  define UINT64_C(305,8189
#  define INTMAX_C(310,8272
#  define UINTMAX_C(311,8301
#  define INTMAX_C(313,8339
#  define UINTMAX_C(314,8369

/usr/include/stdlib.h,2614
#define		__need_size_t27,964
# define	__need_wchar_t29,1020
# define	__need_NULL30,1044
#define	_STDLIB_H	37,1141
#   define __WAIT_INT(50,1553
#   define __WAIT_INT(54,1691
#   define __WAIT_STATUS	63,2059
#   define __WAIT_STATUS_DEFN	64,2091
    union wait *__uptr;__uptr69,2196
    int *__iptr;__iptr70,2220
  } __WAIT_STATUS 71,2237
#   define __WAIT_STATUS_DEFN	72,2296
#  define __WAIT_INT(77,2372
#  define __WAIT_STATUS	78,2410
#  define __WAIT_STATUS_DEFN	79,2441
# define WEXITSTATUS(84,2568
# define WTERMSIG(85,2633
# define WSTOPSIG(86,2692
# define WIFEXITED(87,2751
# define WIFSIGNALED(88,2812
# define WIFSTOPPED(89,2877
#  define WIFCONTINUED(91,2963
    int quot;99,3167
    int rem;100,3200
  } div_t;101,3233
    long int quot;107,3316
    long int rem;108,3353
  } ldiv_t;109,3390
# define __ldiv_t_defined	110,3402
    long long int quot;119,3596
    long long int rem;120,3638
  } lldiv_t;121,3680
# define __lldiv_t_defined	122,3693
#define	RAND_MAX	128,3813
#define	EXIT_FAILURE	133,3962
#define	EXIT_SUCCESS	134,4013
#define	MB_CUR_MAX	138,4139
extern size_t __ctype_get_mb_cur_max 139,4186
__NTH 283,9227
__NTH 292,9446
extern char *l64a l64a305,9820
struct random_data343,11501
    int32_t *fptr;fptr345,11524
    int32_t *rptr;rptr346,11566
    int32_t *state;state347,11607
    int rand_type;348,11658
    int rand_deg;349,11718
    int rand_sep;350,11779
    int32_t *end_ptr;end_ptr351,11838
extern int random_r 354,11902
struct drand48_data412,14024
    unsigned short int __x[__x414,14048
    unsigned short int __old_x[__old_x415,14101
    unsigned short int __c;416,14154
    unsigned short int __init;417,14230
    unsigned long long int __a;418,14291
extern int drand48_r 422,14448
# define __malloc_and_calloc_defined462,16008
extern void abort 514,17943
extern int atexit 518,18073
extern void quick_exit 548,19251
extern void _Exit 556,19519
extern char *getenv getenv563,19716
#   define mkstemp 625,22150
#   define mkstemps 647,22819
#   define mkostemp 679,23959
#   define mkostemps 701,24657
# define __COMPAR_FN_T740,25838
typedef int (*__compar_fn_t)__compar_fn_t741,25861
typedef __compar_fn_t comparison_fn_t;744,25939
typedef int (*__compar_d_fn_t)__compar_d_fn_t748,26010
extern void *bsearch bsearch754,26249
extern long int labs 771,26888
__extension__ extern long long int llabs 775,27008
extern div_t div 784,27297
extern ldiv_t ldiv 786,27389
__extension__ extern lldiv_t lldiv 792,27556
extern char *ecvt ecvt807,28126
#undef __need_malloc_and_calloc962,33961

/usr/include/string.h,745
#define	_STRING_H	23,868
#define	__need_size_t30,971
#define	__need_NULL31,993
# define __CORRECT_ISO_CPP_STRING_H_PROTO36,1145
extern void *memcpy memcpy42,1254
memchr 85,2832
extern void *memchr memchr92,2949
# define strdupa(186,6736
# define strndupa(196,7111
strchr 225,7995
extern char *strchr strchr232,8095
strrchr 252,8695
extern char *strrchr strrchr259,8797
strpbrk 304,10512
extern char *strpbrk strpbrk311,10632
strstr 331,11334
extern char *strstr strstr338,11466
#   define strerror_r 429,14967
index 478,16594
extern char *index index485,16694
rindex 506,17360
extern char *rindex rindex513,17460
extern int ffsl 524,17886
__extension__ extern int ffsll 526,17972
extern int strcasecmp 532,18125

/usr/include/bsd/string.h,32
#define LIBBSD_STRING_H34,1577

/usr/include/sysexits.h,533
#define	_SYSEXITS_H 33,1658
#define EX_OK	92,4287
#define EX__BASE	94,4334
#define EX_USAGE	96,4391
#define EX_DATAERR	97,4442
#define EX_NOINPUT	98,4488
#define EX_NOUSER	99,4534
#define EX_NOHOST	100,4579
#define EX_UNAVAILABLE	101,4624
#define EX_SOFTWARE	102,4676
#define EX_OSERR	103,4729
#define EX_OSFILE	104,4787
#define EX_CANTCREAT	105,4839
#define EX_IOERR	106,4901
#define EX_TEMPFAIL	107,4946
#define EX_PROTOCOL	108,5014
#define EX_NOPERM	109,5068
#define EX_CONFIG	110,5113
#define EX__MAX	112,5161

/usr/include/sys/stat.h,2425
#define	_SYS_STAT_H	24,907
#  define __need_time_t33,1161
#  define __need_timespec36,1241
typedef __dev_t dev_t;45,1497
#  define __dev_t_defined46,1520
typedef __gid_t gid_t;50,1580
#  define __gid_t_defined51,1603
typedef __ino_t ino_t;56,1693
typedef __ino64_t ino_t;58,1724
#  define __ino_t_defined60,1758
typedef __mode_t mode_t;64,1819
#  define __mode_t_defined65,1844
typedef __nlink_t nlink_t;69,1907
#  define __nlink_t_defined70,1934
typedef __off_t off_t;75,2026
typedef __off64_t off_t;77,2057
#  define __off_t_defined79,2091
typedef __uid_t uid_t;83,2151
#  define __uid_t_defined84,2174
typedef __blkcnt_t blkcnt_t;91,2307
typedef __blkcnt64_t blkcnt_t;93,2344
#  define __blkcnt_t_defined95,2384
typedef __blksize_t blksize_t;99,2451
#  define __blksize_t_defined100,2482
# define S_IFMT	109,2647
# define S_IFDIR	110,2673
# define S_IFCHR	111,2700
# define S_IFBLK	112,2727
# define S_IFREG	113,2754
#  define S_IFIFO	115,2799
#  define S_IFLNK	118,2853
#  define S_IFSOCK	122,2989
#define	__S_ISTYPE(128,3070
#define	S_ISDIR(130,3134
#define	S_ISCHR(131,3187
#define	S_ISBLK(132,3240
#define	S_ISREG(133,3293
# define S_ISFIFO(135,3363
# define S_ISLNK(138,3442
# define S_ISLNK(142,3548
# define S_ISSOCK(147,3683
# define S_ISSOCK(149,3766
# define S_TYPEISMQ(157,4086
# define S_TYPEISSEM(158,4129
# define S_TYPEISSHM(159,4174
#define	S_ISUID 165,4253
#define	S_ISGID	166,4312
# define S_ISVTX	170,4520
#define	S_IRUSR	173,4555
#define	S_IWUSR	174,4603
#define	S_IXUSR	175,4653
#define	S_IRWXU	177,4746
# define S_IREAD	180,4840
# define S_IWRITE	181,4865
# define S_IEXEC	182,4891
#define	S_IRGRP	185,4924
#define	S_IWGRP	186,4977
#define	S_IXGRP	187,5031
#define	S_IRWXG	189,5129
#define	S_IROTH	191,5161
#define	S_IWOTH	192,5215
#define	S_IXOTH	193,5270
#define	S_IRWXO	195,5370
# define ACCESSPERMS 200,5461
# define ALLPERMS 201,5519
# define DEFFILEMODE 202,5598
# define S_BLKSIZE	204,5679
extern int stat 210,5831
#  define stat 224,6408
#  define fstat 225,6430
#   define fstatat 249,7256
#   define lstat 273,8006
# define _STAT_VER	392,12378
# define _MKNOD_VER	395,12425
#  define __fxstat 426,13650
#  define __xstat 427,13680
#  define __lxstat 428,13708
__NTH 461,14884
__NTH 468,15026
__NTH 475,15169
__NTH 484,15406
__NTH 492,15583
__NTH 503,15891
__NTH 510,16085
__NTH 517,16234
__NTH 524,16384

/usr/include/time.h,1529
# define _TIME_H	26,956
# define __need_size_t35,1081
# define __need_NULL36,1104
#   define CLK_TCK	46,1411
# define __clock_t_defined	53,1575
typedef __clock_t clock_t;59,1681
#undef	__need_clock_t66,1900
# define __time_t_defined	69,1999
__USING_NAMESPACE_STD(__time_t_defined62,1797
typedef __time_t time_t;75,2103
#undef	__need_time_t82,2316
# define __clockid_t_defined	86,2456
__USING_NAMESPACE_STD(__clockid_t_defined78,2216
typedef __clockid_t clockid_t;91,2565
#undef	__clockid_time_t94,2665
# define __timer_t_defined	98,2805
typedef __timer_t timer_t;103,2905
#undef	__need_timer_t106,2997
# define __timespec_defined	114,3221
struct timespec120,3440
    __time_t tv_sec;122,3460
    __syscall_slong_t tv_nsec;123,3498
#undef	__need_timespec127,3621
struct tm133,3720
  int tm_sec;135,3732
  int tm_min;136,3786
  int tm_hour;137,3824
  int tm_mday;138,3861
  int tm_mon;139,3897
  int tm_year;140,3933
  int tm_wday;141,3970
  int tm_yday;142,4012
  int tm_isdst;143,4056
  long int tm_gmtoff;146,4113
  const char *tm_zone;tm_zone147,4164
  long int __tm_gmtoff;149,4225
  const char *__tm_zone;__tm_zone150,4278
__USING_NAMESPACE_STD(155,4433
struct itimerspec161,4558
    struct timespec it_interval;163,4580
    struct timespec it_value;164,4613
typedef __pid_t pid_t;174,4787
#   define __pid_t_defined175,4810
# define TIME_UTC 182,4919
extern clock_t clock 189,5099
extern time_t mktime 199,5477
# define __isleap(310,9185
extern int clock_getres 339,10078

/usr/include/unistd.h,2591
#define	_UNISTD_H	23,888
# define _POSIX_VERSION	34,1184
# define _POSIX_VERSION	37,1314
# define _POSIX_VERSION	40,1444
# define _POSIX_VERSION	43,1579
# define _POSIX_VERSION	46,1688
# define __POSIX2_THIS_VERSION	53,1862
# define __POSIX2_THIS_VERSION	57,2067
# define __POSIX2_THIS_VERSION	60,2207
# define __POSIX2_THIS_VERSION	63,2321
#define _POSIX2_VERSION	67,2437
#define	_POSIX2_C_BIND	71,2566
#define	_POSIX2_C_DEV	75,2707
#define	_POSIX2_SW_DEV	79,2845
#define _POSIX2_LOCALEDEF 83,2993
# define _XOPEN_VERSION	87,3149
# define _XOPEN_VERSION	89,3205
# define _XOPEN_VERSION	91,3260
# define _XOPEN_VERSION	93,3294
#define _XOPEN_XCU_VERSION	97,3383
#define _XOPEN_XPG2	100,3480
#define _XOPEN_XPG3	101,3502
#define _XOPEN_XPG4	102,3524
#define _XOPEN_UNIX	105,3596
#define	_XOPEN_CRYPT	108,3649
#define	_XOPEN_ENH_I18N	112,3763
#define _XOPEN_LEGACY	115,3839
#define	STDIN_FILENO	210,8578
#define	STDOUT_FILENO	211,8624
#define	STDERR_FILENO	212,8672
typedef __ssize_t ssize_t;220,8838
# define __ssize_t_defined221,8865
#define	__need_size_t224,8900
#define __need_NULL225,8922
typedef __gid_t gid_t;232,9123
#  define __gid_t_defined233,9146
typedef __uid_t uid_t;237,9206
#  define __uid_t_defined238,9229
typedef __off_t off_t;243,9319
typedef __off64_t off_t;245,9350
#  define __off_t_defined247,9384
typedef __off64_t off64_t;250,9479
#  define __off64_t_defined251,9506
typedef __useconds_t useconds_t;255,9573
#  define __useconds_t_defined256,9606
typedef __pid_t pid_t;260,9671
#  define __pid_t_defined261,9694
typedef __intptr_t intptr_t;267,9857
#  define __intptr_t_defined268,9886
typedef __socklen_t socklen_t;274,10005
#  define __socklen_t_defined275,10036
#define	R_OK	281,10162
#define	W_OK	282,10211
#define	X_OK	283,10261
#define	F_OK	284,10313
extern int access 287,10421
# define SEEK_SET	311,11303
# define SEEK_CUR	312,11359
# define SEEK_END	313,11414
#  define SEEK_DATA	315,11482
#  define SEEK_HOLE	316,11530
# define L_SET	322,11703
# define L_INCR	323,11728
# define L_XTND	324,11754
#  define lseek 341,12271
#   define pread 395,14080
#   define pwrite 396,14105
extern long int pathconf 612,22647
#  define getpgrp 641,23565
#   define setpgrp 680,24938
# define __need_getopt892,32864
extern int getdtablesize 1005,37197
#   define truncate 1023,37695
#   define ftruncate 1044,38330
# define F_ULOCK 1097,40272
# define F_LOCK 1098,40333
# define F_TLOCK 1099,40392
# define F_TEST 1100,40460
#   define lockf 1109,40748
# define TEMP_FAILURE_RETRY(1123,41059

inc/rmfs.h,419
#define RMFS_H_4,18
typedef enum ingest_cycles 48,1008
  INGEST_PREVSTATE 49,1037
  INGEST_COLDSTART 50,1062
  INGEST_1 51,1086
  INGEST_1         = INGEST_COLDSTART 51,1086
  INGEST_2 52,1129
  INGEST_2         = INGEST_1 52,1129
  INGEST_3 53,1164
  INGEST_3         = INGEST_1 53,1164
  INGEST_MAX 54,1199
  INGEST_MAX       = INGEST_3,54,1199
} ingest_cycle_t;55,1230
#define NXT_ingest_cycle(57,1249

inc/rmfs/backingstore.h,1423
#define RMFS_backingstore_H3,29
#define BS_MIN_INF_EXP_SPACE 42,1204
#define BS_FORMAT_VERSION 43,1237
typedef struct backingstore_header_type 45,1271
  unsigned int  header 46,1313
  unsigned int  node_delta 47,1353
  unsigned int  infinite_expiration 48,1393
  unsigned int  barrier 49,1433
  unsigned int  trailer 51,1567
} bs_hdrtyp_t;52,1607
typedef struct backingstore_header 54,1623
  bs_hdrtyp_t   htyp;55,1660
  int           format_version;56,1682
  time_t        time_stamp;57,1714
  pid_t         owner;58,1742
  int           size;59,1765
  int           n_infinite_expiration;60,1787
  int           last_written;61,1826
  char          host[host62,1856
  unsigned long marker;63,1893
} bs_hdr_t;64,1917
typedef struct aligned_backingstore_record 66,1930
    struct backingstore_record 68,1985
      bs_hdrtyp_t htyp;69,2018
      time_t      tm_exp;70,2042
      uint32_t    job_id;71,2068
      int         rn_sig;72,2094
      struct xattr 73,2120
	char      nm[nm74,2141
	char      ctx[ctx75,2173
      } xattr;76,2207
    } _r;77,2222
    bs_hdr_t      align;78,2232
  } _u;79,2257
} bs_record_t;80,2265
typedef enum claim_action 82,2281
  CL_TEST 83,2309
  CL_CLAIM 84,2324
} claim_t;85,2339
typedef enum merge_bs_source 87,2351
  MS_PREDECESSOR 88,2382
  MS_UNDEFINED 89,2406
  MS_BACKINGSTORE 90,2429
  MS_CONTROLLER 91,2452
} merge_bs_source_t;92,2474

inc/rmfs/conf.h,3001
#define RMFS_CONF_H_40,1349
#define CP_UNK_SIZE 45,1417
struct rmfs_param 50,1536
  union ue 51,1556
    void     *ptr;ptr53,1649
    void     *base_addr;base_addr54,1668
    char     *str;str57,1712
    char     *pathnm;pathnm58,1731
    char     *hostname;hostname59,1753
    char    **array_str;array_str60,1777
    unsigned long ul;63,1819
    unsigned int  ui;64,1841
    uint16_t      ui_16;65,1863
    uint32_t      ui_32;66,1888
    long          l;67,1913
    int           i;68,1934
    uid_t         uid;69,1955
    gid_t         gid;70,1978
    pid_t         pid;71,2001
    time_t        time;72,2024
    tri_t         truth;73,2048
    bool_t        btruth;74,2073
    struct aligned_backingstore_record *bs;bs77,2121
  } ue;78,2191
  size_t size;79,2199
  struct path_descriptor 81,2266
    char        *fullpath;fullpath82,2293
    pid_t        owner;83,2320
    int          fd;84,2344
    FILE        *fstr;fstr85,2365
    int          is_mmapped:is_mmapped86,2388
    int          is_filestr:is_filestr87,2419
    int          ours:ours88,2450
  } pd;89,2475
typedef struct rmfs_param rmfs_param_t;91,2486
struct config_param 94,2597
  rmfs_param_t     val;95,2619
  rmfs_param_t     default_val;96,2703
  ptyp_t           typ;97,2735
  struct src 99,2760
    param_source_t   allowed;100,2775
    param_source_t   actual;101,2805
    param_source_t   debug;102,2834
  } src;103,2862
  char            *nm;nm104,2871
  int              h;105,2894
  param_source_t (*collector)collector106,2916
  struct depends_on 107,2970
    char                *nm;nm108,2992
    struct config_param *p_cp;p_cp109,3021
  } depends_on;110,3052
  struct slurm_fuse_opt_desc *p_fopd;p_fopd113,3090
  struct fuse_opt            *p_fo;p_fo114,3182
  struct src_specific 117,3268
    struct slurm_info 118,3292
      ptyp_t                        parent_type;119,3337
      void                         *base_addr;base_addr120,3386
      off_t                         off;121,3433
      partition_info_msg_t         *pim;pim122,3474
      node_info_msg_t              *nim;nim123,3515
      job_info_msg_t               *jim;jim124,3556
      job_step_info_response_msg_t *stim;stim125,3597
      int                           dynamic:dynamic126,3639
      int 127,3686
    } slurm;128,3726
    struct rmfs_info 129,3739
      ptyp_t                        parent_type;130,3762
      int                           local:local131,3811
      int                           fs:fs132,3856
      int                           backingstore:backingstore133,3898
      int 134,3950
    } rmfs;135,3990
  } per_src;136,4002
  struct rnode        *p_rnode;p_rnode139,4037
  struct config_param *p_nxt;p_nxt140,4069
typedef struct config_param config_param_t;142,4162
#define CONFPARAM_REQUIRED 144,4207
#define CONFPARAM_MISSINGOK 145,4258
#define IS_VALID_HASH(147,4311
#define IS_INVALID_HASH(148,4369

inc/rmfs/param.h,1071
#define RMFS_PARAM_H_5,47
#define DEFMODE_FILE 35,1265
#define DEFMODE_DIR 36,1291
#define N_DEFAULT_MODES 37,1317
#define RM_UID_CTL 39,1344
#define RM_UID_DISPATCH 40,1390
#define RM_UIDS 41,1449
#define RNODEPOOL_DEFAULT_MINSIZE 48,1604
struct rnode_params 60,2076
  unsigned long  rn_minpoolsize;61,2098
  unsigned long *rn_allocmap;rn_allocmap63,2132
  rnode_t       *rn_pool;rn_pool64,2162
  unsigned long  rn_maxalloc;66,2191
  unsigned long  rn_basealloc;67,2221
  unsigned long  rn_curalloc;68,2252
  rnode_t       *p_nxt_avail_rn;p_nxt_avail_rn70,2283
  unsigned long  nxt_avail;71,2316
  uid_t               rm_uid[rm_uid73,2345
  mode_t              def_mode[def_mode74,2410
  security_context_t *scon;scon75,2459
  rnode_t       *p_fsroot;p_fsroot78,2506
  rnode_t       *p_cname;p_cname79,2533
  rnode_t       *p_jobd;p_jobd80,2559
  rnode_t       *p_dirty;p_dirty82,2587
  time_t         last_update;83,2630
  unsigned long  fsid;85,2661
  unsigned long  version;86,2684
typedef struct rnode_params rn_param_t;89,2714

inc/rmfs/types.h,8818
#define RMFS_TYPE_H_9,160
enum boolean 17,261
  BFALSE 18,276
  BTRUE 19,290
typedef enum boolean bool_t;21,306
typedef _Bool bool_t;24,342
enum trilene 28,373
  UNSET 29,388
  UNSET = (~0)29,388
  FALSE 30,404
  FALSE = false,30,404
  TRUE 31,421
  TRUE  = true31,421
typedef enum trilene tri_t;33,439
enum opt_flag 40,565
  OPT_INVAL 41,581
  OPT_INVAL          = ~0,41,581
  OPT_NONE 42,608
  OPT_VALID_IF_DEBUG 43,634
  OPT_DEBUG 44,660
  OPT_DEBUG          = OPT_VALID_IF_DEBUG,44,660
  OPT_MANDATORY 45,703
  OPT_MAND 46,729
  OPT_MAND           = OPT_MANDATORY,46,729
  OPT_EXCLUSIVE_ALL 47,767
  OPT_EXCL_ALL 48,793
  OPT_EXCL_ALL       = OPT_EXCLUSIVE_ALL,48,793
  OPT_EXCLUSIVE 49,835
  OPT_EXCLUSIVE      = OPT_EXCLUSIVE_ALL,49,835
  OPT_SELECT_ONE 50,877
  OPT_ONE 51,903
  OPT_ONE            = OPT_SELECT_ONE,51,903
  OPT_NONOPT 52,942
typedef enum opt_flag opt_flg_t;54,1034
enum param_source 69,1452
  PSRC_NONE 70,1472
  PSRC_NOBITS 71,1498
  PSRC_NOBITS        = PSRC_NONE,71,1498
  PSRC_MAC_CONF 73,1535
  PSRC_MAC 74,1561
  PSRC_MAC           = PSRC_MAC_CONF,74,1561
  PSRC_SLURM 76,1600
  PSRC_ENVAR 78,1629
  PSRC_ENV 79,1655
  PSRC_ENV           = PSRC_ENVAR,79,1655
  PSRC_MNT_OPT 81,1691
  PSRC_MNT 82,1717
  PSRC_MNT           = PSRC_MNT_OPT,82,1717
  PSRC_MNT_NONOPT 83,1754
  PSRC_FUSE 84,1819
  PSRC_USERINPUT 86,1848
  PSRC_DEFAULT 88,1888
  PSRC_DERIVED 89,1914
  PSRC_MAX 91,2005
  PSRC_MAX           = PSRC_DERIVED,91,2005
  PSRC_N 92,2042
  PSRC_N             = PSRC_MAX+PSRC_MAX92,2042
  PSRC_LAST 93,2092
  PSRC_LAST          = PSRC_MAX,93,2092
  PSRC_LOPRI 94,2125
  PSRC_LOPRI         = PSRC_LAST,94,2125
  PSRC_LEAST_TRUSTED 95,2159
  PSRC_LEAST_TRUSTED = PSRC_LOPRI,95,2159
  PSRC_FIRST 96,2194
  PSRC_FIRST         = PSRC_NONE+PSRC_NONE96,2194
  PSRC_HIPRI 97,2245
  PSRC_HIPRI         = PSRC_FIRST,97,2245
  PSRC_MOST_TRUSTED 98,2280
  PSRC_MOST_TRUSTED  = PSRC_HIPRI98,2280
typedef enum param_source param_source_t;100,2317
#define PSRCNAME(103,2402
#define BIT(105,2444
#define PSRC_ALLBITS 107,2475
#define ISSET(116,2762
#define ANY(118,2801
#define NOBITS(119,2853
#define PSRC_LSB(121,2896
#define PSRC_MSB(124,2986
#define PSRC_NXT(126,3028
#define PSRC_TEST(127,3062
enum param_type 137,3340
  PTYP_NONE 138,3358
  PTYP_OPAQUE 140,3386
  PTYP_OPAQUE       = PTYP_NONE+PTYP_NONE140,3386
  PTYP_FIRST 141,3421
  PTYP_FIRST        = PTYP_OPAQUE,141,3421
  PTYP_ALPHANUM 143,3457
  PTYP_ALPHANUM     = PTYP_OPAQUE 143,3457
  PTYP_ALPHA_FIRST 144,3496
  PTYP_ALPHA_FIRST  = PTYP_ALPHANUM,144,3496
  PTYP_ALPHA 145,3533
  PTYP_ALPHA        = PTYP_ALPHA_FIRST 145,3533
  PTYP_NUMERICHAR 146,3577
  PTYP_NUMERICHAR   = PTYP_ALPHA_FIRST 146,3577
  PTYP_ALPHA_P2P 147,3675
  PTYP_ALPHA_P2P    = PTYP_ALPHA_FIRST 147,3675
  PTYP_XATTR 148,3746
  PTYP_XATTR        = PTYP_ALPHA_FIRST 148,3746
  PTYP_PATH 149,3844
  PTYP_PATH         = PTYP_ALPHA_FIRST 149,3844
  PTYP_FSVIS_FIRST 150,3942
  PTYP_FSVIS_FIRST  = PTYP_PATH,150,3942
  PTYP_FILE 152,4019
  PTYP_FILE         = PTYP_ALPHA_FIRST 152,4019
  PTYP_FILEXIST 153,4117
  PTYP_FILEXIST     = PTYP_ALPHA_FIRST 153,4117
  PTYP_SYM 154,4215
  PTYP_SYM          = PTYP_ALPHA_FIRST 154,4215
  PTYP_DIREXIST 155,4315
  PTYP_DIREXIST     = PTYP_ALPHA_FIRST 155,4315
  PTYP_DIR 156,4413
  PTYP_DIR          = PTYP_ALPHA_FIRST 156,4413
  PTYP_FSVIS_LAST 157,4512
  PTYP_FSVIS_LAST   = PTYP_DIR,157,4512
  PTYP_HOST 158,4544
  PTYP_HOST         = PTYP_ALPHA_FIRST 158,4544
  PTYP_HOST_FIRST 159,4641
  PTYP_HOST_FIRST   = PTYP_HOST,159,4641
  PTYP_HOSTNAME 160,4674
  PTYP_HOSTNAME     = PTYP_HOST,160,4674
  PTYP_HOST_LAST 161,4707
  PTYP_HOST_LAST    = PTYP_HOST,161,4707
  PTYP_ALPHA_LAST 162,4740
  PTYP_ALPHA_LAST   = PTYP_HOST,162,4740
  PTYP_NUMERIC 164,4774
  PTYP_NUMERIC        = PTYP_ALPHA_LAST 164,4774
  PTYP_INT_FIRST 165,4822
  PTYP_INT_FIRST      = PTYP_NUMERIC,165,4822
  PTYP_NUMERICTIME 166,4895
  PTYP_NUMERICTIME    = PTYP_INT_FIRST 166,4895
  PTYP_NUMTIME 167,4973
  PTYP_NUMTIME        = PTYP_NUMERICTIME,167,4973
  PTYP_NUMTIM_SECS 168,5015
  PTYP_NUMTIM_SECS    = PTYP_INT_FIRST 168,5015
  PTYP_NUMTIME_SECS 169,5097
  PTYP_NUMTIME_SECS   = PTYP_NUMTIM_SECS,169,5097
  PTYP_NUMSIGNED 170,5139
  PTYP_NUMSIGNED      = PTYP_INT_FIRST 170,5139
  PTYP_UNSIGNED_INT 171,5210
  PTYP_UNSIGNED_INT   = PTYP_INT_FIRST 171,5210
  PTYP_UNSIGNED_INT16 172,5254
  PTYP_UNSIGNED_INT16 = PTYP_INT_FIRST 172,5254
  PTYP_UNSIGNED_INT32 173,5298
  PTYP_UNSIGNED_INT32 = PTYP_INT_FIRST 173,5298
  PTYP_UID 174,5342
  PTYP_UID            = PTYP_INT_FIRST 174,5342
  PTYP_PID 175,5386
  PTYP_PID            = PTYP_INT_FIRST 175,5386
  PTYP_TRILENE 176,5430
  PTYP_TRILENE        = PTYP_INT_FIRST 176,5430
  PTYP_BOOLEAN 177,5510
  PTYP_BOOLEAN        = PTYP_INT_FIRST 177,5510
  PTYP_SIGNATURE 178,5591
  PTYP_SIGNATURE      = PTYP_INT_FIRST 178,5591
  PTYP_INT_LAST 179,5636
  PTYP_INT_LAST       = PTYP_SIGNATURE,179,5636
  PTYP_CONTEXT 181,5679
  PTYP_CONTEXT      = PTYP_INT_LAST 181,5679
  PTYP_CNTXT_FIRST 182,5738
  PTYP_CNTXT_FIRST  = PTYP_CONTEXT,182,5738
  PTYP_CNTXT 183,5774
  PTYP_CNTXT        = PTYP_CONTEXT,183,5774
  PTYP_CNTXT_LAST 184,5810
  PTYP_CNTXT_LAST   = PTYP_CONTEXT,184,5810
  PTYP_CLUSTER 187,5866
  PTYP_CLUSTER      = PTYP_CNTXT_LAST 187,5866
  PTYP_SLURM_FIRST 188,5909
  PTYP_SLURM_FIRST  = PTYP_CLUSTER,188,5909
  PTYP_CNTRLMACH 189,5945
  PTYP_CNTRLMACH    = PTYP_SLURM_FIRST 189,5945
  PTYP_PARTITION 190,6003
  PTYP_PARTITION    = PTYP_SLURM_FIRST 190,6003
  PTYP_NODE 191,6065
  PTYP_NODE         = PTYP_SLURM_FIRST 191,6065
  PTYP_JOB 192,6127
  PTYP_JOB          = PTYP_SLURM_FIRST 192,6127
  PTYP_STEP 193,6189
  PTYP_STEP         = PTYP_SLURM_FIRST 193,6189
  PTYP_ALLOCJOB 194,6251
  PTYP_ALLOCJOB     = PTYP_SLURM_FIRST 194,6251
  PTYP_NODESTATE 195,6331
  PTYP_NODESTATE    = PTYP_SLURM_FIRST 195,6331
  PTYP_SLURMVERSION 196,6401
  PTYP_SLURMVERSION = PTYP_SLURM_FIRST 196,6401
  PTYP_SLURMUID 197,6445
  PTYP_SLURMUID     = PTYP_SLURM_FIRST 197,6445
  PTYP_SLURMTMOUT 198,6489
  PTYP_SLURMTMOUT   = PTYP_SLURM_FIRST 198,6489
  PTYP_SPANKENV 199,6534
  PTYP_SPANKENV     = PTYP_SLURM_FIRST 199,6534
  PTYP_SPANKENVSIZE 200,6579
  PTYP_SPANKENVSIZE = PTYP_SLURM_FIRST 200,6579
  PTYP_JSUB_PLUGIN 201,6624
  PTYP_JSUB_PLUGIN  = PTYP_SLURM_FIRST 201,6624
  PTYP_GRES_PLUGIN 202,6669
  PTYP_GRES_PLUGIN  = PTYP_SLURM_FIRST 202,6669
  PTYP_SLURMUNAME 203,6714
  PTYP_SLURMUNAME   = PTYP_SLURM_FIRST 203,6714
  PTYP_SLURMDUNAME 204,6759
  PTYP_SLURMDUNAME  = PTYP_SLURM_FIRST 204,6759
  PTYP_SLURM_LAST 205,6804
  PTYP_SLURM_LAST   = PTYP_SLURM_FIRST 205,6804
  PTYP_LAST 207,6850
  PTYP_LAST         = PTYP_SLURM_LAST,207,6850
  PTYP_GUARD 208,6889
  PTYP_GUARD        = PTYP_LAST 208,6889
  PTYP_LEN 209,6926
  PTYP_LEN          = PTYP_GUARD 209,6926
typedef enum param_type ptyp_t;211,7012
#define IS_SLURM_TYPE(213,7045
#define IS_NUMERIC_TYPE(214,7137
#define IS_NUMSIGNED_TYPE(215,7225
#define IS_SIGNATURE_TYPE(216,7284
#define IS_ALPHA_TYPE(217,7343
#define IS_CONTEXT_TYPE(218,7435
#define IS_XATTR_TYPE(219,7527
#define IS_OPAQUE_TYPE(220,7607
#define IS_VALID_TYPE(221,7663
#define IS_BOOLEAN_TYPE(222,7741
#define IS_TRILENE_TYPE(223,7798
#define IS_TRUTH_TYPE(224,7855
#define IS_LOGICAL_TYPE(225,7936
#define IS_FSVIS_TYPE(226,7990
#define IS_HOST_TYPE(227,8080
#define OPAQUE_EMIT 233,8313
enum slurmfs_exitcode 238,8369
  ExitOK 239,8393
  ExitOK             = EX_OK,239,8393
  Exit_OK 240,8423
  Exit_OK            = EX_OK,240,8423
  ErrExit_ENOMEM 241,8453
  ErrExit_ENOMEM     = EX__BASE-EX__BASE241,8453
  ErrExit_ARGPARSE 242,8533
  ErrExit_ARGPARSE   = EX_USAGE,242,8533
  ErrExit_INCOMPLETE 243,8566
  ErrExit_INCOMPLETE = EX_DATAERR,243,8566
  ErrExit_CONFIG 244,8601
  ErrExit_CONFIG     = EX_CONFIG,244,8601
  ErrExit_UNAVAIL 245,8635
  ErrExit_UNAVAIL    = EX_UNAVAILABLE,245,8635
  ErrExit_NOPERM 246,8674
  ErrExit_NOPERM     = EX_NOPERM,246,8674
  ErrExit_OSERR 247,8708
  ErrExit_OSERR      = EX_OSERR,247,8708
  ErrExit_TEMPFAIL 248,8741
  ErrExit_TEMPFAIL   = EX_TEMPFAIL,248,8741
  ErrExit_INTERNAL 249,8777
  ErrExit_INTERNAL   = EX_SOFTWARE,249,8777
  ErrExit_STUCK 251,8816
  ErrExit_STUCK      = EX_OK+EX_OK251,8816
  ErrExit_SLURM 252,8886
  ErrExit_SLURM      = EX_OK+EX_OK252,8886
  ErrExit_ASSERT 253,8941
  ErrExit_ASSERT     = EX_OK+EX_OK253,8941
  ErrExit_NOMEM 254,9019
  ErrExit_NOMEM      = EX_OK+EX_OK254,9019
  ErrExit_WARN 255,9071
  ErrExit_WARN       = EX_OK+EX_OK255,9071
typedef enum slurmfs_exitcode rmfs_exitcode_t;257,9132
#define max(272,9500
#define min(279,9633

inc/rmfs/rnode.h,4920
#define RNODE_H_55,2628
enum rnode_type 77,3035
  RN_NONE 78,3053
  RN_FIRST 79,3076
  RN_FIRST        = RN_NONE,79,3076
  RN_PROVISION 80,3105
  RN_PROVISION    = RN_FIRST,80,3105
  RN_GUARD 81,3135
  RN_GUARD        = RN_FIRST 81,3135
  RND_ROOT 83,3187
  RND_ROOT        = RN_FIRST 83,3187
  RND_CLUSTER 84,3236
  RND_CLUSTER     = RN_FIRST 84,3236
  RND_PARTS 86,3286
  RND_PARTS       = RN_FIRST 86,3286
  RND_PARTITIONS 87,3335
  RND_PARTITIONS  = RND_PARTS,87,3335
  RND_PARTNAME 88,3366
  RND_PARTNAME    = RN_FIRST 88,3366
  RND_NODES 90,3416
  RND_NODES       = RN_FIRST 90,3416
  RND_NODENAME 91,3465
  RND_NODENAME    = RN_FIRST 91,3465
  RND_JOBS 93,3515
  RND_JOBS        = RN_FIRST 93,3515
  RND_JOBID 94,3564
  RND_JOBID       = RN_FIRST 94,3564
  RND_JOBNAME 95,3613
  RND_JOBNAME     = RND_JOBID,95,3613
  RND_JOBSTEPS 97,3645
  RND_JOBSTEPS    = RN_FIRST 97,3645
  RND_JOBSTEPID 98,3695
  RND_JOBSTEPID   = RN_FIRST 98,3695
  RND_JOBSTEP 99,3745
  RND_JOBSTEP     = RND_JOBSTEPID,99,3745
  RND_JOBSTEPNAME 100,3780
  RND_JOBSTEPNAME = RND_JOBSTEPID,100,3780
  RND_JOBSTEP_CTX,103,3834
  RND_JOBSTEP_LAUNCH,104,3853
  RND_RESV,105,3875
  RND_RESERVATION,106,3887
  RNF_ALLOCJOB 109,3914
  RNF_ALLOCJOB    = RN_FIRST 109,3914
  RND_NODESTATE 110,3964
  RND_NODESTATE   = RN_FIRST 110,3964
  RND_ATTRIBUTES 112,4015
  RND_ATTRIBUTES  = RN_FIRST 112,4015
  RNF_ATTRIBUTE 113,4065
  RNF_ATTRIBUTE   = RN_FIRST 113,4065
  RNF_ATTR 114,4115
  RNF_ATTR        = RNF_ATTRIBUTE,114,4115
  RND_CONTROL 116,4151
  RND_CONTROL     = RN_FIRST 116,4151
  RND_CTRL 117,4201
  RND_CTRL        = RND_CONTROL,117,4201
  RNF_CONTEXT 119,4235
  RNF_CONTEXT     = RN_FIRST 119,4235
  RNF_CNTXT 120,4285
  RNF_CNTXT       = RNF_CONTEXT,120,4285
  RNF_CNTX 121,4318
  RNF_CNTX        = RNF_CONTEXT,121,4318
  RNF_KNOB 123,4354
  RNF_KNOB        = RN_FIRST 123,4354
  RNF_EXEC 124,4404
  RNF_EXEC        = RNF_KNOB,124,4404
  RNF_SIGNATURE 126,4437
  RNF_SIGNATURE   = RN_FIRST 126,4437
  RNF_SIG 127,4487
  RNF_SIG         = RNF_SIGNATURE,127,4487
  RND_RNPARAMS 129,4525
  RND_RNPARAMS    = RN_FIRST 129,4525
  RND_PARAMS 130,4575
  RND_PARAMS      = RND_RNPARAMS,130,4575
  RN_RAZE 132,4610
  RN_RAZE         = RN_FIRST 132,4610
  RN_LAST 133,4660
  RN_LAST         = RN_RAZE,133,4660
  RN_LEN 135,4692
  RN_LEN          = RN_LAST 135,4692
  RN_BASEALLOC 137,4743
  RN_BASEALLOC    = RND_ROOT,137,4743
  RN_INVALID 138,4773
  RN_INVALID      = (~0)138,4773
typedef enum rnode_type rn_type_t;141,4826
#define IS_RTYPE_BUILDABLE(143,4862
#define IS_RTYPE_VALID(148,5039
#define IS_RTYPE_ATTR_SUBTYPE(150,5101
#define IS_RTYPE_ATTRIBUTE(153,5258
#define IS_RTYPE_CONTROL(154,5348
#define IS_RTYPE_CTL(159,5533
#define IS_RTYPE_XATTRIBUTE(161,5593
#define IS_RTYPE_XATTR(162,5651
#define MAX_RN_CMDS 174,5923
struct rnode 175,5947
  rn_type_t            rtype;176,5962
  unsigned long        rino;177,5992
  char                *nm;nm178,6079
  struct rnode      *(*buildfn)buildfn181,6174
  struct config_param *p_cp;p_cp183,6242
  int                  gen;184,6271
  time_t               ctime;185,6299
  uid_t                uid;186,6329
  gid_t                gid;187,6357
  void                *p_dyntyp;p_dyntyp188,6385
  int                  h;189,6418
  struct rnode        *nxt_dirty;nxt_dirty192,6485
  struct rnode        *signature;signature193,6582
  struct rnode        *prev_version;prev_version194,6679
  struct attr_desc 203,7056
    struct config_param *table;table204,7077
    tri_t              (*is_mine)is_mine205,7109
  } attr_desc;206,7167
  struct is 209,7255
    unsigned int   dir:dir210,7269
    unsigned int   file:file211,7295
    unsigned int   link:link212,7322
  } is;213,7349
  struct may_be 216,7427
    unsigned int 217,7445
    unsigned int      controllable:controllable218,7498
    unsigned int      dirty:dirty219,7536
    unsigned int      readable:readable220,7567
    unsigned int      writable:writable221,7601
    unsigned int      execable:execable222,7635
    unsigned int 223,7669
    struct rnode     *notify;notify225,7700
  } maybe;226,7730
  struct rn_ctl 229,7811
    enum rnode_type  rtype;230,7829
    char            *nm;nm231,7909
    tri_t          (*fn)fn232,7934
  } ctl[ctl233,7999
  int                  n_children;236,8100
  struct rnode        *children;children237,8136
  struct rnode        *parent;parent238,8224
  struct rnode        *attr;attr239,8313
  struct rnode        *subdir;subdir240,8401
  int                  n_xattr;242,8492
  struct config_param *xattr;xattr243,8580
typedef struct rnode  rnode_t;246,8672
typedef struct rn_ctl rn_ctl_t;247,8703
struct convtyp 250,8777
  enum param_type ptyp;251,8794
  rn_type_t       rtyp;252,8818
typedef struct convtyp pt2rn_t;254,8845

inc/rmfs/misc.h,30
#define RMFS_MISCSUBR_H_3,26

inc/linkage/fuse.h,502
#define RMFS_FUSE_LINKAGE_H_10,118
#define FUSE_USE_VERSION 13,173
struct slurm_fuse_opt_desc 26,439
  char                *_s;_s27,468
  char                *_long;_long28,495
  char                *nm;nm30,568
  struct config_param *p_cp;p_cp31,639
  char                *help;help33,708
  opt_flg_t            oflg;34,779
typedef struct slurm_fuse_opt_desc slurm_fuse_opt_desc_t;36,849
#define N_SLURM_FOPTS 44,1173
#define N_SLURMFS_CONFIG 45,1252
struct fuse_args f_args;52,1442

inc/linkage/selinux.h,455
#define SELINUX_LINKAGE_H_6,59
#define XATTR_NM_MAXLEN 15,214
#define XATTR_CTX_MAXLEN 16,246
#define CTX_XATTR_NM 20,349
#define ctx_DEFAULT 21,394
#define CTX_DEFAULT_S0 22,449
#define CTX_JOBID 23,507
#define CTX_JOBID_S0 24,565
#define CTX_JOBID_EXEC 25,626
#define CTX_JOBID_EXEC_S0 26,689
#define CTX_JOBID_DEFAULT 28,756
#define CTX_DEFAULT 29,858
#define XATTR_SIG 31,965
#define XATTR_SIGTYP 32,1012
#define SIGTYP_DJBHASH 33,1057

lib/rnode/rn_public.c,55
(*get_rn_buildfn(get_rn_buildfn20,430
mk_fs(46,1103

lib/rnode/rn_alloc.c,122
bsalloc(10,159
bsalloc_init(21,331
backingstore_valid(27,453
rn_poolinit(60,1639
rn_alloc(145,4588
rn_raze(213,6384

lib/rnode/rn_provision.c,21
rn_provision(13,301

lib/rnode/rn_cast.c,46
rn_cast(9,128
rn_cast_attr_typconv(179,4796

lib/rnode/rn_subr.c,42
attr_cnt_cp(9,100
link_xattr2rn 49,1005

lib/rnode/rn_mkcname.c,42
is_cname_attr(18,375
rn_mkcname(48,1005

lib/rnode/rn_mkpart.c,39
rn_mkpartd(10,214
rn_mkpart(123,3847

lib/rnode/rn_mkjob.c,62
rn_mkjobd(10,201
rn_resetugid(152,4526
rn_mkjobid(182,5087

lib/rnode/rn_mkstep.c,44
rn_mkjobstepd(9,204
rn_mkjobstep(159,4707

lib/rnode/rn_mknode.c,121
rn_mknoded(9,207
rn_mknode(123,3808
#define MAX_STATE_STR_LEN 211,6430
rn_mknstate(214,6471
rn_mkallocjob(345,10683

lib/rnode/rn_mkattr.c,185
rn_mkattrd(10,242
mkattr_knob(138,4085
(*get_rn_signfn(get_rn_signfn158,4572
mkattr_sig(196,5503
mkattr_xattr_ctx(255,7205
rn_mkattr(362,10270
getconfig_from_myattrnm(471,13636

lib/rnode/rn_mkctl.c,18
rn_mkctld(18,637

lib/rnode/rn_mkfsroot.c,43
is_fsroot_attr(9,112
rn_mkfsroot(60,1546

lib/rnode/rmfs_param.c,584
static int the_rn_paramtab_lock 11,214
rn_param_t rn_paramtab 12,251
rn_paramtab_lock(15,289
rn_paramtab_release(22,431
get_rn_params(41,872
set_rnparam_rn(53,1065
set_rnparam_time(73,1419
set_rnparam_ul(88,1712
get_rnparam_fsroot(104,2101
get_rnparam_rn(121,2412
get_rnparam_ulp(136,2702
get_rnparam_ul(151,2999
get_rnparam_uidp(167,3304
get_rnparam_modep(182,3588
get_rnparam_fsid(198,3866
get_rnparam_version(214,4133
get_rnparam_modep_offset(230,4410
rn_param_adddirty(249,4792
set_rnparam_fsroot(276,5423
set_rnparam_cname(300,6004
set_rnparam_jobd(324,6573

lib/rnode/rn_tab.c,369
rnode_t rnode_buildtab[rnode_buildtab49,1972
  { .rtype=rtype102,5612
  { .rtype=rtype104,5785
  { .rtype=rtype107,5960
  { .rtype=rtype109,6133
  { .rtype=rtype111,6307
  { .rtype=rtype113,6481
  { .rtype=rtype116,6656
  { .rtype=rtype119,6832
pt2rn_t p2r_typ_convtab[p2r_typ_convtab134,7335
pt2rn_t p2r_typ_rm_convtab[p2r_typ_rm_convtab165,8880

lib/rnode/rn_ctlroot.c,230
cleanup_file(10,68
cleanup(35,483
rn_ctlroot_umount(42,611
effluviate_one_rn(63,1080
effluviate_rnode(112,2586
effluviate_fstree(134,3061
rn_ctlroot_effluviate(156,3620
rn_ctlroot_write(167,3880
rn_ctlroot_check(196,4430

lib/rnode/rn_ctljobid.c,258
jobid_sigdesc_tab[jobid_sigdesc_tab9,126
rn_getsig(20,666
rn_ctljobid_sign(69,1982
rn_ctljobid_read(210,6288
rn_ctljobid_write(220,6534
rn_jobid_matchloose(234,6752
rn_jobid_loosematch(268,7719
rn_jobid_matchsig(273,7782
rn_jobid_addxattr(309,8534

lib/fuseops/namer.c,14
namer(12,172

lib/fuseops/rmfs_init.c,18
rmfs_init(12,183

lib/fuseops/rmfs_access.c,20
rmfs_access(12,188

lib/fuseops/rmfs_getattr.c,19
rmfs_getattr(5,24

lib/fuseops/rmfs_statfs.c,18
rmfs_statfs(5,24

lib/fuseops/rmfs_open.c,16
rmfs_open(5,24

lib/fuseops/rmfs_readdir.c,141
#define FILLSTAT_DEFAULT 4,20
#define FILLSTAT_DOT 5,47
#define FILLSTAT_DOTDOT 6,74
rmfs_readdir_statfiller(9,107
rmfs_readdir(58,1286

lib/fuseops/rmfs_read.c,16
rmfs_read(5,24

lib/fuseops/rmfs_trunc.c,17
rmfs_trunc(5,24

lib/fuseops/rmfs_write.c,17
rmfs_write(5,24

lib/fuseops/rmfs_xattr.c,68
rmfs_getxattr(5,24
rmfs_setxattr(65,1513
rmfs_listxattr(139,3202

lib/fuseops/rmfs_poll.c,16
rmfs_poll(5,24

lib/fuseops/rmfs_fuseops_tab.c,45
struct fuse_operations rmfs_file_ops 22,994

lib/fuseops/rmfs_mayaccess.c,23
rmfs_mayaccess(10,154

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/setval/set_val_bool.c,19
set_val_bool(5,25

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/setval/set_val_charptr.c,22
set_val_charptr(8,53

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/setval/set_val_l.c,16
set_val_l(5,25

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/setval/set_val_pid.c,18
set_val_pid(5,25

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/setval/set_val_ptr.c,18
set_val_ptr(8,54

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/setval/set_val_truth.c,20
set_val_truth(5,25

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/setval/set_val_ui.c,17
set_val_ui(5,25

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/setval/set_val_uid.c,18
set_val_uid(5,25

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/setval/set_val_ul.c,17
set_val_ul(5,25

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/cp/cp_subr.c,83
init_hash_cp 9,64
derefable_cp(29,362
dup_cp(41,558
init_dependency_cp(76,1444

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/cp/cp_Debug.c,27
Debug(6,27
isCtlr(19,248

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/cp/cp_effluviate.c,51
effluviate_one_cp(4,24
effluviate_config(38,1030

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/cp/cp_get.c,82
getconfig_fromnm(5,37
getconfig_fromnm_nohash(29,539
getconfig_fromhash(47,913

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/cp/cp_tab.c,399
config_param_t slurmfs_config[slurmfs_config52,2322
  { .nm=nm157,12256
ptyp2pname_tab[ptyp2pname_tab162,12454
slurm_fuse_opt_desc_t slurm_fopts[slurm_fopts226,14208
struct fuse_opt *p_fuseopts_tbl p_fuseopts_tbl301,16233
int              fuseopts_len 302,16308
int fo_max_len 304,16386
char *psrc2srcname_tab[psrc2srcname_tab311,16556
get_fo_max_len(326,16738
decode_psrc(331,16788

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/misc/djb_hash.c,46
djb_strtohash(23,815
djb_accumulate(44,1148

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/misc/misc_subr.c,41
psrc_msb(11,265
internal_strlen(23,413

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_alpha.c,18
typ_isalpha(5,26

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_alphanum.c,50
typ_isalphanum(6,58
typ_isalphanum_ornul(26,438

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_always_fails.c,23
typ_always_fails(6,87

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_check.c,17
typ_check(7,101

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_context.c,20
typ_context(14,233

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_dir.c,35
typ_dir(5,26
typ_direxist(28,510

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_file.c,36
typ_file(5,26
typ_filexist(29,386

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_host.c,15
typ_host(5,26

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_inout.c,39
typ_copyout(9,99
typ_copyin(153,3487

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_numeric.c,169
typ_numeric(5,26
typ_numsigned(25,378
typ_unsigned_int(40,644
typ_unsigned_int16(56,910
typ_unsigned_int32(72,1172
typ_numerictime(88,1434
typ_numtimsecs(96,1664

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_numericchar.c,22
typ_numericchar(5,26

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_opaque.c,17
typ_opaque(6,52

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_path.c,15
typ_path(5,26

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_slurm.c,212
typ_slurm_cluster(22,622
typ_slurm_controlmach(29,757
typ_slurm_partition(36,899
typ_slurm_node(43,1038
typ_slurm_job(50,1165
typ_slurm_step(57,1294
typ_slurm_allocjob(64,1434
typ_slurm_nodestate(71,1576

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_truth.c,266
typ_trilene(5,26
static struct truth_hash 20,297
  char *str;str21,324
  tri_t truth;22,337
  int   h;23,352
} truth_hash_tab[truth_hash_tab24,363
typ_boolean(46,1083
tri2str[tri2str87,1976
bool2str[bool2str89,2025
b2boolstr(92,2067
t2tristr(108,2358

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_xattr.c,16
typ_xattr(5,26

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/collect/collect_slurm_part.c,123
config_param_t partinfodesc_tab[partinfodesc_tab13,312
collectslurm_attr_part(34,1517
collectslurm_partitions(103,3227

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/collect/collect_slurm_node.c,118
config_param_t nodeinfodesc_tab[nodeinfodesc_tab12,311
collectslurm_attr_node(53,3096
collectslurm_nodes(172,6250

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/collect/collect_slurm_job.c,114
config_param_t jobinfodesc_tab[jobinfodesc_tab13,312
collectslurm_attr_job(57,3624
collectslurm_jobs(189,7243

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/collect/collect_slurm_step.c,121
config_param_t stepinfodesc_tab[stepinfodesc_tab14,313
collectslurm_attr_step(36,1759
collectslurm_jobsteps(114,3871

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/collect/collect_slurm.c,223
collectslurm_api_version(19,616
collectslurm_attr(50,1473
collectslurm_confparam(181,5924
set_val_slurm(226,7080
time_t slurm_update_time 369,10788
slurm_ctl_conf_t *p_slcnf p_slcnf370,10829
collect_slurm(373,10879

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/collect/collect_fuse.c,380
static int select_only_one 40,1270
parse_an_arg(43,1307
getfuseoptdesc_fromconfig(113,3278
construct_fuse_mountopts(141,4116
  enum { NOTHING 143,4192
  enum { NOTHING = 0, TERMINATOR 143,4192
  enum { NOTHING = 0, TERMINATOR = 1, OPT 143,4192
  enum { NOTHING = 0, TERMINATOR = 1, OPT = 2, NONOPT 143,4192
static int term_count 281,8517
collect_fuse_mountopts(284,8560

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/collect/collect_backingstore.c,525
tri_t claim_BackingStore(12,363
tri_t open_BackingStore(16,486
tri_t merge_BackingStore(20,575
tri_t requestWrite_BackingStore(24,678
tri_t write_modifiedrnode_toBackingStore(28,748
tri_t spawn_BackingStorelistener(32,811
prune_Backingstore(44,1086
claim_BackingStore(128,3084
spawn_exporter(189,4544
bs_processreq(214,5182
bs_handlelistenrequests(260,6562
spawn_listener(316,8109
spawn_BackingStorelistener(340,8649
merge_BackingStore(370,9432
open_BackingStore(483,13283
requestWrite_BackingStore(662,19102

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/collect/typ_slurm.c,41
ptyp_t slurm2basetyp[slurm2basetyp4,20

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/collect/collect_os.c,185
mkdir_varrun(10,127
varrun_opencp(43,816
collectos_pid(142,3499
#define _HOST_NAME_MAX 160,3925
collectos_hostname(164,3989
collectos_pidfile(195,4887
record_mountpoint(245,6320

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/collect/collect_predecessor.c,106
predecessor_alive(18,309
claim_varrun(138,3926
predecessor_umount(145,4083
collect_predstate(197,5658

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/collect/collect_macconf.c,52
collect_macconf(13,293
collectmac_context(60,1485

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/collect/collect_env.c,18
collect_env(7,37

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/collect/collect_cp.c,17
collect_cp(6,36

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/collect/calcul.c,103
calcul_derived(5,35
calcul_isController(15,188
calcul_rnodepool(43,960
calcul_unmountwait(111,3122

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/collect/collect_default.c,22
collect_default(7,37

slu_rmfs/ingest.c,91
char *src2str[src2str56,2228
config_consistent_complete(75,2508
ingest_config(139,4098

slu_rmfs/mount.c,72
already_mounted(11,116
reclaim_files(65,1631
request_unmount(88,2278

slu_rmfs/usage.c,120
char   *pusage_msg;pusage_msg9,80
Usage(16,181
static int caught_in_a_loop 27,449
ErrExit(30,488
CleanExit(56,916

slu_rmfs/slu_rmfs.c,13
main(16,410

/home/sts/lanl/sw/slurm/slurmfs/SOURCES/lib/conf/typ/typ_table.c,0

lib/rnode/rn_README.c,0

inc/linkage/slurm.h,0

/usr/include/linux/stddef.h,0
